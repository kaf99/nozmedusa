{
	"id": 61202,
	"name": "notification-service",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 61203,
			"name": "INotificationModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 61204,
					"name": "createNotifications",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "notification/service.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L29"
						},
						{
							"fileName": "notification/service.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 61205,
							"name": "createNotifications",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to send multiple notifications and store them in the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of sent notifications."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst notifications = await notificationModuleService.createNotifications([\n  {\n    to: \"john@doe.me\",\n    template: \"order-confirmation\",\n    channel: \"email\",\n  },\n  {\n    to: \"+38975123456\",\n    template: \"order-confirmation\",\n    channel: \"sms\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "notification/service.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 61206,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The notifications to be sent."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
												"qualifiedName": "CreateNotificationDTO"
											},
											"name": "CreateNotificationDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 61207,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
											"qualifiedName": "Context"
										},
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
												"qualifiedName": "NotificationDTO"
											},
											"name": "NotificationDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 61208,
							"name": "createNotifications",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to send a notification, and store the request in the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The sent notification."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst notification = await notificationModuleService.createNotifications({\n  to: \"john@doe.me\",\n  template: \"order-confirmation\",\n  channel: \"email\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "notification/service.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L48"
								}
							],
							"parameters": [
								{
									"id": 61209,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The notification to be sent."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
											"qualifiedName": "CreateNotificationDTO"
										},
										"name": "CreateNotificationDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 61210,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
											"qualifiedName": "Context"
										},
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
											"qualifiedName": "NotificationDTO"
										},
										"name": "NotificationDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 61211,
					"name": "retrieveNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "notification/service.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L89"
						}
					],
					"signatures": [
						{
							"id": 61212,
							"name": "retrieveNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a notification by its ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved notification."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a notification by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst notification =\n  await notificationModuleService.retrieveNotification(\"noti_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst notification = await notificationModuleService.retrieveNotification(\n  \"noti_123\",\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "notification/service.ts",
									"line": 89,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L89"
								}
							],
							"parameters": [
								{
									"id": 61213,
									"name": "notificationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the notification to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 61214,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the notification is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a notification."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "FindConfig"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
													"qualifiedName": "NotificationDTO"
												},
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 61215,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
											"qualifiedName": "Context"
										},
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
											"qualifiedName": "NotificationDTO"
										},
										"name": "NotificationDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 61216,
					"name": "listNotifications",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "notification/service.ts",
							"line": 149,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L149"
						}
					],
					"signatures": [
						{
							"id": 61217,
							"name": "listNotifications",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of notifications based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of notifications."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of notifications using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst notifications = await notificationModuleService.listNotifications({\n  id: [\"noti_123\", \"noti_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "notification/service.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L149"
								}
							],
							"parameters": [
								{
									"id": 61218,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved notifications."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
											"qualifiedName": "FilterableNotificationProps"
										},
										"name": "FilterableNotificationProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 61219,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a notification."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "FindConfig"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
													"qualifiedName": "NotificationDTO"
												},
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 61220,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
											"qualifiedName": "Context"
										},
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
												"qualifiedName": "NotificationDTO"
											},
											"name": "NotificationDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 61221,
					"name": "listAndCountNotifications",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "notification/service.ts",
							"line": 212,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L212"
						}
					],
					"signatures": [
						{
							"id": 61222,
							"name": "listAndCountNotifications",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of notifications along with the total count of available notifications satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of notifications along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of notifications using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications({\n    id: [\"noti_123\", \"noti_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "notification/service.ts",
									"line": 212,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L212"
								}
							],
							"parameters": [
								{
									"id": 61223,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved notifications."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
											"qualifiedName": "FilterableNotificationProps"
										},
										"name": "FilterableNotificationProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 61224,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a notification."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "FindConfig"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
													"qualifiedName": "NotificationDTO"
												},
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 61225,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
											"qualifiedName": "Context"
										},
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
														"qualifiedName": "NotificationDTO"
													},
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						61204,
						61211,
						61216,
						61221
					]
				}
			],
			"sources": [
				{
					"fileName": "notification/service.ts",
					"line": 7,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/a503bbe5963f95710f599c466dfb2c3956914e06/packages/core/types/src/notification/service.ts#L7"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
						"qualifiedName": "IModuleService"
					},
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				61203
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"61202": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": ""
		},
		"61203": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService"
		},
		"61204": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"61205": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"61206": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"61207": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"61208": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"61209": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"61210": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"61211": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"61212": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"61213": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "notificationId"
		},
		"61214": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"61215": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"61216": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"61217": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"61218": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"61219": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"61220": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"61221": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"61222": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"61223": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"61224": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"61225": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/notification/service.ts"
		},
		"reflections": {
			"1": 61202
		}
	}
}
