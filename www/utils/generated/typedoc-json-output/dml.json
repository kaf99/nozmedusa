{
	"id": 41780,
	"name": "dml",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 41781,
			"name": "entity-builder",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 41782,
					"name": "DefineOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 31,
							"character": 12,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L31"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 41783,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 41784,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data model's name."
													}
												]
											},
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 37,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L37"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41785,
											"name": "tableName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the data model's table in the database."
													}
												]
											},
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 41,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L41"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												41784,
												41785
											]
										}
									],
									"sources": [
										{
											"fileName": "utils/src/dml/entity-builder.ts",
											"line": 33,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L33"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 41786,
					"name": "ManyToManyOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 44,
							"character": 12,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L44"
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "RelationshipOptions"
								},
								"name": "RelationshipOptions",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 41787,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41788,
													"name": "pivotTable",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The name of the pivot table\ncreated in the database for this relationship."
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 51,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L51"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 41790,
													"name": "joinColumn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The column name in the pivot table that for the current entity"
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 59,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L59"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												},
												{
													"id": 41791,
													"name": "inverseJoinColumn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The column name in the pivot table for the opposite entity"
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 63,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L63"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41788,
														41790,
														41791
													]
												}
											],
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 46,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L46"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 41792,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41794,
													"name": "pivotEntity",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A function that returns the data model\nrepresenting the pivot table created in the\ndatabase for this relationship."
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 75,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L75"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 41795,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 75,
																	"character": 22,
																	"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L75"
																}
															],
															"signatures": [
																{
																	"id": 41796,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 41881,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "DmlEntity",
																		"package": "@medusajs/utils"
																	}
																}
															]
														}
													}
												},
												{
													"id": 41797,
													"name": "joinColumn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The column name in the pivot table that for the current entity"
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 79,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L79"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												},
												{
													"id": 41798,
													"name": "inverseJoinColumn",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The column name in the pivot table for the opposite entity"
															}
														]
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 83,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L83"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41794,
														41797,
														41798
													]
												}
											],
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 65,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L65"
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 41799,
					"name": "EntityBuilder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Entity builder exposes the API to create an entity and define its\nschema using the shorthand methods."
							}
						]
					},
					"children": [
						{
							"id": 41800,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 41801,
									"name": "EntityBuilder",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 41799,
										"name": "EntityBuilder",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 41805,
							"name": "define",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L125"
								}
							],
							"signatures": [
								{
									"id": 41806,
									"name": "define",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method defines a data model."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text(),\n})\n\nexport default MyCustom\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "utils/src/dml/entity-builder.ts",
											"line": 125,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L125"
										}
									],
									"typeParameters": [
										{
											"id": 41807,
											"name": "Schema",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of the accepted schema in the second parameter of the method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "DMLSchema"
												},
												"name": "DMLSchema",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41808,
											"name": "TConfig",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "IDmlEntityConfig"
												},
												"name": "IDmlEntityConfig",
												"package": "@medusajs/types"
											}
										}
									],
									"parameters": [
										{
											"id": 41809,
											"name": "nameOrConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Either the data model's name, or configurations to name the data model.\nThe data model's name must be unique."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41808,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 41810,
											"name": "schema",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The schema of the data model's properties."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41807,
												"name": "Schema",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41881,
										"typeArguments": [
											{
												"type": "reference",
												"target": 41879,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41807,
														"name": "Schema",
														"package": "@medusajs/utils",
														"refersToTypeParameter": true
													}
												],
												"name": "DMLEntitySchemaBuilder",
												"package": "@medusajs/utils"
											},
											{
												"type": "reference",
												"target": 41808,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41800
							]
						},
						{
							"title": "Methods",
							"children": [
								41805,
								41811,
								41816,
								41818,
								41820,
								41822,
								41824,
								41826,
								41828,
								41830,
								41832,
								41834,
								41838,
								41857,
								41867,
								41872
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 91,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L91"
						}
					]
				},
				{
					"id": 41877,
					"name": "model",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 510,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L510"
						}
					],
					"type": {
						"type": "reference",
						"target": 41799,
						"name": "EntityBuilder",
						"package": "@medusajs/utils"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						41799
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						41782,
						41786
					]
				},
				{
					"title": "Variables",
					"children": [
						41877
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/src/dml/entity-builder.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L1"
				}
			]
		},
		{
			"id": 41878,
			"name": "entity",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 41879,
					"name": "DMLEntitySchemaBuilder",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity.ts",
							"line": 20,
							"character": 12,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L20"
						}
					],
					"typeParameters": [
						{
							"id": 41880,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "DMLSchema"
								},
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-big-number-properties.ts",
									"qualifiedName": "DMLSchemaWithBigNumber"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41880,
										"name": "Schema",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "DMLSchemaWithBigNumber",
								"package": "@medusajs/utils"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/helpers/entity-builder/create-default-properties.ts",
									"qualifiedName": "DMLSchemaDefaults"
								},
								"name": "DMLSchemaDefaults",
								"package": "@medusajs/utils"
							},
							{
								"type": "reference",
								"target": 41880,
								"name": "Schema",
								"package": "@medusajs/utils",
								"refersToTypeParameter": true
							}
						]
					}
				},
				{
					"id": 41881,
					"name": "DmlEntity",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dml entity is a representation of a DML model with a unique\nname, its schema and relationships."
							}
						]
					},
					"children": [
						{
							"id": 41915,
							"name": "[IsDmlEntity]",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 73,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L73"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 41891,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 75,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L75"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "InferDmlEntityNameFromConfig"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41888,
										"name": "TConfig",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.TConfig",
										"refersToTypeParameter": true
									}
								],
								"name": "InferDmlEntityNameFromConfig",
								"package": "@medusajs/types"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IDmlEntity.name"
							}
						},
						{
							"id": 41892,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 76,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L76"
								}
							],
							"type": {
								"type": "reference",
								"target": 41887,
								"name": "Schema",
								"package": "@medusajs/utils",
								"qualifiedName": "DmlEntity.Schema",
								"refersToTypeParameter": true
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "IDmlEntity.schema"
							}
						},
						{
							"id": 41885,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L84"
								}
							],
							"signatures": [
								{
									"id": 41886,
									"name": "DmlEntity",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "utils/src/dml/entity.ts",
											"line": 84,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L84"
										}
									],
									"typeParameters": [
										{
											"id": 41887,
											"name": "Schema",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "DMLSchema"
												},
												"name": "DMLSchema",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41888,
											"name": "TConfig",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "IDmlEntityConfig"
												},
												"name": "IDmlEntityConfig",
												"package": "@medusajs/types"
											}
										}
									],
									"parameters": [
										{
											"id": 41889,
											"name": "nameOrConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41888,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.TConfig",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 41890,
											"name": "schema",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41887,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41881,
										"typeArguments": [
											{
												"type": "reference",
												"target": 41887,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 41888,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.TConfig",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 41882,
							"name": "isDmlEntity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 98,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L98"
								}
							],
							"signatures": [
								{
									"id": 41883,
									"name": "isDmlEntity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A static method to check if an entity is an instance of DmlEntity.\nIt allows us to identify a specific object as being an instance of\nDmlEntity."
											}
										]
									},
									"sources": [
										{
											"fileName": "utils/src/dml/entity.ts",
											"line": 98,
											"character": 9,
											"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L98"
										}
									],
									"parameters": [
										{
											"id": 41884,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "entity",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": 41881,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "DmlEntity",
											"package": "@medusajs/utils"
										}
									}
								}
							]
						},
						{
							"id": 41897,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L105"
								}
							],
							"signatures": [
								{
									"id": 41898,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parse entity to get its underlying information"
											}
										]
									},
									"sources": [
										{
											"fileName": "utils/src/dml/entity.ts",
											"line": 105,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L105"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41899,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41900,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 106,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L106"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "InferDmlEntityNameFromConfig"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 41888,
																"name": "TConfig",
																"package": "@medusajs/utils",
																"qualifiedName": "DmlEntity.TConfig",
																"refersToTypeParameter": true
															}
														],
														"name": "InferDmlEntityNameFromConfig",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 41901,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 107,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L107"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 41902,
													"name": "schema",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 108,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L108"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "DMLSchema"
														},
														"name": "DMLSchema",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 41903,
													"name": "cascades",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 109,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L109"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "EntityCascades"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "EntityCascades",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 41904,
													"name": "indexes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 110,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L110"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "EntityIndex"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 41887,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"qualifiedName": "DmlEntity.Schema",
																	"refersToTypeParameter": true
																}
															],
															"name": "EntityIndex",
															"package": "@medusajs/types"
														}
													}
												},
												{
													"id": 41905,
													"name": "checks",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "utils/src/dml/entity.ts",
															"line": 111,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L111"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "CheckConstraint"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 41887,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"qualifiedName": "DmlEntity.Schema",
																	"refersToTypeParameter": true
																}
															],
															"name": "CheckConstraint",
															"package": "@medusajs/types"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41900,
														41901,
														41902,
														41903,
														41904,
														41905
													]
												}
											],
											"sources": [
												{
													"fileName": "utils/src/dml/entity.ts",
													"line": 105,
													"character": 11,
													"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L105"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 41912,
							"name": "checks",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 253,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L253"
								}
							],
							"signatures": [
								{
									"id": 41913,
									"name": "checks",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "utils/src/dml/entity.ts",
											"line": 253,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L253"
										}
									],
									"parameters": [
										{
											"id": 41914,
											"name": "checks",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "CheckConstraint"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 41887,
															"name": "Schema",
															"package": "@medusajs/utils",
															"qualifiedName": "DmlEntity.Schema",
															"refersToTypeParameter": true
														}
													],
													"name": "CheckConstraint",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 41881,
										"typeArguments": [
											{
												"type": "reference",
												"target": 41887,
												"name": "Schema",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.Schema",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 41888,
												"name": "TConfig",
												"package": "@medusajs/utils",
												"qualifiedName": "DmlEntity.TConfig",
												"refersToTypeParameter": true
											}
										],
										"name": "DmlEntity",
										"package": "@medusajs/utils"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41885
							]
						},
						{
							"title": "Properties",
							"children": [
								41915,
								41891,
								41892
							]
						},
						{
							"title": "Methods",
							"children": [
								41882,
								41897,
								41906,
								41909,
								41912
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/src/dml/entity.ts",
							"line": 68,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L68"
						}
					],
					"typeParameters": [
						{
							"id": 41916,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "DMLSchema"
								},
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 41917,
							"name": "TConfig",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
									"qualifiedName": "IDmlEntityConfig"
								},
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
								"qualifiedName": "IDmlEntity"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 41887,
									"name": "Schema",
									"package": "@medusajs/utils",
									"qualifiedName": "DmlEntity.Schema",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 41888,
									"name": "TConfig",
									"package": "@medusajs/utils",
									"qualifiedName": "DmlEntity.TConfig",
									"refersToTypeParameter": true
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						41881
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						41879
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/src/dml/entity.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L1"
				}
			]
		},
		{
			"id": 41918,
			"name": "properties/base",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 41919,
					"name": "BaseProperty",
					"variant": "declaration",
					"kind": 128,
					"flags": {
						"isAbstract": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The BaseProperty class offers shared affordances to define\nproperty classes"
							}
						]
					},
					"children": [
						{
							"id": 41920,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 41921,
									"name": "BaseProperty",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"typeParameters": [
										{
											"id": 41922,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"type": {
										"type": "reference",
										"target": 41919,
										"typeArguments": [
											{
												"type": "reference",
												"target": 41922,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										],
										"name": "BaseProperty",
										"package": "@medusajs/utils"
									}
								}
							]
						},
						{
							"id": 41929,
							"name": "dataType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isProtected": true,
								"isAbstract": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The runtime dataType for the schema. It is not the same as\nthe \"$dataType\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 25,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L25"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 41930,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 41931,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/dist/dml/index.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "KnownDataTypes"
												},
												"name": "KnownDataTypes",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41932,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "types/dist/dml/index.d.ts",
													"line": 46,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												41931,
												41932
											]
										}
									],
									"sources": [
										{
											"fileName": "types/dist/dml/index.d.ts",
											"line": 44,
											"character": 14
										}
									]
								}
							}
						},
						{
							"id": 41933,
							"name": "$dataType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A type-only property to infer the JavScript data-type\nof the schema property"
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 31,
									"character": 10,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L31"
								}
							],
							"type": {
								"type": "reference",
								"target": 41922,
								"name": "T",
								"package": "@medusajs/utils",
								"qualifiedName": "BaseProperty.T",
								"refersToTypeParameter": true
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PropertyType.$dataType"
							}
						},
						{
							"id": 41947,
							"name": "parse",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L152"
								}
							],
							"signatures": [
								{
									"id": 41948,
									"name": "parse",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the serialized metadata"
											}
										]
									},
									"sources": [
										{
											"fileName": "utils/src/dml/properties/base.ts",
											"line": 152,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L152"
										}
									],
									"parameters": [
										{
											"id": 41949,
											"name": "fieldName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "PropertyMetadata"
										},
										"name": "PropertyMetadata",
										"package": "@medusajs/types"
									},
									"implementationOf": {
										"type": "reference",
										"target": -1,
										"name": "PropertyType.parse"
									}
								}
							],
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PropertyType.parse"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								41920
							]
						},
						{
							"title": "Properties",
							"children": [
								41929,
								41933
							]
						},
						{
							"title": "Methods",
							"children": [
								41934,
								41936,
								41938,
								41941,
								41944,
								41947
							]
						}
					],
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 9,
							"character": 22,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L9"
						}
					],
					"typeParameters": [
						{
							"id": 41950,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
								"qualifiedName": "PropertyType"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 41922,
									"name": "T",
									"package": "@medusajs/utils",
									"qualifiedName": "BaseProperty.T",
									"refersToTypeParameter": true
								}
							],
							"name": "PropertyType",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						41919
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/src/dml/properties/base.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L1"
				}
			]
		},
		{
			"id": 41951,
			"name": "Property Types",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41811,
					"name": "id",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 156,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L156"
						}
					],
					"signatures": [
						{
							"id": 41812,
							"name": "id",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines an automatically generated string ID property.\n\nYou must use the \"primaryKey\" modifier to mark the property as the\nprimary key."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst User = model.define(\"User\", {\n  id: model.id().primaryKey(),\n  // ...\n})\n\nexport default User\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 156,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L156"
								}
							],
							"parameters": [
								{
									"id": 41813,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41814,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41815,
													"name": "prefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 156,
															"character": 17,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L156"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41815
													]
												}
											],
											"sources": [
												{
													"fileName": "utils/src/dml/entity-builder.ts",
													"line": 156,
													"character": 15,
													"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L156"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/id.ts",
									"qualifiedName": "IdProperty"
								},
								"name": "IdProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41816,
					"name": "text",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 175,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 41817,
							"name": "text",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a string property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  name: model.text(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 175,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L175"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/text.ts",
									"qualifiedName": "TextProperty"
								},
								"name": "TextProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41818,
					"name": "boolean",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 194,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L194"
						}
					],
					"signatures": [
						{
							"id": 41819,
							"name": "boolean",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a boolean property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  hasAccount: model.boolean(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L194"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/boolean.ts",
									"qualifiedName": "BooleanProperty"
								},
								"name": "BooleanProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41820,
					"name": "number",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 213,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L213"
						}
					],
					"signatures": [
						{
							"id": 41821,
							"name": "number",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a number property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  age: model.number(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 213,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L213"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/number.ts",
									"qualifiedName": "NumberProperty"
								},
								"name": "NumberProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41822,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 237,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 41823,
							"name": "bigNumber",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a number property that expects large numbers, such as prices."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  price: model.bigNumber(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 237,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L237"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/big-number.ts",
									"qualifiedName": "BigNumberProperty"
								},
								"name": "BigNumberProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41824,
					"name": "float",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 259,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L259"
						}
					],
					"signatures": [
						{
							"id": 41825,
							"name": "float",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a float property that allows for\nvalues with decimal places"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "2.1.2"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"tax\", {\n  tax_rate: model.float(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 259,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L259"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/float.ts",
									"qualifiedName": "FloatProperty"
								},
								"name": "FloatProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41828,
					"name": "array",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 298,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L298"
						}
					],
					"signatures": [
						{
							"id": 41829,
							"name": "array",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines an array of strings property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  names: model.array(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 298,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L298"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/array.ts",
									"qualifiedName": "ArrayProperty"
								},
								"name": "ArrayProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41830,
					"name": "dateTime",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 317,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L317"
						}
					],
					"signatures": [
						{
							"id": 41831,
							"name": "dateTime",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a timestamp property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  date_of_birth: model.dateTime(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 317,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L317"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/date-time.ts",
									"qualifiedName": "DateTimeProperty"
								},
								"name": "DateTimeProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41832,
					"name": "json",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 336,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L336"
						}
					],
					"signatures": [
						{
							"id": 41833,
							"name": "json",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a property whose value is a stringified JSON object."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  metadata: model.json(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 336,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L336"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/json.ts",
									"qualifiedName": "JSONProperty"
								},
								"name": "JSONProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41834,
					"name": "enum",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 359,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L359"
						}
					],
					"signatures": [
						{
							"id": 41835,
							"name": "enum",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a property whose value can only be one of the specified values."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  color: model.enum([\"black\", \"white\"]),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 359,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L359"
								}
							],
							"typeParameters": [
								{
									"id": 41836,
									"name": "Values",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of possible values. By default, it's "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
													"qualifiedName": "EnumLike"
												},
												"name": "EnumLike",
												"package": "@medusajs/utils"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 41837,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of possible values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41836,
										"name": "Values",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/enum.ts",
									"qualifiedName": "EnumProperty"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41836,
										"name": "Values",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "EnumProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						41811,
						41816,
						41818,
						41820,
						41822,
						41824,
						41828,
						41830,
						41832,
						41834
					]
				}
			]
		},
		{
			"id": 41952,
			"name": "Property",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41826,
					"name": "autoincrement",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 279,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L279"
						}
					],
					"signatures": [
						{
							"id": 41827,
							"name": "autoincrement",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines an autoincrement property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  serial_id: model.autoincrement(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 279,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L279"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/autoincrement.ts",
									"qualifiedName": "AutoIncrementProperty"
								},
								"name": "AutoIncrementProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						41826
					]
				}
			]
		},
		{
			"id": 41953,
			"name": "Relationship Methods",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41838,
					"name": "hasOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 389,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L389"
						},
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 396,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L396"
						},
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 402,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L402"
						}
					],
					"signatures": [
						{
							"id": 41839,
							"name": "hasOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a relationship between two data models,\nwhere the owner of the relationship has one record of the related\ndata model.\n\nFor example: A user \"hasOne\" email.\n\nUse the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "belongsTo",
										"target": 41857
									},
									{
										"kind": "text",
										"text": " method to define the inverse of this relationship in\nthe other data model."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst User = model.define(\"user\", {\n  id: model.id(),\n  email: model.hasOne(() => Email),\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 389,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L389"
								}
							],
							"typeParameters": [
								{
									"id": 41840,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								},
								{
									"id": 41841,
									"name": "ForeignKeyName",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 41842,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41840,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 41843,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 41844,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41845,
															"name": "mappedBy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
																	},
																	{
																		"kind": "code",
																		"text": "`belongsTo`"
																	},
																	{
																		"kind": "text",
																		"text": " and "
																	},
																	{
																		"kind": "code",
																		"text": "`manyToMany`"
																	},
																	{
																		"kind": "text",
																		"text": "\nrelationship method."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "types/dist/dml/index.d.ts",
																	"line": 73,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41845
															]
														}
													],
													"sources": [
														{
															"fileName": "types/dist/dml/index.d.ts",
															"line": 67,
															"character": 34
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 41846,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41847,
															"name": "foreignKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 392,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L392"
																}
															],
															"type": {
																"type": "literal",
																"value": true
															}
														},
														{
															"id": 41848,
															"name": "foreignKeyName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 393,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L393"
																}
															],
															"type": {
																"type": "reference",
																"target": 41841,
																"name": "ForeignKeyName",
																"package": "@medusajs/utils",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41847,
																41848
															]
														}
													],
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 391,
															"character": 35,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L391"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one-fk.ts",
									"qualifiedName": "HasOneWithForeignKey"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41840,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 41841,
										"name": "ForeignKeyName",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "HasOneWithForeignKey",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 41849,
							"name": "hasOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a relationship between two data models,\nwhere the owner of the relationship has one record of the related\ndata model.\n\nFor example: A user \"hasOne\" email.\n\nUse the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "belongsTo",
										"target": 41857
									},
									{
										"kind": "text",
										"text": " method to define the inverse of this relationship in\nthe other data model."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst User = model.define(\"user\", {\n  id: model.id(),\n  email: model.hasOne(() => Email),\n})\n```"
											}
										]
									},
									{
										"tag": "@customNamespace",
										"content": [
											{
												"kind": "text",
												"text": "Relationship Methods"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 396,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L396"
								}
							],
							"typeParameters": [
								{
									"id": 41850,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 41851,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41850,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 41852,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 41853,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41854,
															"name": "mappedBy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
																	},
																	{
																		"kind": "code",
																		"text": "`belongsTo`"
																	},
																	{
																		"kind": "text",
																		"text": " and "
																	},
																	{
																		"kind": "code",
																		"text": "`manyToMany`"
																	},
																	{
																		"kind": "text",
																		"text": "\nrelationship method."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "types/dist/dml/index.d.ts",
																	"line": 73,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41854
															]
														}
													],
													"sources": [
														{
															"fileName": "types/dist/dml/index.d.ts",
															"line": 67,
															"character": 34
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 41855,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41856,
															"name": "foreignKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 399,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L399"
																}
															],
															"type": {
																"type": "literal",
																"value": false
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41856
															]
														}
													],
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 398,
															"character": 36,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L398"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-one.ts",
									"qualifiedName": "HasOne"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41850,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "HasOne",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41857,
					"name": "belongsTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 441,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L441"
						}
					],
					"signatures": [
						{
							"id": 41858,
							"name": "belongsTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines the inverse of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "hasOne",
										"target": 41838
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "hasMany",
										"target": 41867
									},
									{
										"kind": "text",
										"text": " relationship.\n\nFor example, a product \"belongsTo\" a store."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst Product = model.define(\"product\", {\n  id: model.id(),\n  store: model.belongsTo(() => Store, {\n    mappedBy: \"products\",\n  }),\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 441,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L441"
								}
							],
							"typeParameters": [
								{
									"id": 41859,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								},
								{
									"id": 41860,
									"name": "ForeignKeyName",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "undefined"
									}
								}
							],
							"parameters": [
								{
									"id": 41861,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41859,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 41862,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 41863,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41864,
															"name": "mappedBy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
																	},
																	{
																		"kind": "code",
																		"text": "`belongsTo`"
																	},
																	{
																		"kind": "text",
																		"text": " and "
																	},
																	{
																		"kind": "code",
																		"text": "`manyToMany`"
																	},
																	{
																		"kind": "text",
																		"text": "\nrelationship method."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "types/dist/dml/index.d.ts",
																	"line": 73,
																	"character": 4
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41864
															]
														}
													],
													"sources": [
														{
															"fileName": "types/dist/dml/index.d.ts",
															"line": 67,
															"character": 34
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 41865,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41866,
															"name": "foreignKeyName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "utils/src/dml/entity-builder.ts",
																	"line": 444,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L444"
																}
															],
															"type": {
																"type": "reference",
																"target": 41860,
																"name": "ForeignKeyName",
																"package": "@medusajs/utils",
																"refersToTypeParameter": true
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41866
															]
														}
													],
													"sources": [
														{
															"fileName": "utils/src/dml/entity-builder.ts",
															"line": 443,
															"character": 36,
															"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L443"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/belongs-to.ts",
									"qualifiedName": "BelongsTo"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41859,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 41860,
										"name": "ForeignKeyName",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "BelongsTo",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41867,
					"name": "hasMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 473,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L473"
						}
					],
					"signatures": [
						{
							"id": 41868,
							"name": "hasMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a relationship between two data models,\nwhere the owner of the relationship has many records of the related\ndata model, but the related data model only has one owner.\n\nFor example, a store \"hasMany\" products."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst Store = model.define(\"store\", {\n  id: model.id(),\n  products: model.hasMany(() => Product),\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 473,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L473"
								}
							],
							"typeParameters": [
								{
									"id": 41869,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 41870,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41869,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 41871,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "RelationshipOptions"
										},
										"name": "RelationshipOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/has-many.ts",
									"qualifiedName": "HasMany"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41869,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "HasMany",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41872,
					"name": "manyToMany",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity-builder.ts",
							"line": 505,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L505"
						}
					],
					"signatures": [
						{
							"id": 41873,
							"name": "manyToMany",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines a relationship between two data models,\nwhere both data models have many related records.\n\nFor example, an order is associated with many products, and a product\nis associated with many orders."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst Order = model.define(\"order\", {\n  id: model.id(),\n  products: model.manyToMany(() => Product),\n})\n\nconst Product = model.define(\"product\", {\n  id: model.id(),\n  order: model.manyToMany(() => Order),\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity-builder.ts",
									"line": 505,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity-builder.ts#L505"
								}
							],
							"typeParameters": [
								{
									"id": 41874,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the entity builder passed as a first parameter. By default, it's\na function returning the related model."
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 41875,
									"name": "entityBuilder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A function that returns the data model this model is related to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41874,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 41876,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The relationship's options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41786,
										"name": "ManyToManyOptions",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/relations/many-to-many.ts",
									"qualifiedName": "ManyToMany"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41874,
										"name": "T",
										"package": "@medusajs/utils",
										"refersToTypeParameter": true
									}
								],
								"name": "ManyToMany",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						41838,
						41857,
						41867,
						41872
					]
				}
			]
		},
		{
			"id": 41954,
			"name": "Model Methods",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41906,
					"name": "cascades",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity.ts",
							"line": 146,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L146"
						}
					],
					"signatures": [
						{
							"id": 41907,
							"name": "cascades",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method configures which related data models an operation, such as deletion,\nshould be cascaded to.\n\nFor example, if a store is deleted, its product should also be deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst Store = model.define(\"store\", {\n  id: model.id(),\n  products: model.hasMany(() => Product),\n})\n.cascades({\n  delete: [\"products\"],\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 146,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L146"
								}
							],
							"parameters": [
								{
									"id": 41908,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cascades configurations. They object's keys are the names of\nthe actions, such as "
											},
											{
												"kind": "code",
												"text": "`deleted`"
											},
											{
												"kind": "text",
												"text": ", and the value is an array of relations that the\naction should be cascaded to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "EntityCascades"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "ExtractEntityRelations"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 41887,
														"name": "Schema",
														"package": "@medusajs/utils",
														"qualifiedName": "DmlEntity.Schema",
														"refersToTypeParameter": true
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "hasOne"
															},
															{
																"type": "literal",
																"value": "hasOneWithFK"
															},
															{
																"type": "literal",
																"value": "hasMany"
															}
														]
													}
												],
												"name": "ExtractEntityRelations",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "ExtractEntityRelations"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 41887,
														"name": "Schema",
														"package": "@medusajs/utils",
														"qualifiedName": "DmlEntity.Schema",
														"refersToTypeParameter": true
													},
													{
														"type": "literal",
														"value": "manyToMany"
													}
												],
												"name": "ExtractEntityRelations",
												"package": "@medusajs/types"
											}
										],
										"name": "EntityCascades",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 41881,
								"typeArguments": [
									{
										"type": "reference",
										"target": 41887,
										"name": "Schema",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.Schema",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 41888,
										"name": "TConfig",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.TConfig",
										"refersToTypeParameter": true
									}
								],
								"name": "DmlEntity",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41909,
					"name": "indexes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/entity.ts",
							"line": 243,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 41910,
							"name": "indexes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines indices on the data model. An index can be on multiple columns\nand have conditions."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of a simple index:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text(),\n  age: model.number()\n}).indexes([\n  {\n    on: [\"name\", \"age\"],\n  },\n])\n\nexport default MyCustom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo add a condition on the index, use the "
											},
											{
												"kind": "code",
												"text": "`where`"
											},
											{
												"kind": "text",
												"text": " option:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text(),\n  age: model.number()\n}).indexes([\n  {\n    on: [\"name\", \"age\"],\n    where: {\n      age: 30\n    }\n  },\n])\n\nexport default MyCustom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThe condition can also be a negation. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text(),\n  age: model.number()\n}).indexes([\n  {\n    on: [\"name\", \"age\"],\n    where: {\n      age: {\n        $ne: 30\n      }\n    }\n  },\n])\n\nexport default MyCustom\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIn this example, the index is created when the value of "
											},
											{
												"kind": "code",
												"text": "`age`"
											},
											{
												"kind": "text",
												"text": " doesn't equal "
											},
											{
												"kind": "code",
												"text": "`30`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/entity.ts",
									"line": 243,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/entity.ts#L243"
								}
							],
							"parameters": [
								{
									"id": 41911,
									"name": "indexes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index's configuration."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "EntityIndex"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 41887,
													"name": "Schema",
													"package": "@medusajs/utils",
													"qualifiedName": "DmlEntity.Schema",
													"refersToTypeParameter": true
												},
												{
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "QueryCondition"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 41887,
																	"name": "Schema",
																	"package": "@medusajs/utils",
																	"qualifiedName": "DmlEntity.Schema",
																	"refersToTypeParameter": true
																}
															],
															"name": "QueryCondition",
															"package": "@medusajs/types"
														}
													]
												}
											],
											"name": "EntityIndex",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 41881,
								"typeArguments": [
									{
										"type": "reference",
										"target": 41887,
										"name": "Schema",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.Schema",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 41888,
										"name": "TConfig",
										"package": "@medusajs/utils",
										"qualifiedName": "DmlEntity.TConfig",
										"refersToTypeParameter": true
									}
								],
								"name": "DmlEntity",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						41906,
						41909
					]
				}
			]
		},
		{
			"id": 41955,
			"name": "Property Configuration Methods",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41934,
					"name": "nullable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 41935,
							"name": "nullable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method indicates that a property's value can be "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  price: model.bigNumber().nullable(),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L48"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/nullable.ts",
									"qualifiedName": "NullableModifier"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41922,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 41919,
										"typeArguments": [
											{
												"type": "reference",
												"target": 41922,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										],
										"name": "BaseProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "NullableModifier",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41936,
					"name": "computed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 69,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L69"
						}
					],
					"signatures": [
						{
							"id": 41937,
							"name": "computed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method indicated that the property is a computed property.\nComputed properties are not stored in the database but are\ncomputed on the fly."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n calculated_price: model.bigNumber().computed(),\n // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 69,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L69"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/utils/src/dml/properties/computed.ts",
									"qualifiedName": "ComputedProperty"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 41922,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										]
									},
									{
										"type": "reference",
										"target": 41919,
										"typeArguments": [
											{
												"type": "reference",
												"target": 41922,
												"name": "T",
												"package": "@medusajs/utils",
												"qualifiedName": "BaseProperty.T",
												"refersToTypeParameter": true
											}
										],
										"name": "BaseProperty",
										"package": "@medusajs/utils"
									}
								],
								"name": "ComputedProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41938,
					"name": "index",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 93,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L93"
						}
					],
					"signatures": [
						{
							"id": 41939,
							"name": "index",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines an index on a property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  id: model.id(),\n  name: model.text().index(\n    \"IDX_MY_CUSTOM_NAME\"\n  ),\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 93,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L93"
								}
							],
							"parameters": [
								{
									"id": 41940,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The index's name. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 41919,
								"typeArguments": [
									{
										"type": "reference",
										"target": 41922,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41941,
					"name": "unique",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 117,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L117"
						}
					],
					"signatures": [
						{
							"id": 41942,
							"name": "unique",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method indicates that a property's value must be unique in the database.\nA unique index is created on the property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst User = model.define(\"user\", {\n  email: model.text().unique(),\n  // ...\n})\n\nexport default User\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L117"
								}
							],
							"parameters": [
								{
									"id": 41943,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The unique index's name. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 41919,
								"typeArguments": [
									{
										"type": "reference",
										"target": 41922,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 41944,
					"name": "default",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "utils/src/dml/properties/base.ts",
							"line": 144,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L144"
						}
					],
					"signatures": [
						{
							"id": 41945,
							"name": "default",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method defines the default value of a property."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { model } from \"@medusajs/framework/utils\"\n\nconst MyCustom = model.define(\"my_custom\", {\n  color: model\n    .enum([\"black\", \"white\"])\n    .default(\"black\"),\n  age: model\n    .number()\n    .default(0),\n  // ...\n})\n\nexport default MyCustom\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "utils/src/dml/properties/base.ts",
									"line": 144,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/61a25dd07370282cad1dea30e13c3090ebea4f1b/packages/core/utils/src/dml/properties/base.ts#L144"
								}
							],
							"parameters": [
								{
									"id": 41946,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The default value."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41922,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 41919,
								"typeArguments": [
									{
										"type": "reference",
										"target": 41922,
										"name": "T",
										"package": "@medusajs/utils",
										"qualifiedName": "BaseProperty.T",
										"refersToTypeParameter": true
									}
								],
								"name": "BaseProperty",
								"package": "@medusajs/utils"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						41934,
						41936,
						41938,
						41941,
						41944
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				41781,
				41878,
				41918
			]
		},
		{
			"title": "Namespaces",
			"children": [
				41951,
				41952,
				41953,
				41954,
				41955
			]
		}
	],
	"packageName": "@medusajs/utils",
	"symbolIdMap": {
		"41781": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": ""
		},
		"41782": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "DefineOptions"
		},
		"41783": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41784": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.name"
		},
		"41785": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.tableName"
		},
		"41786": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "ManyToManyOptions"
		},
		"41787": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41788": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.pivotTable"
		},
		"41790": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.joinColumn"
		},
		"41791": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.inverseJoinColumn"
		},
		"41792": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41794": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.pivotEntity"
		},
		"41795": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41796": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41797": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.joinColumn"
		},
		"41798": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.inverseJoinColumn"
		},
		"41799": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder"
		},
		"41805": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.define"
		},
		"41806": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.define"
		},
		"41807": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "Schema"
		},
		"41808": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "TConfig"
		},
		"41809": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "nameOrConfig"
		},
		"41810": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "schema"
		},
		"41811": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.id"
		},
		"41812": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.id"
		},
		"41813": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"41814": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41815": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.prefix"
		},
		"41816": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.text"
		},
		"41817": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.text"
		},
		"41818": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.boolean"
		},
		"41819": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.boolean"
		},
		"41820": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.number"
		},
		"41821": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.number"
		},
		"41822": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.bigNumber"
		},
		"41823": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.bigNumber"
		},
		"41824": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.float"
		},
		"41825": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.float"
		},
		"41826": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.autoincrement"
		},
		"41827": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.autoincrement"
		},
		"41828": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.array"
		},
		"41829": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.array"
		},
		"41830": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.dateTime"
		},
		"41831": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.dateTime"
		},
		"41832": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.json"
		},
		"41833": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.json"
		},
		"41834": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.enum"
		},
		"41835": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.enum"
		},
		"41836": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "Values"
		},
		"41837": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "values"
		},
		"41838": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasOne"
		},
		"41839": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasOne"
		},
		"41840": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"41841": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "ForeignKeyName"
		},
		"41842": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"41843": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"41844": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"41845": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"41846": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41847": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"41848": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.foreignKeyName"
		},
		"41849": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasOne"
		},
		"41850": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"41851": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"41852": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"41853": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"41854": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"41855": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41856": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"41857": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.belongsTo"
		},
		"41858": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.belongsTo"
		},
		"41859": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"41860": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "ForeignKeyName"
		},
		"41861": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"41862": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"41863": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"41864": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"41865": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type"
		},
		"41866": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "__type.foreignKeyName"
		},
		"41867": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasMany"
		},
		"41868": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.hasMany"
		},
		"41869": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"41870": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"41871": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"41872": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.manyToMany"
		},
		"41873": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "EntityBuilder.manyToMany"
		},
		"41874": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "T"
		},
		"41875": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "entityBuilder"
		},
		"41876": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "options"
		},
		"41877": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"qualifiedName": "model"
		},
		"41878": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": ""
		},
		"41879": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DMLEntitySchemaBuilder"
		},
		"41880": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "Schema"
		},
		"41881": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity"
		},
		"41882": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.isDmlEntity"
		},
		"41883": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.isDmlEntity"
		},
		"41884": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "entity"
		},
		"41885": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.__constructor"
		},
		"41886": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity"
		},
		"41887": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.Schema"
		},
		"41888": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.TConfig"
		},
		"41889": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "nameOrConfig"
		},
		"41890": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "schema"
		},
		"41891": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.name"
		},
		"41892": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.schema"
		},
		"41897": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.parse"
		},
		"41898": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.parse"
		},
		"41899": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type"
		},
		"41900": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.name"
		},
		"41901": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.tableName"
		},
		"41902": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.schema"
		},
		"41903": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.cascades"
		},
		"41904": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.indexes"
		},
		"41905": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "__type.checks"
		},
		"41906": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.cascades"
		},
		"41907": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.cascades"
		},
		"41908": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "options"
		},
		"41909": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.indexes"
		},
		"41910": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.indexes"
		},
		"41911": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "indexes"
		},
		"41912": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.checks"
		},
		"41913": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.checks"
		},
		"41914": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "checks"
		},
		"41915": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.[IsDmlEntity]"
		},
		"41916": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.Schema"
		},
		"41917": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/entity.ts",
			"qualifiedName": "DmlEntity.TConfig"
		},
		"41918": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": ""
		},
		"41919": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty"
		},
		"41922": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.T"
		},
		"41929": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.dataType"
		},
		"41930": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"41931": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"41932": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"41933": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.$dataType"
		},
		"41934": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"41935": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.nullable"
		},
		"41936": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.computed"
		},
		"41937": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.computed"
		},
		"41938": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"41939": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.index"
		},
		"41940": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"41941": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"41942": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.unique"
		},
		"41943": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "name"
		},
		"41944": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"41945": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.default"
		},
		"41946": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "value"
		},
		"41947": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"41948": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.parse"
		},
		"41949": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "fieldName"
		},
		"41950": {
			"sourceFileName": "../../../../packages/core/utils/src/dml/properties/base.ts",
			"qualifiedName": "BaseProperty.T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/utils/src/dml/entity-builder.ts",
			"2": "../../../../packages/core/utils/src/dml/entity.ts",
			"3": "../../../../packages/core/utils/src/dml/properties/base.ts"
		},
		"reflections": {
			"1": 41781,
			"2": 41878,
			"3": 41918
		}
	}
}
