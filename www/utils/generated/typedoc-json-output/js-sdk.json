{
	"id": 43011,
	"name": "js-sdk",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 43012,
			"name": "admin",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 44982,
					"name": "ApiKey",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44986,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44983,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44984,
									"name": "ApiKey",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44985,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44982,
										"name": "ApiKey",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44987,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 63,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44988,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This methods retrieves a paginated list of API keys. It sends a request to the \n[List API Keys](https://docs.medusajs.com/api/admin#api-keys_getapikeys) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of API keys."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of API keys:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list()\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each API key:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.list({\n  fields: \"id,*sales_channels\"\n})\n.then(({ api_keys, count, limit, offset }) => {\n  console.log(api_keys)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 63,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44989,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44990,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyListResponse"
												},
												"name": "AdminApiKeyListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44991,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 93,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44992,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an API key. It sends a request to the [Create API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeys)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created API key"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.create({\n  title: \"Development\",\n  type: \"publishable\"\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 93,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44993,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/payloads.ts",
													"qualifiedName": "AdminCreateApiKey"
												},
												"name": "AdminCreateApiKey",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44994,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the created API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44995,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44996,
							"name": "revoke",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44997,
									"name": "revoke",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method revokes an API key. It sends a request to the \n[Revoke API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeysidrevoke) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.revoke(\"apk_123\")\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44998,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44999,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45000,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 147,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45001,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an API key's details. It sends a request to the \n[Get API key](https://docs.medusajs.com/api/admin#api-keys_getapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.retrieve(\"apk_123\")\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 147,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45002,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45003,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45004,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 174,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45005,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an API key's details. It sends a request to the \n[Update API Key](https://docs.medusajs.com/api/admin#api-keys_postapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.update(\"apk_123\", {\n  title: \"Development\"\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 174,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45006,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45007,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/payloads.ts",
													"qualifiedName": "AdminUpdateApiKey"
												},
												"name": "AdminUpdateApiKey",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45008,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/queries.ts",
													"qualifiedName": "AdminGetApiKeysParams"
												},
												"name": "AdminGetApiKeysParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45009,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45010,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 205,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45011,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an API key by its ID. It sends a request to the \n[Delete API Key](https://docs.medusajs.com/api/admin#api-keys_deleteapikeysid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.delete(\"apk_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 205,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45012,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45013,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyDeleteResponse"
												},
												"name": "AdminApiKeyDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45014,
							"name": "batchSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
									"line": 234,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45015,
									"name": "batchSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the sales channels associated with a publishable API key to either add\nor remove associations. It sends a request to the [Manage Sales Channels](https://docs.medusajs.com/api/admin#api-keys_postapikeysidsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The API key's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.apiKey.batchSalesChannels(\"apk_123\", {\n  add: [\"sc_123\"],\n  remove: [\"sc_321\"]\n})\n.then(({ api_key }) => {\n  console.log(api_key)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
											"line": 234,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45016,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The API key's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45017,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The sales channels to add or remove from the API key."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45018,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/api-key/admin/responses.ts",
													"qualifiedName": "AdminApiKeyResponse"
												},
												"name": "AdminApiKeyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44983
							]
						},
						{
							"title": "Properties",
							"children": [
								44986
							]
						},
						{
							"title": "Methods",
							"children": [
								44987,
								44991,
								44996,
								45000,
								45004,
								45010,
								45014
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/api-key.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 45167,
					"name": "Campaign",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45171,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45168,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45169,
									"name": "Campaign",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45170,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45167,
										"name": "Campaign",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45172,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45173,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a campaign by its ID. It sends a request to the \n[Get Campaign](https://docs.medusajs.com/api/admin#campaigns_getcampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a campaign by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.retrieve(\"procamp_123\")\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.retrieve(\"procamp_123\", {\n  fields: \"id,*budget\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45174,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45175,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the campaign."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
													"qualifiedName": "AdminGetCampaignParams"
												},
												"name": "AdminGetCampaignParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45176,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45177,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 109,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45178,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of campaigns. It sends a request to the \n[List Campaigns](https://docs.medusajs.com/api/admin#campaigns_getcampaigns) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of campaigns."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of campaigns:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list()\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each campaign:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.list({\n  fields: \"id,*budget\"\n})\n.then(({ campaigns, count, limit, offset }) => {\n  console.log(campaigns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 109,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45179,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
													"qualifiedName": "AdminGetCampaignsParams"
												},
												"name": "AdminGetCampaignsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45180,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignListResponse"
												},
												"name": "AdminCampaignListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45181,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 138,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45182,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a campaign. It sends a request to the \n[Create Campaign](https://docs.medusajs.com/api/admin#campaigns_postcampaigns) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.create({\n  name: \"Summer Campaign\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 138,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45183,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the campaign to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
													"qualifiedName": "AdminCreateCampaign"
												},
												"name": "AdminCreateCampaign",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45184,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45185,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45186,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a campaign. It sends a request to the \n[Update Campaign](https://docs.medusajs.com/api/admin#campaigns_postcampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.update(\"procamp_123\", {\n  name: \"Summer Campaign\"\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45187,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45188,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the campaign."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCampaign"
												},
												"name": "AdminUpdateCampaign",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45189,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45190,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 198,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45191,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a campaign by its ID. It sends a request to the\n[Delete Campaign](https://docs.medusajs.com/api/admin#campaigns_deletecampaignsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.delete(\"procamp_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 198,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45192,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45193,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "campaign"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45194,
							"name": "batchPromotions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
									"line": 227,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45195,
									"name": "batchPromotions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the promotions of a campaign to either add or remove the association between them.\nIt sends a request to the [Manage Promotions](https://docs.medusajs.com/api/admin#campaigns_postcampaignsidpromotions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The campaign's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.campaign.batchPromotions(\"procamp_123\", {\n  add: [\"prom_123\", \"prom_456\"],\n  remove: [\"prom_789\"]\n})\n.then(({ campaign }) => {\n  console.log(campaign)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
											"line": 227,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45196,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The campaign's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45197,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotions to add or remove associations to them."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45198,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
													"qualifiedName": "AdminCampaignResponse"
												},
												"name": "AdminCampaignResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45168
							]
						},
						{
							"title": "Properties",
							"children": [
								45171
							]
						},
						{
							"title": "Methods",
							"children": [
								45172,
								45177,
								45181,
								45185,
								45190,
								45194
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/campaign.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44524,
					"name": "Claim",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44528,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44525,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44526,
									"name": "Claim",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44527,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44524,
										"name": "Claim",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44529,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44530,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of claims. It sends a request to the \n[List Claims](https://docs.medusajs.com/api/admin#claims_getclaims) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of claims."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of claims:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list()\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each claim:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.list({\n  fields: \"id,*additional_items\"\n})\n.then(({ claims, count, limit, offset }) => {\n  console.log(claims)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44531,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
													"qualifiedName": "AdminClaimListParams"
												},
												"name": "AdminClaimListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44532,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimListResponse"
												},
												"name": "AdminClaimListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44533,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 106,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44534,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a claim. It sends a request to the\n[Get Claim](https://docs.medusajs.com/api/admin#claims_getclaimsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a claim by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.retrieve(\"claim_123\")\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.retrieve(\"claim_123\", {\n  fields: \"id,*additional_items\"\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 106,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44535,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44536,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44537,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimResponse"
												},
												"name": "AdminClaimResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44538,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 138,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44539,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a claim. It sends a request to the \n[Create Claim](https://docs.medusajs.com/api/admin#claims_postclaims) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim and order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.create({\n  type: \"refund\",\n  order_id: \"order_123\",\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 138,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44540,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminCreateClaim"
												},
												"name": "AdminCreateClaim",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44541,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44542,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimOrderResponse"
												},
												"name": "AdminClaimOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44543,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44544,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a claim. It sends a request to the\n[Cancel Claim](https://docs.medusajs.com/api/admin#claims_postclaimsidcancel) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.cancel(\"claim_123\")\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44545,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44546,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44547,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimResponse"
												},
												"name": "AdminClaimResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44548,
							"name": "addItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44549,
									"name": "addItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds items to the claim. It sends a request to the\n[Add Items](https://docs.medusajs.com/api/admin#claims_postclaimsidclaimitems) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addItems(\"claim_123\", {\n  items: [\n    {\n      id: \"orli_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44550,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44551,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimItems"
												},
												"name": "AdminAddClaimItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44552,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44553,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44554,
							"name": "updateItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 250,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44555,
									"name": "updateItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a claim item by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`WRITE_OFF_ITEM`"
											},
											{
												"kind": "text",
												"text": " action. It\nsends a request to the [Update Claim Item](https://docs.medusajs.com/api/admin#claims_postclaimsidclaimitemsaction_id) API route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 250,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44556,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44557,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the order item's "
													},
													{
														"kind": "code",
														"text": "`WRITE_OFF_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44558,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimItem"
												},
												"name": "AdminUpdateClaimItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44559,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44560,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44561,
							"name": "removeItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 291,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44562,
									"name": "removeItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a claim item from a claim by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`WRITE_OFF_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Claim Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidclaimitemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The claim's details with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 291,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44563,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44564,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the order item's "
													},
													{
														"kind": "code",
														"text": "`WRITE_OFF_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44565,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44566,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44567,
							"name": "addInboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 335,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44568,
									"name": "addInboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds inbound (or return) items to the claim. These inbound items will have a "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Items](https://docs.medusajs.com/api/admin#claims_postclaimsidinbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addInboundItems(\n  \"claim_123\", \n  {\n    items: [\n      {\n        id: \"orli_123\",\n        quantity: 1\n      }\n    ]\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 335,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44569,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the inbound items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44570,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inbound items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimInboundItems"
												},
												"name": "AdminAddClaimInboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44571,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44572,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44573,
							"name": "updateInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 379,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44574,
									"name": "updateInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inbound (or return) item of a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#claims_postclaimsidinbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateInboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 379,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44575,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44576,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44577,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the inbound item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimInboundItem"
												},
												"name": "AdminUpdateClaimInboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44578,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44579,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44580,
							"name": "removeInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 420,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44581,
									"name": "removeInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an inbound (or return) item from a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Inbound Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidinbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeInboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 420,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44582,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44583,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44584,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44585,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44586,
							"name": "addInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 461,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44587,
									"name": "addInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an inbound (or return) shipping method to a claim. \nThe inbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidinboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addInboundShipping(\n  \"claim_123\", \n  {\n    shipping_option_id: \"so_123\",\n    custom_amount: 10\n  },\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 461,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44588,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44589,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimAddInboundShipping"
												},
												"name": "AdminClaimAddInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44590,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44591,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44592,
							"name": "updateInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 505,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44593,
									"name": "updateInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method for returning items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Inbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidinboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateInboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 505,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44594,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44595,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44596,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the shipping method"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimUpdateInboundShipping"
												},
												"name": "AdminClaimUpdateInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44597,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44598,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44599,
							"name": "deleteInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 546,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44600,
									"name": "deleteInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a shipping method for returning items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Inbound Shipping](https://docs.medusajs.com/api/admin#claims_deleteclaimsidinboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated wth the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.deleteInboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  )\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 546,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44601,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44602,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44603,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44604,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimReturnPreviewResponse"
												},
												"name": "AdminClaimReturnPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44605,
							"name": "addOutboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 587,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44606,
									"name": "addOutboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound (or new) items to a claim. These outbound items will have an "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Add Outbound Items](https://docs.medusajs.com/api/admin#claims_postclaimsidoutbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addOutboundItems(\n  \"claim_123\", \n  {\n    items: [{\n      id: \"orli_123\",\n      quantity: 1\n    }]\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 587,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44607,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the claim to add the outbound items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44608,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items' details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminAddClaimOutboundItems"
												},
												"name": "AdminAddClaimOutboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44609,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44610,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44611,
							"name": "updateOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 631,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44612,
									"name": "updateOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an outbound (or new) item of a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Outbound Item](https://docs.medusajs.com/api/admin#claims_postclaimsidoutbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateOutboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  },\n  )\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 631,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44613,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44614,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new claim item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44615,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminUpdateClaimOutboundItem"
												},
												"name": "AdminUpdateClaimOutboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44616,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44617,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44618,
							"name": "removeOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 672,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44619,
									"name": "removeOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an outbound (or new) item from a claim using the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Remove Outbound Item](https://docs.medusajs.com/api/admin#claims_deleteclaimsidoutbounditemsaction_id)\nAPI route.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.removeOutboundItem(\n  \"claim_123\", \n  \"ordchact_123\",\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 672,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44620,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44621,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new claim item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44622,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44623,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44624,
							"name": "addOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 714,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44625,
									"name": "addOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound an outbound shipping method to a claim. \nThe outbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the \n[Add Outbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidoutboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.addOutboundShipping(\n  \"claim_123\", \n  {\n    shipping_option_id: \"so_123\",\n    custom_amount: 10\n  },\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 714,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44626,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44627,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimAddOutboundShipping"
												},
												"name": "AdminClaimAddOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44628,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44629,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44630,
							"name": "updateOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 758,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44631,
									"name": "updateOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for delivering outbound items in a claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\nIt sends a request to the [Update Outbound Shipping](https://docs.medusajs.com/api/admin#claims_postclaimsidoutboundshippingmethodaction_id)\nAPI route.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.updateOutboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  },\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 758,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44632,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44633,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44634,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminClaimUpdateOutboundShipping"
												},
												"name": "AdminClaimUpdateOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44635,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44636,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44637,
							"name": "deleteOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 797,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44638,
									"name": "deleteOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes the shipping method for delivering outbound items in the claim using the ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.deleteOutboundShipping(\n  \"claim_123\", \n  \"ordchact_123\",\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 797,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44639,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44640,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44641,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44642,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimPreviewResponse"
												},
												"name": "AdminClaimPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44643,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 833,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44644,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms a claim request, applying its changes on the associated order.\nIt sends a request to the [Confirm Claim Request](https://docs.medusajs.com/api/admin#claims_postclaimsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the claim and its associated return, with a preview of the order when the claim is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.request(\n  \"claim_123\", \n  {},\n)\n.then(({ claim }) => {\n  console.log(claim)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 833,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44645,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44646,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The confirmation details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
													"qualifiedName": "AdminRequestClaim"
												},
												"name": "AdminRequestClaim",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44647,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44648,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimRequestResponse"
												},
												"name": "AdminClaimRequestResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44649,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
									"line": 868,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44650,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a requested claim. It sends a request to the\n[Cancel Claim Request](https://docs.medusajs.com/api/admin#claims_deleteclaimsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.claim.cancelRequest(\n  \"claim_123\", \n)\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
											"line": 868,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44651,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The claim's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44652,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the claim."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44653,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
													"qualifiedName": "AdminClaimDeleteResponse"
												},
												"name": "AdminClaimDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44525
							]
						},
						{
							"title": "Properties",
							"children": [
								44528
							]
						},
						{
							"title": "Methods",
							"children": [
								44529,
								44533,
								44538,
								44543,
								44548,
								44554,
								44561,
								44567,
								44573,
								44580,
								44586,
								44592,
								44599,
								44605,
								44611,
								44618,
								44624,
								44630,
								44637,
								44643,
								44649
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/claim.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 44900,
					"name": "Currency",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44904,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44901,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44902,
									"name": "Currency",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44903,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44900,
										"name": "Currency",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44905,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44906,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of currencies. It sends a request to the\n[List Currencies](https://docs.medusajs.com/api/admin#currencies_getcurrencies)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of currencies."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of currencies:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list()\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each currency:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.list({\n  fields: \"code,symbol\"\n})\n.then(({ currencies, count, limit, offset }) => {\n  console.log(currencies)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44907,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/queries.ts",
													"qualifiedName": "AdminCurrencyListParams"
												},
												"name": "AdminCurrencyListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44908,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/responses.ts",
													"qualifiedName": "AdminCurrencyListResponse"
												},
												"name": "AdminCurrencyListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44909,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
									"line": 109,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44910,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a currency by its code. It sends a request to the\n[Get Currency](https://docs.medusajs.com/api/admin#currencies_getcurrenciescode) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The currency's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a currency by its code:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.retrieve(\"usd\")\n.then(({ currency }) => {\n  console.log(currency)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.currency.retrieve(\"usd\", {\n  fields: \"code,symbol\"\n})\n.then(({ currency }) => {\n  console.log(currency)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
											"line": 109,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44911,
											"name": "code",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The currency's code."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44912,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the currency."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/queries.ts",
													"qualifiedName": "AdminCurrencyParams"
												},
												"name": "AdminCurrencyParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44913,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/currency/admin/responses.ts",
													"qualifiedName": "AdminCurrencyResponse"
												},
												"name": "AdminCurrencyResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44901
							]
						},
						{
							"title": "Properties",
							"children": [
								44904
							]
						},
						{
							"title": "Methods",
							"children": [
								44905,
								44909
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/currency.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 45061,
					"name": "CustomerGroup",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45065,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45062,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45063,
									"name": "CustomerGroup",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45064,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45061,
										"name": "CustomerGroup",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45066,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45067,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer group by its ID. It sends a request to the\n[Get Customer Group](https://docs.medusajs.com/api/admin#customer-groups_getcustomergroupsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a customer group by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.retrieve(\"cusgroup_123\")\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.retrieve(\"cusgroup_123\", {\n  fields: \"id,*customer\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45068,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45069,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45070,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45071,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45072,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customer groups. It sends a request to the\n[List Customer Groups](https://docs.medusajs.com/api/admin#customer-groups_getcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of customer groups."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of customer groups:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list()\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each customer group:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.list({\n  fields: \"id,*customer\"\n})\n.then(({ customer_groups, count, limit, offset }) => {\n  console.log(customer_groups)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45073,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupsParams"
												},
												"name": "AdminGetCustomerGroupsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45074,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupListResponse"
												},
												"name": "AdminCustomerGroupListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45075,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 143,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45076,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer group. It sends a request to the\n[Create Customer Group](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.create({\n  name: \"VIP\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 143,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45077,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
													"qualifiedName": "AdminCreateCustomerGroup"
												},
												"name": "AdminCreateCustomerGroup",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45078,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45079,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45080,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45081,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a customer group's details. It sends a request to the\n[Update Customer](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroupsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.update(\"cusgroup_123\", {\n  name: \"VIP\"\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45082,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45083,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCustomerGroup"
												},
												"name": "AdminUpdateCustomerGroup",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45084,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
													"qualifiedName": "AdminGetCustomerGroupParams"
												},
												"name": "AdminGetCustomerGroupParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45085,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45086,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45087,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer group. This method sends a request to the\n[Delete Customer Group](https://docs.medusajs.com/api/admin#customer-groups_deletecustomergroupsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.delete(\"cusgroup_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45088,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45089,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupDeleteResponse"
												},
												"name": "AdminCustomerGroupDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45090,
							"name": "batchCustomers",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
									"line": 239,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45091,
									"name": "batchCustomers",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages customers of a group to add or remove them from the group.\nIt sends a request to the [Manage Customers](https://docs.medusajs.com/api/admin#customer-groups_postcustomergroupsidcustomers)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer group's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customerGroup.batchCustomers(\"cusgroup_123\", {\n  add: [\"cus_123\"],\n  remove: [\"cus_321\"]\n})\n.then(({ customer_group }) => {\n  console.log(customer_group)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
											"line": 239,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45092,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The group's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45093,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customers to add or remove from the group."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45094,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
													"qualifiedName": "AdminCustomerGroupResponse"
												},
												"name": "AdminCustomerGroupResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45062
							]
						},
						{
							"title": "Properties",
							"children": [
								45065
							]
						},
						{
							"title": "Methods",
							"children": [
								45066,
								45071,
								45075,
								45080,
								45086,
								45090
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer-group.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43379,
					"name": "Customer",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43383,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43380,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43381,
									"name": "Customer",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43382,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43379,
										"name": "Customer",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43384,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 34,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43385,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer. It sends a request to the\n[Create Customer](https://docs.medusajs.com/api/admin#customers_postcustomers) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.create({\n  email: \"customer@gmail.com\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 34,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43386,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminCreateCustomer"
												},
												"name": "AdminCreateCustomer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43387,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43388,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43389,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 68,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43390,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a customer's details. It sends a request to the\n[Update Customer](https://docs.medusajs.com/api/admin#customers_postcustomersid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.update(\"cus_123\", {\n  first_name: \"John\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 68,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43391,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43392,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update of the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCustomer"
												},
												"name": "AdminUpdateCustomer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43393,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43394,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43395,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 132,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43396,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of customers. It sends a request to the\n[List Customers](https://docs.medusajs.com/api/admin#customers_getcustomers)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of customers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of customers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list()\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each customer:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.list({\n  fields: \"id,*groups\"\n})\n.then(({ customers, count, limit, offset }) => {\n  console.log(customers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 132,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43397,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/queries.ts",
													"qualifiedName": "AdminCustomerFilters"
												},
												"name": "AdminCustomerFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43398,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerListResponse"
												},
												"name": "AdminCustomerListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43399,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43400,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer by its ID. It sends a request to the\n[Get Customer](https://docs.medusajs.com/api/admin#customers_getcustomersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a customer by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.retrieve(\"cus_123\")\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.retrieve(\"cus_123\", {\n  fields: \"id,*groups\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43401,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43402,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the customer."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43403,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43404,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 203,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43405,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer by its ID. It sends a request to the\n[Delete Customer](https://docs.medusajs.com/api/admin#customers_deletecustomersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.delete(\"cus_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 203,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43406,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43407,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerDeleteResponse"
												},
												"name": "AdminCustomerDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43408,
							"name": "batchCustomerGroups",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 232,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43409,
									"name": "batchCustomerGroups",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages customer groups for a customer.\nIt sends a request to the [Manage Customers](https://docs.medusajs.com/api/admin#customers_postcustomersidcustomergroups)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customers details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.batchCustomerGroups(\"cus_123\", {\n  add: [\"cusgroup_123\"],\n  remove: [\"cusgroup_321\"]\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 232,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43410,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43411,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The groups to add customer to or remove customer from."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43412,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43413,
							"name": "createAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 268,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43414,
									"name": "createAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a customer address. It sends a request to the\n[Create Customer Address](https://docs.medusajs.com/api/admin#customers_postcustomersidaddresses)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.createAddress(\"cus_123\", {\n  address_1: \"123 Main St\",\n  city: \"Anytown\",\n  country_code: \"US\",\n  postal_code: \"12345\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 268,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43415,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43416,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminCreateCustomerAddress"
												},
												"name": "AdminCreateCustomerAddress",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43417,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43418,
							"name": "updateAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 305,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43419,
									"name": "updateAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a customer address. It sends a request to the\n[Update Customer Address](https://docs.medusajs.com/api/admin#customers_postcustomersidaddressesaddressid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.updateAddress(\"cus_123\", \"cus_addr_123\", {\n  address_1: \"123 Main St\",\n  city: \"Anytown\",\n  country_code: \"US\",\n  postal_code: \"12345\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 305,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43420,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43421,
											"name": "addressId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43422,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCustomerAddress"
												},
												"name": "AdminUpdateCustomerAddress",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43423,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43424,
							"name": "deleteAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 337,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43425,
									"name": "deleteAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a customer address. It sends a request to the\n[Delete Customer Address](https://docs.medusajs.com/api/admin#customers_deletecustomersidaddressesaddressid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.deleteAddress(\"cus_123\", \"cus_addr_123\")\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 337,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43426,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43427,
											"name": "addressId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43428,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43429,
							"name": "retrieveAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 363,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43430,
									"name": "retrieveAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a customer address by its ID. It sends a request to the\n[Get Customer Address](https://docs.medusajs.com/api/admin#customers_getcustomersidaddressesaddressid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The customer address's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.retrieveAddress(\"cus_123\", \"cus_addr_123\")\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 363,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43431,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43432,
											"name": "addressId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer address's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43433,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43434,
							"name": "listAddresses",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
									"line": 391,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43435,
									"name": "listAddresses",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of customer addresses. It sends a request to the\n[List Customer Addresses](https://docs.medusajs.com/api/admin#customers_getcustomersidaddresses)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of customer addresses."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.customer.listAddresses(\"cus_123\")\n.then(({ addresses }) => {\n  console.log(addresses)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
											"line": 391,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43436,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The customer's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43437,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/responses.ts",
													"qualifiedName": "AdminCustomerResponse"
												},
												"name": "AdminCustomerResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43380
							]
						},
						{
							"title": "Properties",
							"children": [
								43383
							]
						},
						{
							"title": "Methods",
							"children": [
								43384,
								43389,
								43395,
								43399,
								43404,
								43408,
								43413,
								43418,
								43424,
								43429,
								43434
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/customer.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44230,
					"name": "DraftOrder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44234,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44231,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44232,
									"name": "DraftOrder",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44233,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44230,
										"name": "DraftOrder",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44235,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44236,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a draft order by its ID. It sends a request to the\n[Get Draft Order](https://docs.medusajs.com/api/admin#draft-orders_getdraftordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a draft order by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.retrieve(\"order_123\")\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.retrieve(\"order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44237,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44238,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44239,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44240,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44241,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of draft orders. It sends a request to the\n[List Draft Orders](https://docs.medusajs.com/api/admin#draft-orders_getdraftorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of draft orders."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of draft orders:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list()\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each draft order:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.list({\n  fields: \"id,*items\"\n})\n.then(({ draft_orders, count, limit, offset }) => {\n  console.log(draft_orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44242,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderListParams"
												},
												"name": "AdminDraftOrderListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44243,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderListResponse"
												},
												"name": "AdminDraftOrderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44244,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 149,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44245,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a draft order. It sends a request to the\n[Create Draft Order](https://docs.medusajs.com/api/admin#draft-orders_postdraftorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.create({\n  email: \"test@test.com\",\n  items: [\n    {\n      variant_id: \"variant_123\",\n      quantity: 1,\n    },\n  ],\n  region_id: \"region_123\",\n  sales_channel_id: \"sc_123\",\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 149,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44246,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to create the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminCreateDraftOrder"
												},
												"name": "AdminCreateDraftOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44247,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44248,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44249,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44250,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a draft order. It sends a request to the\n[Delete Draft Order](https://docs.medusajs.com/api/admin#draft-orders_deleteordereditsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.delete(\"order_123\")\n.then(({ id, object, deleted }) => {\n  console.log(id, object, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44251,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44252,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "draft-order"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44253,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 206,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44254,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a draft order. It sends a request to the\n[Update Draft Order](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.update(\"order_123\", {\n  email: \"test@test.com\",\n})\n.then(({ draft_order }) => {\n  console.log(draft_order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 206,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44255,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44256,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrder"
												},
												"name": "AdminUpdateDraftOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44257,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44258,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderResponse"
												},
												"name": "AdminDraftOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44259,
							"name": "convertToOrder",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 238,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44260,
									"name": "convertToOrder",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method converts a draft order to an order. It sends a request to the\n[Convert Draft Order to Order](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidconverttoorder) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.convertToOrder(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 238,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44261,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44262,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/queries.ts",
													"qualifiedName": "AdminDraftOrderParams"
												},
												"name": "AdminDraftOrderParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44263,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44264,
							"name": "addItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 275,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44265,
									"name": "addItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds items to a draft order. It sends a request to the\n[Add Draft Order Items](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidedititems) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.addItems(\"order_123\", {\n  items: [\n    {\n      variant_id: \"variant_123\",\n      quantity: 1,\n    },\n  ],\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 275,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44266,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44267,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to add the items to the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminAddDraftOrderItems"
												},
												"name": "AdminAddDraftOrderItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44268,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44269,
							"name": "updateActionItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 308,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44270,
									"name": "updateActionItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an item that is part of an action in a draft order. It sends a request to the\n[Update Draft Order Item](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidedititemsaction_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.updateActionItem(\"order_123\", \"action_123\", {\n  quantity: 2,\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 308,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44271,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44272,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The action ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44273,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrderItem"
												},
												"name": "AdminUpdateDraftOrderItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44274,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44275,
							"name": "removeActionItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 339,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44276,
									"name": "removeActionItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an item that is part of an action in a draft order. It sends a request to the\n[Remove Draft Order Item](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersidedititemsaction_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.removeActionItem(\"order_123\", \"action_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 339,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44277,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44278,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The action ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44279,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44280,
							"name": "updateItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 371,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44281,
									"name": "updateItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an item in a draft order. It sends a request to the\n[Update Draft Order Item](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidedititemsitemitem_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.updateItem(\"order_123\", \"item_123\", {\n  quantity: 2,\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 371,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44282,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44283,
											"name": "itemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44284,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrderItem"
												},
												"name": "AdminUpdateDraftOrderItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44285,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44286,
							"name": "addPromotions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 404,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44287,
									"name": "addPromotions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds promotions to a draft order. It sends a request to the\n[Add Draft Order Promotions](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditpromotions) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.addPromotions(\"order_123\", {\n  promo_codes: [\"PROMO_CODE_1\", \"PROMO_CODE_2\"],\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 404,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44288,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44289,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to add the promotions to the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminAddDraftOrderPromotions"
												},
												"name": "AdminAddDraftOrderPromotions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44290,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44291,
							"name": "removePromotions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 433,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44292,
									"name": "removePromotions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes promotions from a draft order. It sends a request to the\n[Remove Draft Order Promotions](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersideditpromotions) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.removePromotions(\"order_123\", {\n  promo_codes: [\"PROMO_CODE_1\", \"PROMO_CODE_2\"],\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 433,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44293,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44294,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to remove the promotions from the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminRemoveDraftOrderPromotions"
												},
												"name": "AdminRemoveDraftOrderPromotions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44295,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44296,
							"name": "addShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 465,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44297,
									"name": "addShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a shipping method to a draft order. It sends a request to the\n[Add Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditshippingmethods) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.addShippingMethod(\"order_123\", {\n  shipping_option_id: \"shipping_option_123\",\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 465,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44298,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44299,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to add the shipping method to the draft order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminAddDraftOrderShippingMethod"
												},
												"name": "AdminAddDraftOrderShippingMethod",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44300,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44301,
							"name": "updateActionShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 498,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44302,
									"name": "updateActionShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method in a draft order. It sends a request to the\n[Update Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditshippingmethodsaction_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.updateShippingMethod(\"order_123\", \"action_123\", {\n  shipping_option_id: \"shipping_option_123\",\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 498,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44303,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44304,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The action ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44305,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the shipping method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrderActionShippingMethod"
												},
												"name": "AdminUpdateDraftOrderActionShippingMethod",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44306,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44307,
							"name": "removeActionShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 529,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44308,
									"name": "removeActionShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a shipping method from a draft order. It sends a request to the\n[Remove Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersideditshippingmethodsaction_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.removeShippingMethod(\"order_123\", \"action_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 529,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44309,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44310,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The action ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44311,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44312,
							"name": "removeShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 561,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44313,
									"name": "removeShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a shipping method from an edited draft order. It sends a request to the\n[Remove Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersideditshippingmethodsmethodmethod_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.removeShippingMethod(\n  \"order_123\", \n  \"shipping_method_123\"\n)\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 561,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44314,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44315,
											"name": "shippingMethodId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44316,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44317,
							"name": "updateShippingMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 593,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44318,
									"name": "updateShippingMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method in a draft order. It sends a request to the\n[Update Draft Order Shipping Method](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditshippingmethodsmethodmethod_id) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.updateShippingMethod(\"order_123\", \"sm_123\", {\n shipping_option_id: \"so_123\",\n})\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 593,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44319,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44320,
											"name": "methodId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44321,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update the shipping method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDraftOrderShippingMethod"
												},
												"name": "AdminUpdateDraftOrderShippingMethod",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44322,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44323,
							"name": "beginEdit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 621,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44324,
									"name": "beginEdit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method begins an edit to a draft order. It sends a request to the\n[Begin Draft Order Edit](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersidedit) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.beginEdit(\"order_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 621,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44325,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44326,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44327,
							"name": "cancelEdit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 645,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44328,
									"name": "cancelEdit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an edit to a draft order. It sends a request to the\n[Cancel Draft Order Edit](https://docs.medusajs.com/api/admin#draft-orders_deletedraftordersidedit) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.cancelEdit(\"order_123\")\n.then(({ id, object, deleted }) => {\n  console.log(id, object, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 645,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44329,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44330,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "draft-order-edit"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44331,
							"name": "requestEdit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 668,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44332,
									"name": "requestEdit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method requests an edit to a draft order. It sends a request to the\n[Request Draft Order Edit](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditrequest) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.requestEdit(\"order_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 668,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44333,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44334,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44335,
							"name": "confirmEdit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
									"line": 692,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44336,
									"name": "confirmEdit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms an edit to a draft order. It sends a request to the\n[Confirm Draft Order Edit](https://docs.medusajs.com/api/admin#draft-orders_postdraftordersideditconfirm) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The draft order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.draftOrder.confirmEdit(\"order_123\")\n.then(({ draft_order_preview }) => {\n  console.log(draft_order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
											"line": 692,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44337,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The draft order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44338,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/draft-order/admin/responses.ts",
													"qualifiedName": "AdminDraftOrderPreviewResponse"
												},
												"name": "AdminDraftOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44231
							]
						},
						{
							"title": "Properties",
							"children": [
								44234
							]
						},
						{
							"title": "Methods",
							"children": [
								44235,
								44240,
								44244,
								44249,
								44253,
								44259,
								44264,
								44269,
								44275,
								44280,
								44286,
								44291,
								44296,
								44301,
								44307,
								44312,
								44317,
								44323,
								44327,
								44331,
								44335
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/draft-order.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 44654,
					"name": "Exchange",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44658,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44655,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44656,
									"name": "Exchange",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44657,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44654,
										"name": "Exchange",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44659,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44660,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of exchanges. It sends a request to the\n[List Exchanges](https://docs.medusajs.com/api/admin#exchanges_getexchanges)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of exchanges."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of exchanges:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list()\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each exchange:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.list({\n  fields: \"id,*order\"\n})\n.then(({ exchanges, count, limit, offset }) => {\n  console.log(exchanges)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44661,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
													"qualifiedName": "AdminExchangeListParams"
												},
												"name": "AdminExchangeListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44662,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeListResponse"
												},
												"name": "AdminExchangeListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44663,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44664,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an exchange by its ID. It sends a request to the \n[Get Exchange](https://docs.medusajs.com/api/admin#exchanges_getexchangesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an exchange by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.retrieve(\"exchange_123\")\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.retrieve(\"exchange_123\", {\n  fields: \"id,*order\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44665,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44666,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44667,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44668,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 142,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44669,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an admin exchange. It sends a request to the\n[Create Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchanges) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.create({\n  order_id: \"order_123\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 142,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44670,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminCreateExchange"
												},
												"name": "AdminCreateExchange",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44671,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44672,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44673,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 173,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44674,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an exchange. It sends a request to the\n[Cancel Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchangesidcancel) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.cancel(\"exchange_123\")\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 173,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44675,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44676,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44677,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeResponse"
												},
												"name": "AdminExchangeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44678,
							"name": "addInboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 212,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44679,
									"name": "addInboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds inbound (or return) items to an exchange. These inbound items will \nhave the action "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Add Inbound Items](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addInboundItems(\"exchange_123\", {\n  items: [{\n    id: \"orli_123\",\n    quantity: 1\n  }]\n})\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 212,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44680,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44681,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminAddExchangeInboundItems"
												},
												"name": "AdminAddExchangeInboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44682,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44683,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44684,
							"name": "updateInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 258,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44685,
									"name": "updateInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inbound (or return) item from an exchange using the ID of \nthe item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can \ncheck the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateInboundItem(\n  \"exchange_123\", \n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 258,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44686,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44687,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44688,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminUpdateExchangeInboundItem"
												},
												"name": "AdminUpdateExchangeInboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44689,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44690,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44691,
							"name": "removeInboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 301,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44692,
									"name": "removeInboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an inbound (or return) item from an exchange using the ID of the \nitem's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Inbound Item](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidinbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.removeInboundItem(\n  \"exchange_123\", \n  \"ordchact_123\",\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 301,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44693,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44694,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the return item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44695,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44696,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44697,
							"name": "addInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 341,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44698,
									"name": "addInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an inbound (or return) shipping method to an exchange. \nThe inbound shipping method will have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethod)\nAPI route.\n\nThis method sends a request to the [Add Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addInboundShipping(\"exchange_123\", {\n  shipping_option_id: \"so_123\"\n})\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 341,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44699,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44700,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeAddInboundShipping"
												},
												"name": "AdminExchangeAddInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44701,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44702,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44703,
							"name": "updateInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 387,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44704,
									"name": "updateInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for returning items in the exchange using the ID \nof the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidinboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateInboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n   {\n    custom_amount: 10\n  }\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 387,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44705,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44706,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44707,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeUpdateInboundShipping"
												},
												"name": "AdminExchangeUpdateInboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44708,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44709,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44710,
							"name": "deleteInboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 430,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44711,
									"name": "deleteInboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes the shipping method for returning items in the exchange using the ID \nof the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Inbound Shipping](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidinboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the return associated with the exchange, with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.deleteInboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ return: returnData }) => {\n  console.log(returnData)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 430,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44712,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44713,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44714,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44715,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeReturnResponse"
												},
												"name": "AdminExchangeReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44716,
							"name": "addOutboundItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 470,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44717,
									"name": "addOutboundItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds outbound (or new) items to an exchange. \nThese outbound items will have the action "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Add Outbound Items](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutbounditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addOutboundItems(\"exchange_123\", {\n  items: [{\n    id: \"variant_123\",\n    quantity: 1\n  }]\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 470,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44718,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44719,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminAddExchangeOutboundItems"
												},
												"name": "AdminAddExchangeOutboundItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44720,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44721,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44722,
							"name": "updateOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 516,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44723,
									"name": "updateOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an outbound (or new) item from an exchange using the ID \nof the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Inbound Item](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateOutboundItem(\n  \"exchange_123\",\n  \"ordchact_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 516,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44724,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44725,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new exchange item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44726,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminUpdateExchangeOutboundItem"
												},
												"name": "AdminUpdateExchangeOutboundItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44727,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44728,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44729,
							"name": "removeOutboundItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 559,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44730,
									"name": "removeOutboundItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an outbound (or new) item from an exchange using the ID \nof the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Outbound Item](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidoutbounditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.removeOutboundItem(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 559,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44731,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44732,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new exchange item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44733,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44734,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44735,
							"name": "addOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 596,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44736,
									"name": "addOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an outbound shipping method to an exchange. The outbound shipping method \nwill have a "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the [Add Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutboundshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.addOutboundShipping(\"exchange_123\", {\n  shipping_option_id: \"so_123\"\n})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 596,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44737,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44738,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping method's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeAddOutboundShipping"
												},
												"name": "AdminExchangeAddOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44739,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44740,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44741,
							"name": "updateOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 642,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44742,
									"name": "updateOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the shipping method for delivering outbound items in the exchange using \nthe ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Update Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_postexchangesidoutboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.updateOutboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n  {\n    custom_amount: 10\n  }\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 642,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44743,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44744,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44745,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminExchangeUpdateOutboundShipping"
												},
												"name": "AdminExchangeUpdateOutboundShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44746,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44747,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44748,
							"name": "deleteOutboundShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 685,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44749,
									"name": "deleteOutboundShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes the shipping method for delivering outbound items in the exchange using \nthe ID of the method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nThis method sends a request to the [Remove Outbound Shipping](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidoutboundshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.deleteOutboundShipping(\n  \"exchange_123\",\n  \"ordchact_123\",\n)\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 685,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44750,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44751,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44752,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44753,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangePreviewResponse"
												},
												"name": "AdminExchangePreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44754,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 719,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44755,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms an exchange request, applying its changes on the associated order.\n\nThis method sends a request to the [Confirm Exchange](https://docs.medusajs.com/api/admin#exchanges_postexchangesidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The exchange and associated return's details with a preview of the order when the exchange is applied."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.request(\"exchange_123\", {})\n.then(({ exchange }) => {\n  console.log(exchange)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 719,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44756,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44757,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The confirmation's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
													"qualifiedName": "AdminRequestExchange"
												},
												"name": "AdminRequestExchange",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44758,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44759,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeRequestResponse"
												},
												"name": "AdminExchangeRequestResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44760,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
									"line": 752,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44761,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an exchange request. It sends a request to the\n[Cancel Exchange Request](https://docs.medusajs.com/api/admin#exchanges_deleteexchangesidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.exchange.cancel(\"exchange_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
											"line": 752,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44762,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The exchange's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44763,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the exchange."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44764,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
													"qualifiedName": "AdminExchangeDeleteResponse"
												},
												"name": "AdminExchangeDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44655
							]
						},
						{
							"title": "Properties",
							"children": [
								44658
							]
						},
						{
							"title": "Methods",
							"children": [
								44659,
								44663,
								44668,
								44673,
								44678,
								44684,
								44691,
								44697,
								44703,
								44710,
								44716,
								44722,
								44729,
								44735,
								44741,
								44748,
								44754,
								44760
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/exchange.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 43954,
					"name": "FulfillmentProvider",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43958,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43955,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43956,
									"name": "FulfillmentProvider",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43957,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43954,
										"name": "FulfillmentProvider",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43959,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43960,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of fulfillment providers. It sends a request to the\n[List Fulfillment Providers](https://docs.medusajs.com/api/admin#fulfillment-providers_getfulfillmentproviders)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of providers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of fulfillment providers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list()\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each fulfillment provider:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.list({\n  fields: \"id\"\n})\n.then(({ fulfillment_providers, count, limit, offset }) => {\n  console.log(fulfillment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43961,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
													"qualifiedName": "AdminFulfillmentProviderListParams"
												},
												"name": "AdminFulfillmentProviderListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43962,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentProviderListResponse"
												},
												"name": "AdminFulfillmentProviderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43963,
							"name": "listFulfillmentOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
									"line": 93,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43964,
									"name": "listFulfillmentOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of fulfillment options for a given fulfillment provider. It sends a request to the\n[List Fulfillment Options](https://docs.medusajs.com/api/admin#fulfillment-providers_getfulfillmentprovidersidoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of fulfillment options."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentProvider.listFulfillmentOptions(\"fp_123\")\n.then(({ fulfillment_options }) => {\n  console.log(fulfillment_options)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
											"line": 93,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43965,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment provider."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43966,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentProviderOptionsListResponse"
												},
												"name": "AdminFulfillmentProviderOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43955
							]
						},
						{
							"title": "Properties",
							"children": [
								43958
							]
						},
						{
							"title": "Methods",
							"children": [
								43959,
								43963
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-provider.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43900,
					"name": "FulfillmentSet",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43904,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43901,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43902,
									"name": "FulfillmentSet",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43903,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43900,
										"name": "FulfillmentSet",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43905,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 32,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43906,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a fulfillment set. It sends a request to the\n[Delete Fulfillment Set](https://docs.medusajs.com/api/admin#fulfillment-sets_deletefulfillmentsetsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.delete(\"fset_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 32,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43907,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43908,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetDeleteResponse"
												},
												"name": "AdminFulfillmentSetDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43909,
							"name": "createServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43910,
									"name": "createServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a service zone to a fulfillment set. It uses the \n[Add Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_postfulfillmentsetsidservicezones)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment set's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.createServiceZone(\"fset_123\", {\n  name: \"Europe Service Zone\",\n  geo_zones: [{\n    type: \"country\",\n    country_code: \"us\"\n  }]\n})\n.then(({ fulfillment_set }) => {\n  console.log(fulfillment_set)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43911,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43912,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillmentSetServiceZone"
												},
												"name": "AdminCreateFulfillmentSetServiceZone",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43913,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment set."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43914,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetResponse"
												},
												"name": "AdminFulfillmentSetResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43915,
							"name": "retrieveServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43916,
									"name": "retrieveServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a fulfillment set's service zone's details. It sends a request to the\n[Get Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_getfulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The service zone's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a fulfillment set's service zone by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.retrieveServiceZone(\n  \"fset_123\",\n  \"serzo_123\"\n)\n.then(({ service_zone }) => {\n  console.log(service_zone)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.retrieveServiceZone(\n  \"fset_123\",\n  \"serzo_123\",\n  {\n    fields: \"id,*geo_zones\"\n  }\n)\n.then(({ service_zone }) => {\n  console.log(service_zone)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43917,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43918,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43919,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the service zone."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43920,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminServiceZoneResponse"
												},
												"name": "AdminServiceZoneResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43921,
							"name": "updateServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 163,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43922,
									"name": "updateServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a service zone in a fulfillment set. It sends a request to the\n[Update Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_postfulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment set's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.updateServiceZone(\n  \"fset_123\", \n  \"serzo_123\",\n  {\n    name: \"Europe Service Zone\",\n  }\n)\n.then(({ fulfillment_set }) => {\n  console.log(fulfillment_set)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 163,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43923,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43924,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43925,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the service zone."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
													"qualifiedName": "AdminUpdateFulfillmentSetServiceZone"
												},
												"name": "AdminUpdateFulfillmentSetServiceZone",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43926,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment set."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43927,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentSetResponse"
												},
												"name": "AdminFulfillmentSetResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43928,
							"name": "deleteServiceZone",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
									"line": 200,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43929,
									"name": "deleteServiceZone",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a service zone in a fulfillment set. It sends a request to the\n[Remove Service Zone](https://docs.medusajs.com/api/admin#fulfillment-sets_deletefulfillmentsetsidservicezoneszone_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillmentSet.deleteServiceZone(\n  \"fset_123\", \n  \"serzo_123\",\n)\n.then(({ deleted, parent: fulfillmentSet }) => {\n  console.log(deleted, fulfillmentSet)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
											"line": 200,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43930,
											"name": "fulfillmentSetId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfullment set's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43931,
											"name": "serviceZoneId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The service zone's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43932,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
													"qualifiedName": "AdminServiceZoneDeleteResponse"
												},
												"name": "AdminServiceZoneDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43901
							]
						},
						{
							"title": "Properties",
							"children": [
								43904
							]
						},
						{
							"title": "Methods",
							"children": [
								43905,
								43909,
								43915,
								43921,
								43928
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment-set.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43933,
					"name": "Fulfillment",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43937,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43934,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43935,
									"name": "Fulfillment",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43936,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43933,
										"name": "Fulfillment",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43938,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43939,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a fulfillment. It sends a request to the \n[Create Fulfillment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.create({\n  location_id: \"sloc_123\",\n  provider_id: \"my_fulfillment\",\n  delivery_address: {\n    country_code: \"us\"\n  },\n  items: [\n    {\n      title: \"Shirt\",\n      sku: \"SHIRT\",\n      quantity: 1,\n      barcode: \"123\"\n    }\n  ],\n  labels: [],\n  order: {},\n  order_id: \"order_123\"\n})\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43940,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillment"
												},
												"name": "AdminCreateFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43941,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43942,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43943,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 82,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43944,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a fulfillment. It sends a request to the\n[Cancel Fulfillment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillmentsidcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.cancel(\"ful_123\")\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 82,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43945,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43946,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43947,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43948,
							"name": "createShipment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
									"line": 123,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43949,
									"name": "createShipment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipment for a fulfillment. It sends a request to the\n[Create Shipment](https://docs.medusajs.com/api/admin#fulfillments_postfulfillmentsidshipment)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.fulfillment.createShipment(\"ful_123\", {\n  labels: [\n    {\n      tracking_number: \"123\",\n      tracking_url: \"example.com\",\n      label_url: \"example.com\"\n    }\n  ]\n})\n.then(({ fulfillment }) => {\n  console.log(fulfillment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
											"line": 123,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43950,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43951,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/payloads.ts",
													"qualifiedName": "AdminCreateFulfillmentShipment"
												},
												"name": "AdminCreateFulfillmentShipment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43952,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the fulfillment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43953,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/fulfillment/admin/responses.ts",
													"qualifiedName": "AdminFulfillmentResponse"
												},
												"name": "AdminFulfillmentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43934
							]
						},
						{
							"title": "Properties",
							"children": [
								43937
							]
						},
						{
							"title": "Methods",
							"children": [
								43938,
								43943,
								43948
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/fulfillment.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43013,
					"name": "Admin",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43017,
							"name": "invite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "user"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 53,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L53"
								}
							],
							"type": {
								"type": "reference",
								"target": 43345,
								"name": "Invite",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43018,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 57,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L57"
								}
							],
							"type": {
								"type": "reference",
								"target": 43379,
								"name": "Customer",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43019,
							"name": "productCollection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 61,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L61"
								}
							],
							"type": {
								"type": "reference",
								"target": 43438,
								"name": "ProductCollection",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43020,
							"name": "productCategory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 65,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L65"
								}
							],
							"type": {
								"type": "reference",
								"target": 43472,
								"name": "ProductCategory",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43021,
							"name": "priceList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "pricing"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 69,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L69"
								}
							],
							"type": {
								"type": "reference",
								"target": 43507,
								"name": "PriceList",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43022,
							"name": "pricePreference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "pricing"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 73,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L73"
								}
							],
							"type": {
								"type": "reference",
								"target": 43548,
								"name": "PricePreference",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43023,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 77,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L77"
								}
							],
							"type": {
								"type": "reference",
								"target": 43577,
								"name": "Product",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43024,
							"name": "productType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 81,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L81"
								}
							],
							"type": {
								"type": "reference",
								"target": 43705,
								"name": "ProductType",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43025,
							"name": "upload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "file"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 85,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L85"
								}
							],
							"type": {
								"type": "reference",
								"target": 43734,
								"name": "Upload",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43026,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "region"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 89,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L89"
								}
							],
							"type": {
								"type": "reference",
								"target": 43758,
								"name": "Region",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43027,
							"name": "returnReason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 93,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L93"
								}
							],
							"type": {
								"type": "reference",
								"target": 43787,
								"name": "ReturnReason",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43028,
							"name": "stockLocation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "stock location"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 97,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L97"
								}
							],
							"type": {
								"type": "reference",
								"target": 43817,
								"name": "StockLocation",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43029,
							"name": "salesChannel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "sales channel"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 101,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L101"
								}
							],
							"type": {
								"type": "reference",
								"target": 43861,
								"name": "SalesChannel",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43030,
							"name": "fulfillmentSet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 105,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L105"
								}
							],
							"type": {
								"type": "reference",
								"target": 43900,
								"name": "FulfillmentSet",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43031,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 109,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L109"
								}
							],
							"type": {
								"type": "reference",
								"target": 43933,
								"name": "Fulfillment",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43032,
							"name": "fulfillmentProvider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 113,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"target": 43954,
								"name": "FulfillmentProvider",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43033,
							"name": "shippingOption",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 117,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L117"
								}
							],
							"type": {
								"type": "reference",
								"target": 43967,
								"name": "ShippingOption",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43034,
							"name": "shippingOptionType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 121,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L121"
								}
							],
							"type": {
								"type": "reference",
								"target": 44001,
								"name": "ShippingOptionType",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43035,
							"name": "shippingProfile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 125,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L125"
								}
							],
							"type": {
								"type": "reference",
								"target": 44030,
								"name": "ShippingProfile",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43036,
							"name": "inventoryItem",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "inventory"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 129,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L129"
								}
							],
							"type": {
								"type": "reference",
								"target": 44059,
								"name": "InventoryItem",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43037,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "notification"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 133,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L133"
								}
							],
							"type": {
								"type": "reference",
								"target": 44120,
								"name": "Notification",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43038,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 137,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L137"
								}
							],
							"type": {
								"type": "reference",
								"target": 44134,
								"name": "Order",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43039,
							"name": "draftOrder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 141,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L141"
								}
							],
							"type": {
								"type": "reference",
								"target": 44230,
								"name": "DraftOrder",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43040,
							"name": "orderEdit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 145,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L145"
								}
							],
							"type": {
								"type": "reference",
								"target": 44339,
								"name": "OrderEdit",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43041,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 149,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L149"
								}
							],
							"type": {
								"type": "reference",
								"target": 44390,
								"name": "Return",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43042,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 153,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L153"
								}
							],
							"type": {
								"type": "reference",
								"target": 44524,
								"name": "Claim",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43043,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 157,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L157"
								}
							],
							"type": {
								"type": "reference",
								"target": 44654,
								"name": "Exchange",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43044,
							"name": "taxRate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "tax"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 161,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L161"
								}
							],
							"type": {
								"type": "reference",
								"target": 44765,
								"name": "TaxRate",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43045,
							"name": "taxRegion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "tax"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 165,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L165"
								}
							],
							"type": {
								"type": "reference",
								"target": 44794,
								"name": "TaxRegion",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43046,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "store"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 169,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L169"
								}
							],
							"type": {
								"type": "reference",
								"target": 44823,
								"name": "Store",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43047,
							"name": "productTag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 173,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L173"
								}
							],
							"type": {
								"type": "reference",
								"target": 44843,
								"name": "ProductTag",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43048,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "user"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 177,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L177"
								}
							],
							"type": {
								"type": "reference",
								"target": 44872,
								"name": "User",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43049,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "currency"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 181,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L181"
								}
							],
							"type": {
								"type": "reference",
								"target": 44900,
								"name": "Currency",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43050,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 185,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L185"
								}
							],
							"type": {
								"type": "reference",
								"target": 44914,
								"name": "Payment",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43051,
							"name": "productVariant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 189,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L189"
								}
							],
							"type": {
								"type": "reference",
								"target": 44944,
								"name": "ProductVariant",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43052,
							"name": "refundReason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 193,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L193"
								}
							],
							"type": {
								"type": "reference",
								"target": 44953,
								"name": "RefundReason",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43053,
							"name": "paymentCollection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 197,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L197"
								}
							],
							"type": {
								"type": "reference",
								"target": 44962,
								"name": "PaymentCollection",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43054,
							"name": "apiKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "api key"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 201,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L201"
								}
							],
							"type": {
								"type": "reference",
								"target": 44982,
								"name": "ApiKey",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43055,
							"name": "workflowExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "workflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 205,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L205"
								}
							],
							"type": {
								"type": "reference",
								"target": 45019,
								"name": "WorkflowExecution",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43056,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "inventory"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 209,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L209"
								}
							],
							"type": {
								"type": "reference",
								"target": 45032,
								"name": "Reservation",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43057,
							"name": "customerGroup",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 213,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L213"
								}
							],
							"type": {
								"type": "reference",
								"target": 45061,
								"name": "CustomerGroup",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43058,
							"name": "promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "promotion"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 217,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L217"
								}
							],
							"type": {
								"type": "reference",
								"target": 45095,
								"name": "Promotion",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43059,
							"name": "taxProvider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "tax"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 221,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L221"
								}
							],
							"type": {
								"type": "reference",
								"target": 45158,
								"name": "TaxProvider",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43060,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "promotion"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 225,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L225"
								}
							],
							"type": {
								"type": "reference",
								"target": 45167,
								"name": "Campaign",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43061,
							"name": "plugin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "plugin"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 229,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L229"
								}
							],
							"type": {
								"type": "reference",
								"target": 45199,
								"name": "Plugin",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43062,
							"name": "views",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "views"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 233,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L233"
								}
							],
							"type": {
								"type": "reference",
								"target": 45207,
								"name": "Views",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43014,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "admin/index.ts",
									"line": 235,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L235"
								}
							],
							"signatures": [
								{
									"id": 43015,
									"name": "Admin",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "admin/index.ts",
											"line": 235,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L235"
										}
									],
									"parameters": [
										{
											"id": 43016,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43013,
										"name": "Admin",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43014
							]
						},
						{
							"title": "Properties",
							"children": [
								43017,
								43018,
								43019,
								43020,
								43021,
								43022,
								43023,
								43024,
								43025,
								43026,
								43027,
								43028,
								43029,
								43030,
								43031,
								43032,
								43033,
								43034,
								43035,
								43036,
								43037,
								43038,
								43039,
								43040,
								43041,
								43042,
								43043,
								43044,
								43045,
								43046,
								43047,
								43048,
								43049,
								43050,
								43051,
								43052,
								43053,
								43054,
								43055,
								43056,
								43057,
								43058,
								43059,
								43060,
								43061,
								43062
							]
						}
					],
					"sources": [
						{
							"fileName": "admin/index.ts",
							"line": 49,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L49"
						}
					]
				},
				{
					"id": 44059,
					"name": "InventoryItem",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44063,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44060,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44061,
									"name": "InventoryItem",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44062,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44059,
										"name": "InventoryItem",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44064,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44065,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory item. It sends a request to the\n[Create Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.create({\n  sku: \"SHIRT\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44066,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
													"qualifiedName": "AdminCreateInventoryItem"
												},
												"name": "AdminCreateInventoryItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44067,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44068,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44069,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44070,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an inventory level. It sends a request to the\n[Update Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.update(\"iitem_123\", {\n  sku: \"SHIRT\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44071,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44072,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
													"qualifiedName": "AdminUpdateInventoryItem"
												},
												"name": "AdminUpdateInventoryItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44073,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44074,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44075,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 134,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44076,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items. It sends a request to the\n[List Inventory Items](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list()\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each inventory item:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.list({\n  fields: \"id,*location_levels\"\n})\n.then(({ inventory_items, count, limit, offset }) => {\n  console.log(inventory_items)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 134,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44077,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
													"qualifiedName": "AdminInventoryItemParams"
												},
												"name": "AdminInventoryItemParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44078,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemListResponse"
												},
												"name": "AdminInventoryItemListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44079,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 179,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44080,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory item by its ID. It sends a request to the\n[Get Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitemsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an inventory item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.retrieve(\"iitem_123\")\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.retrieve(\"iitem_123\", {\n  fields: \"id,*location_levels\"\n})\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 179,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44081,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44082,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44083,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44084,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 204,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44085,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory item. This sends a request to the\n[Delete Inventory Item](https://docs.medusajs.com/api/admin#inventory-items_deleteinventoryitemsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.delete(\"iitem_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 204,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44086,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44087,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemDeleteResponse"
												},
												"name": "AdminInventoryItemDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44088,
							"name": "listLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 262,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44089,
									"name": "listLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels that belong to an inventory item.\nIt sends a request to the [List Inventory Items](https://docs.medusajs.com/api/admin#inventory-items_getinventoryitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\")\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each inventory level:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.listLevels(\"iitem_123\", {\n  fields: \"id,*inventory_item\"\n})\n.then(({ inventory_levels, count, limit, offset }) => {\n  console.log(inventory_levels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 262,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44090,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44091,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
													"qualifiedName": "AdminInventoryLevelFilters"
												},
												"name": "AdminInventoryLevelFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44092,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminInventoryLevelListResponse"
												},
												"name": "AdminInventoryLevelListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44093,
							"name": "updateLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 303,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44094,
									"name": "updateLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the inventory level of the specified inventory item and\nstock location.\n\nThis method sends a request to the\n[Update Inventory Level](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelslocation_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.updateLevel(\n  \"iitem_123\",\n  \"sloc_123\",\n  {\n    stocked_quantity: 10\n  }\n)\n.then(({ inventory_item }) => {\n  console.log(inventory_item)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 303,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44095,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44096,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44097,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminUpdateInventoryLevel"
												},
												"name": "AdminUpdateInventoryLevel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44098,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44099,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryItemResponse"
												},
												"name": "AdminInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44100,
							"name": "deleteLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 343,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44101,
									"name": "deleteLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory level associated with an inventory item\nand a stock location.\n\nThis method sends a request to the\n[Remove Inventory Level](https://docs.medusajs.com/api/admin#inventory-items_deleteinventoryitemsidlocationlevelslocation_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.deleteLevel(\n  \"iitem_123\",\n  \"sloc_123\",\n)\n.then(({ deleted, parent: inventoryItem }) => {\n  console.log(deleted, inventoryItem)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 343,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44102,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44103,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44104,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
													"qualifiedName": "AdminInventoryLevelDeleteResponse"
												},
												"name": "AdminInventoryLevelDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44105,
							"name": "batchUpdateLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 378,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44106,
									"name": "batchUpdateLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of an inventory item. It sends a request to the\n[Manage Inventory Levels](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Use "
													},
													{
														"kind": "code",
														"text": "`batchInventoryItemLocationLevels`"
													},
													{
														"kind": "text",
														"text": " instead."
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchUpdateLevels(\"iitem_123\", {\n  create: [{\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 378,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44107,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44108,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevels"
												},
												"name": "AdminBatchInventoryItemLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44109,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44110,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44111,
							"name": "batchInventoryItemLocationLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 417,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44112,
									"name": "batchInventoryItemLocationLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of an inventory item. It sends a request to the\n[Manage Inventory Levels](https://docs.medusajs.com/api/admin#inventory-items_postinventoryitemsidlocationlevelsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchInventoryItemLocationLevels(\"iitem_123\", {\n  create: [{\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 417,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44113,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44114,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create, update or delete, and an optional "
													},
													{
														"kind": "code",
														"text": "`force`"
													},
													{
														"kind": "text",
														"text": " flag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevels"
												},
												"name": "AdminBatchInventoryItemLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44115,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44116,
							"name": "batchInventoryItemsLocationLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
									"line": 452,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44117,
									"name": "batchInventoryItemsLocationLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the inventory levels of multiple inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The inventory item's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.inventoryItem.batchInventoryItemsLocationLevels({\n  create: [{\n    inventory_item_id: \"iitem_123\",\n    location_id: \"sloc_123\",\n    stocked_quantity: 10\n  }],\n  delete: [\"ilvl_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
											"line": 452,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44118,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels to create, update or delete, and an optional "
													},
													{
														"kind": "code",
														"text": "`force`"
													},
													{
														"kind": "text",
														"text": " flag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
													"qualifiedName": "AdminBatchInventoryItemsLocationLevels"
												},
												"name": "AdminBatchInventoryItemsLocationLevels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44119,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
													"qualifiedName": "AdminBatchInventoryItemsLocationLevelsResponse"
												},
												"name": "AdminBatchInventoryItemsLocationLevelsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44060
							]
						},
						{
							"title": "Properties",
							"children": [
								44063
							]
						},
						{
							"title": "Methods",
							"children": [
								44064,
								44069,
								44075,
								44079,
								44084,
								44088,
								44093,
								44100,
								44105,
								44111,
								44116
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/inventory-item.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43345,
					"name": "Invite",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43349,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43346,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 17,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43347,
									"name": "Invite",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 17,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43348,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43345,
										"name": "Invite",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43350,
							"name": "accept",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43351,
									"name": "accept",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method accepts an invite. It requires sending a previous request to\nthe "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "Auth.register"
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to the [Accept Invite]\n(https://docs.medusajs.com/api/admin#invites_postinvitesaccept)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait sdk.auth.register(\"user\", \"emailpass\", {\n  email: \"user@gmail.com\",\n  password: \"supersecret\"\n})\n\n// all subsequent requests will use the token in the header\nconst { user } = await sdk.admin.invite.accept(\n  {\n    email: \"user@gmail.com\",\n    first_name: \"John\",\n    last_name: \"Smith\",\n    invite_token: \"12345...\"\n  },\n)\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43352,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the user to create."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
															"qualifiedName": "AdminAcceptInvite"
														},
														"name": "AdminAcceptInvite",
														"package": "@medusajs/types"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 43353,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 43354,
																	"name": "invite_token",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The invite's token."
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
																			"line": 55,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		43354
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
																	"line": 51,
																	"character": 41
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 43355,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43356,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminAcceptInviteResponse"
												},
												"name": "AdminAcceptInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43357,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 90,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43358,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an invite. It sends a request to the\n[Create Invite](https://docs.medusajs.com/api/admin#invites_postinvites)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.create({\n  email: \"user@gmail.com\",\n})\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 90,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43359,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
													"qualifiedName": "AdminCreateInvite"
												},
												"name": "AdminCreateInvite",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43360,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the invite."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43361,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43362,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 139,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43363,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an invite by its ID. It sends a request to the\n[Get Invite](https://docs.medusajs.com/api/admin#invites_getinvitesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an invite its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.retrieve(\"invite_123\")\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.retrieve(\"invite_123\", {\n  fields: \"id,email\"\n})\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 139,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43364,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43365,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the invite."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43366,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43367,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 196,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43368,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of invites. It sends a request to the\n[List Invites](https://docs.medusajs.com/api/admin#invites_getinvites)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of invites."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of invites:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list()\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each invite:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.list({\n  fields: \"id,email\"\n})\n.then(({ invites, count, limit, offset }) => {\n  console.log(invites)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 196,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43369,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "FindParams"
												},
												"name": "FindParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43370,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteListResponse"
												},
												"name": "AdminInviteListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43371,
							"name": "resend",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 220,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43372,
									"name": "resend",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refreshes the token of an invite. It sends a request to the\n[Refresh Invite Token](https://docs.medusajs.com/api/admin#invites_postinvitesidresend)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The invite's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.resend(\"invite_123\")\n.then(({ invite }) => {\n  console.log(invite)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 220,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43373,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43374,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteResponse"
												},
												"name": "AdminInviteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43375,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
									"line": 245,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43376,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an invite. It sends a request to the\n[Delete Invite](https://docs.medusajs.com/api/admin#invites_deleteinvitesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.invite.delete(\"invite_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
											"line": 245,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43377,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The invite's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43378,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
													"qualifiedName": "AdminInviteDeleteResponse"
												},
												"name": "AdminInviteDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43346
							]
						},
						{
							"title": "Properties",
							"children": [
								43349
							]
						},
						{
							"title": "Methods",
							"children": [
								43350,
								43357,
								43362,
								43367,
								43371,
								43375
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/invite.ts",
							"line": 9,
							"character": 13
						}
					]
				},
				{
					"id": 44120,
					"name": "Notification",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44124,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44121,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44122,
									"name": "Notification",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44123,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44120,
										"name": "Notification",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44125,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44126,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a notification's details. It sends a request to the \n[Get Notification](https://docs.medusajs.com/api/admin#notifications_getnotificationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The notification's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a notification by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.retrieve(\"notif_123\")\n.then(({ notification }) => {\n  console.log(notification)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.retrieve(\"notif_123\", {\n  fields: \"id,to\"\n})\n.then(({ notification }) => {\n  console.log(notification)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44127,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notification's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44128,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
													"qualifiedName": "AdminNotificationParams"
												},
												"name": "AdminNotificationParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44129,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
													"qualifiedName": "AdminNotificationResponse"
												},
												"name": "AdminNotificationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44130,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44131,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of notifications. It sends a request to the \n[List Notifications](https://docs.medusajs.com/api/admin#notifications_getnotifications)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list()\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each notification:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.notification.list({\n  fields: \"id,to\"\n})\n.then(({ notifications, count, limit, offset }) => {\n  console.log(notifications)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44132,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
													"qualifiedName": "AdminNotificationListParams"
												},
												"name": "AdminNotificationListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44133,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
													"qualifiedName": "AdminNotificationListResponse"
												},
												"name": "AdminNotificationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44121
							]
						},
						{
							"title": "Properties",
							"children": [
								44124
							]
						},
						{
							"title": "Methods",
							"children": [
								44125,
								44130
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/notification.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44339,
					"name": "OrderEdit",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44343,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44340,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44341,
									"name": "OrderEdit",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44342,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44339,
										"name": "OrderEdit",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44344,
							"name": "initiateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44345,
									"name": "initiateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an order edit request. It sends a HTTP request to the\n[Create Order Edit](https://docs.medusajs.com/api/admin#order-edits_postorderedits)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order edit's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.initiateRequest({\n  order_id: \"order_123\"\n})\n.then(({ order_change }) => {\n  console.log(order_change)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44346,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminInitiateOrderEditRequest"
												},
												"name": "AdminInitiateOrderEditRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44347,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order edit."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44348,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditResponse"
												},
												"name": "AdminOrderEditResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44349,
							"name": "request",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 67,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44350,
									"name": "request",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method changes an order edit to requested. It sends a request to the\n[Request Order Edit](https://docs.medusajs.com/api/admin#order-edits_postordereditsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.request(\"ordch_123\")\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 67,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44351,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44352,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44353,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44354,
							"name": "confirm",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 98,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44355,
									"name": "confirm",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms an order edit and applies it on the order. It sends a request\nto the [Confirm Order Edit](https://docs.medusajs.com/api/admin#order-edits_postordereditsidconfirm)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.confirm(\"ordch_123\")\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 98,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44356,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44357,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44358,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44359,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 129,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44360,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a requested order edit. It sends a request to the\n[Cancel Order Edit](https://docs.medusajs.com/api/admin#order-edits_deleteordereditsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.cancelRequest(\"ordch_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 129,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44361,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44362,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44363,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditDeleteResponse"
												},
												"name": "AdminOrderEditDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44364,
							"name": "addItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 169,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44365,
									"name": "addItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds items to an order edit. These items will have the action "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": ".\n\nThe method sends a request to the [Add Items](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.addItems(\"ordch_123\", {\n  items: [\n    {\n      variant_id: \"variant_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 169,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44366,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44367,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminAddOrderEditItems"
												},
												"name": "AdminAddOrderEditItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44368,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44369,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44370,
							"name": "updateOriginalItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 212,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44371,
									"name": "updateOriginalItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the quantity and other details of an item in an order. It sends a request to the\n[Update Item Quantity](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditemsitemitem_id)\nAPI route.\n\nYou can also use this method to remove an item from an order by setting the "
											},
											{
												"kind": "code",
												"text": "`quantity`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.updateOriginalItem(\n  \"ordch_123\", \n  \"orli_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 212,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44372,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44373,
											"name": "itemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's ID in the order."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44374,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to edit in the item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminUpdateOrderEditItem"
												},
												"name": "AdminUpdateOrderEditItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44375,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44376,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44377,
							"name": "updateAddedItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 259,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44378,
									"name": "updateAddedItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an added item in the order edit by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nIt sends a request\nto the [Update Item](https://docs.medusajs.com/api/admin#order-edits_postordereditsiditemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.updateAddedItem(\n  \"ordch_123\", \n  \"orli_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 259,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44379,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44380,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44381,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
													"qualifiedName": "AdminUpdateOrderEditItem"
												},
												"name": "AdminUpdateOrderEditItem",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44382,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44383,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44384,
							"name": "removeAddedItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
									"line": 298,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44385,
									"name": "removeAddedItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an added item in the order edit by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`ITEM_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. \nYou can check the action's name using its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.orderEdit.removeAddedItem(\n  \"ordch_123\", \n  \"orli_123\",\n)\n.then(({ order_preview }) => {\n  console.log(order_preview)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
											"line": 298,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44386,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order edit's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44387,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the new item's "
													},
													{
														"kind": "code",
														"text": "`ITEM_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44388,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order preview."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44389,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
													"qualifiedName": "AdminOrderEditPreviewResponse"
												},
												"name": "AdminOrderEditPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44340
							]
						},
						{
							"title": "Properties",
							"children": [
								44343
							]
						},
						{
							"title": "Methods",
							"children": [
								44344,
								44349,
								44354,
								44359,
								44364,
								44370,
								44377,
								44384
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order-edit.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44134,
					"name": "Order",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44138,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44135,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 21,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44136,
									"name": "Order",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 21,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44137,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44134,
										"name": "Order",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44139,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 58,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44140,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an order by its ID. It sends a request to the\n[Get Order](https://docs.medusajs.com/api/admin#orders_getordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve an order by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrieve(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrieve(\"order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 58,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44141,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44142,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44143,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44144,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 94,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44145,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an order. It sends a request to the\n[Update Order Email](https://docs.medusajs.com/api/admin#orders_postordersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.update(\n  \"order_123\",\n  {\n    email: \"new_email@example.com\",\n    shipping_address: {\n      first_name: \"John\",\n      last_name: \"Doe\",\n      address_1: \"123 Main St\",\n    }\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 94,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44146,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44147,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The update details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminUpdateOrder"
												},
												"name": "AdminUpdateOrder",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44148,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44149,
							"name": "retrievePreview",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 124,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44150,
									"name": "retrievePreview",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the preview of an order based on its last associated change. It sends a request to the\n[Get Order Preview](https://docs.medusajs.com/api/admin#orders_getordersidpreview) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order preview's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.retrievePreview(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 124,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44151,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44152,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
													"qualifiedName": "AdminOrderFilters"
												},
												"name": "AdminOrderFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44153,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderPreviewResponse"
												},
												"name": "AdminOrderPreviewResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44154,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 184,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44155,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of orders. It sends a request to the\n[List Orders](https://docs.medusajs.com/api/admin#orders_getorders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of orders."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of orders:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list()\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each order:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.list({\n  fields: \"id,*items\"\n})\n.then(({ orders, count, limit, offset }) => {\n  console.log(orders)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 184,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44156,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
													"qualifiedName": "AdminOrderFilters"
												},
												"name": "AdminOrderFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44157,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderListResponse"
												},
												"name": "AdminOrderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44158,
							"name": "archive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 213,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44159,
									"name": "archive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method archives an order. It sends a request to the\n[Archive Order](https://docs.medusajs.com/api/admin#orders_postordersidarchive)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.archive(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 213,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44160,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44161,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44162,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44163,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 243,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44164,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order. It sends a request to the\n[Cancel Order](https://docs.medusajs.com/api/admin#orders_postordersidcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancel(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 243,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44165,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44166,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44167,
							"name": "complete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 268,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44168,
									"name": "complete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method completes an order. It sends a request to the\n[Complete Order](https://docs.medusajs.com/api/admin#orders_postordersidcomplete)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.complete(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 268,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44169,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44170,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
													"qualifiedName": "AdditionalData"
												},
												"name": "AdditionalData",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44171,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44172,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44173,
							"name": "requestTransfer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 304,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44174,
									"name": "requestTransfer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method requests an order transfer. It sends a request to the\n[Request Order Transfer](https://docs.medusajs.com/api/admin#orders_postordersidrequesttransfer)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.requestTransfer(\"order_123\", {\n  customer_id: \"cus_123\",\n  internal_note: \"Internal note\",\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 304,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44175,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44176,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transfer's details - the id of the next owner."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminRequestOrderTransfer"
												},
												"name": "AdminRequestOrderTransfer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44177,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44178,
							"name": "cancelTransfer",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 334,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44179,
									"name": "cancelTransfer",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order transfer request. It sends a request to the\n[Cancel Order Transfer Request](https://docs.medusajs.com/api/admin#orders_postordersidcanceltransferrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancelTransfer(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 334,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44180,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44181,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44182,
							"name": "createFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 368,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44183,
									"name": "createFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a fulfillment for an order. It sends a request to the\n[Create Fulfillment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.createFulfillment(\"order_123\", {\n  items: [\n    {\n      id: \"orli_123\",\n      quantity: 1\n    }\n  ]\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 368,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44184,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44185,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCreateOrderFulfillment"
												},
												"name": "AdminCreateOrderFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44186,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44187,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44188,
							"name": "cancelFulfillment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 408,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44189,
									"name": "cancelFulfillment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels an order's fulfillment. It sends a request to the\n[Cancel Fulfillment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.cancelFulfillment(\n  \"order_123\",\n  \"ful_123\",\n  {\n    no_notification: false\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 408,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44190,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44191,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment to cancel."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44192,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cancelation's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCancelOrderFulfillment"
												},
												"name": "AdminCancelOrderFulfillment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44193,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44194,
							"name": "createShipment",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 453,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44195,
									"name": "createShipment",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipment for an order's fulfillment. It sends a request to the\n[Create Shipment](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idshipments)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.createShipment(\n  \"order_123\",\n  \"ful_123\",\n  {\n    items: [\n      {\n        id: \"fulit_123\",\n        quantity: 1\n      }\n    ]\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 453,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44196,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44197,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the fulfillment."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44198,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipment's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/payload.ts",
													"qualifiedName": "AdminCreateOrderShipment"
												},
												"name": "AdminCreateOrderShipment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44199,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44200,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44201,
							"name": "markAsDelivered",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 491,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44202,
									"name": "markAsDelivered",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method marks an order's fulfillment as delivered. It sends a request to the\n[Mark Delivered ](https://docs.medusajs.com/api/admin#orders_postordersidfulfillmentsfulfillment_idmarkasdelivered)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.markAsDelivered(\n  \"order_123\",\n  \"ful_123\",\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 491,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44203,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44204,
											"name": "fulfillmentId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The fulfillment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44205,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44206,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44207,
							"name": "listShippingOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 524,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44208,
									"name": "listShippingOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of shipping options for an order based on the order's shipping address.\n\nThis method sends a request to the [List Shipping Options](https://docs.medusajs.com/api/admin#orders_getordersidshipping-options)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of shipping options."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.listShippingOptions(\"order_123\")\n.then(({ shipping_options }) => {\n  console.log(shipping_options)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 524,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44209,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44210,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in each shipping option."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
															"qualifiedName": "AdminGetOrderShippingOptionList"
														},
														"name": "AdminGetOrderShippingOptionList",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 44211,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 44212,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 44213,
															"name": "shipping_options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
																	"line": 530,
																	"character": 6
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
																		"qualifiedName": "AdminShippingOption"
																	},
																	"name": "AdminShippingOption",
																	"package": "@medusajs/types"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																44213
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
															"line": 529,
															"character": 35
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44214,
							"name": "listChanges",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 554,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44215,
									"name": "listChanges",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of changes made on an order, including returns, exchanges, etc...\n\nThis method sends a request to the [List Changes](https://docs.medusajs.com/api/admin#orders_getordersidchanges)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of order changes."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.listChanges(\"order_123\")\n.then(({ order_changes }) => {\n  console.log(order_changes)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 554,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44216,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44217,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in each order change."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
															"qualifiedName": "AdminOrderChangesFilters"
														},
														"name": "AdminOrderChangesFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 44218,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "PaginatedResponse"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
															"qualifiedName": "AdminOrderChangesResponse"
														},
														"name": "AdminOrderChangesResponse",
														"package": "@medusajs/types"
													}
												],
												"name": "PaginatedResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44219,
							"name": "listLineItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 583,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44220,
									"name": "listLineItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the order's line items. It sends a request to the\n[List Line Items](https://docs.medusajs.com/api/admin#orders_getordersidlineitems)\nAPI routes."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of line items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.listLineItems(\"order_123\")\n.then(({ order_items }) => {\n  console.log(order_items)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 583,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44221,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44222,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in each line item."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/order/admin/queries.ts",
															"qualifiedName": "AdminOrderItemsFilters"
														},
														"name": "AdminOrderItemsFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 44223,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderLineItemsListResponse"
												},
												"name": "AdminOrderLineItemsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44224,
							"name": "createCreditLine",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
									"line": 620,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44225,
									"name": "createCreditLine",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a credit line for an order. It sends a request to the\n[Create Credit Line](https://docs.medusajs.com/api/admin#orders_postordersidcredit-lines) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The order's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.order.createCreditLine(\n  \"order_123\",\n  {\n    amount: 100,\n    reference: \"order\",\n    reference_id: \"order_123\",\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
											"line": 620,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44226,
											"name": "orderId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The order's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44227,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The credit line's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
															"qualifiedName": "CreateOrderCreditLineDTO"
														},
														"name": "CreateOrderCreditLineDTO",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": "order_id"
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										},
										{
											"id": 44228,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the order."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44229,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/order/admin/responses.ts",
													"qualifiedName": "AdminOrderResponse"
												},
												"name": "AdminOrderResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44135
							]
						},
						{
							"title": "Properties",
							"children": [
								44138
							]
						},
						{
							"title": "Methods",
							"children": [
								44139,
								44144,
								44149,
								44154,
								44158,
								44163,
								44167,
								44173,
								44178,
								44182,
								44188,
								44194,
								44201,
								44207,
								44214,
								44219,
								44224
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/order.ts",
							"line": 13,
							"character": 13
						}
					]
				},
				{
					"id": 44962,
					"name": "PaymentCollection",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44966,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44963,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44964,
									"name": "PaymentCollection",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44965,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44962,
										"name": "PaymentCollection",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44967,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44968,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a payment collection. It sends a request to the\n[Create Payment Collection](https://docs.medusajs.com/api/admin#payment-collections_postpaymentcollections)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.create({\n  order_id: \"order_123\"\n})\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44969,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the payment collection to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminCreatePaymentCollection"
												},
												"name": "AdminCreatePaymentCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44970,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44971,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentCollectionResponse"
												},
												"name": "AdminPaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44972,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 66,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44973,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a payment collection. It sends a request to the\n[Delete Payment Collection](https://docs.medusajs.com/api/admin#payment-collections_deletepaymentcollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.delete(\"paycol_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 66,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44974,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44975,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminDeletePaymentCollectionResponse"
												},
												"name": "AdminDeletePaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44976,
							"name": "markAsPaid",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
									"line": 98,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44977,
									"name": "markAsPaid",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method marks a payment collection as paid. It sends a request to the \n[Mark as Paid](https://docs.medusajs.com/api/admin#payment-collections_postpaymentcollectionsidmarkaspaid)\nAPI route.\n\nThe API route creates and authorizes a payment session, then capture its payment, \nusing the manual payment provider."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.paymentCollection.markAsPaid(\"paycol_123\", {\n  order_id: \"order_123\"\n})\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
											"line": 98,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44978,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment collection to mark as paid."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44979,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to mark the payment collection as paid."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminMarkPaymentCollectionAsPaid"
												},
												"name": "AdminMarkPaymentCollectionAsPaid",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44980,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44981,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentCollectionResponse"
												},
												"name": "AdminPaymentCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44963
							]
						},
						{
							"title": "Properties",
							"children": [
								44966
							]
						},
						{
							"title": "Methods",
							"children": [
								44967,
								44972,
								44976
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment-collection.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44914,
					"name": "Payment",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44918,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44915,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44916,
									"name": "Payment",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44917,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44914,
										"name": "Payment",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44919,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 63,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44920,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of payments. It sends a request to the \n[List Payments](https://docs.medusajs.com/api/admin#payments_getpayments) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of payments."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of payments:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list()\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each payment:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.list({\n  fields: \"id,*payment_collection\"\n})\n.then(({ payments, count, limit, offset }) => {\n  console.log(payments)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 63,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44921,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "AdminPaymentFilters"
												},
												"name": "AdminPaymentFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44922,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentsResponse"
												},
												"name": "AdminPaymentsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44923,
							"name": "listPaymentProviders",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 119,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44924,
									"name": "listPaymentProviders",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of payment providers. It sends a request to the \n[List Payment Providers](https://docs.medusajs.com/api/admin#payments_getpaymentspaymentproviders) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of payment providers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of payment providers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders()\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders({\n  limit: 10,\n  offset: 10\n})\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each payment provider:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.listPaymentProviders({\n  fields: \"id,is_enabled\"\n})\n.then(({ payment_providers, count, limit, offset }) => {\n  console.log(payment_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 119,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44925,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "AdminGetPaymentProvidersParams"
												},
												"name": "AdminGetPaymentProvidersParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44926,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentProviderListResponse"
												},
												"name": "AdminPaymentProviderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44927,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 165,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44928,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a payment's details. It sends a request to the \n[Get Payment](https://docs.medusajs.com/api/admin#payments_getpaymentsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a payment by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.retrieve(\"pay_123\")\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.retrieve(\"pay_123\", {\n  fields: \"id,*payment_collection\"\n})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 165,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44929,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44930,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44931,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44932,
							"name": "capture",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 197,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44933,
									"name": "capture",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method captures a payment. It sends a request to the\n[Capture Payment](https://docs.medusajs.com/api/admin#payments_postpaymentsidcapture) API route.\n\nThe API route uses the "
											},
											{
												"kind": "code",
												"text": "`capturePayment`"
											},
											{
												"kind": "text",
												"text": " method of the payment provider associated with the payment's collection."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.capture(\"paycol_123\", {})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 197,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44934,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44935,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The capture's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminCapturePayment"
												},
												"name": "AdminCapturePayment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44936,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44937,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44938,
							"name": "refund",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
									"line": 232,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44939,
									"name": "refund",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refunds a payment. It sends a request to the\n[Refund Payment](https://docs.medusajs.com/api/admin#payments_postpaymentsidrefund) API route.\n\nThe API route uses the "
											},
											{
												"kind": "code",
												"text": "`refundPayment`"
											},
											{
												"kind": "text",
												"text": " method of the payment provider associated with the payment's collection."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The payment's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.payment.refund(\"paycol_123\", {})\n.then(({ payment }) => {\n  console.log(payment)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
											"line": 232,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44940,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The payment's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44941,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The refund's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/payloads.ts",
													"qualifiedName": "AdminRefundPayment"
												},
												"name": "AdminRefundPayment",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44942,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the payment."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44943,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "AdminPaymentResponse"
												},
												"name": "AdminPaymentResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44915
							]
						},
						{
							"title": "Properties",
							"children": [
								44918
							]
						},
						{
							"title": "Methods",
							"children": [
								44919,
								44923,
								44927,
								44932,
								44938
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/payment.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 45199,
					"name": "Plugin",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45203,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/plugin.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45200,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/plugin.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45201,
									"name": "Plugin",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/plugin.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45202,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45199,
										"name": "Plugin",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45204,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/plugin.ts",
									"line": 30,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45205,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the list of plugins installed in a Medusa application."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of plugins."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.plugin.list()\n.then(({ plugins }) => {\n  console.log(plugins)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/plugin.ts",
											"line": 30,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45206,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/plugins/admin/responses.ts",
													"qualifiedName": "AdminPluginsListResponse"
												},
												"name": "AdminPluginsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45200
							]
						},
						{
							"title": "Properties",
							"children": [
								45203
							]
						},
						{
							"title": "Methods",
							"children": [
								45204
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/plugin.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43507,
					"name": "PriceList",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43511,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43508,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43509,
									"name": "PriceList",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43510,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43507,
										"name": "PriceList",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43512,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43513,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a price list. It sends a request to the\n[Get Price List](https://docs.medusajs.com/v2/api/admin#price-lists_getpricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a price list by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.retrieve(\"plist_123\")\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.retrieve(\"plist_123\", {\n  fields: \"id,*prices\"\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43514,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43515,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43516,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43517,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43518,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of price lists. It sends a request to the \n[List Price Lists](https://docs.medusajs.com/v2/api/admin#price-lists_getpricelists) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of price lists."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of price lists:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list()\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each price list:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.list({\n  fields: \"id,*prices\"\n})\n.then(({ price_lists, count, limit, offset }) => {\n  console.log(price_lists)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43519,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListListParams"
												},
												"name": "AdminPriceListListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43520,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListListResponse"
												},
												"name": "AdminPriceListListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43521,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 156,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43522,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a price list. It sends a request to the\n[Create Price List](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelists)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.create({\n  title: \"My Price List\",\n  status: \"active\",\n  type: \"sale\",\n  prices: [\n    {\n      variant_id: \"variant_123\",\n      amount: 10,\n      currency_code: \"usd\",\n      rules: {\n        region_id: \"reg_123\"\n      }\n    }\n  ]\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 156,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43523,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the price list to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminCreatePriceList"
												},
												"name": "AdminCreatePriceList",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43524,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43525,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43526,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 191,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43527,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a price list. It sends a request to the \n[Update Price List](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.update(\"plist_123\", {\n  title: \"My Price List\",\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 191,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43528,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43529,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePriceList"
												},
												"name": "AdminUpdatePriceList",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43530,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43531,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43532,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 223,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43533,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a price list. It sends a request to the\n[Delete Price List](https://docs.medusajs.com/v2/api/admin#price-lists_deletepricelistsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.delete(\"plist_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 223,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43534,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43535,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListDeleteResponse"
												},
												"name": "AdminPriceListDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43536,
							"name": "batchPrices",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 265,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43537,
									"name": "batchPrices",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the prices of a price list to create, update, or delete them.\nIt sends a request to the [Manage Prices](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsidpricesbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.batchPrices(\"plist_123\", {\n  create: [{\n    variant_id: \"variant_123\",\n    currency_code: \"usd\",\n    amount: 10,\n    rules: {\n      region_id: \"reg_123\"\n    }\n  }],\n  update: [{\n    id: \"price_123\",\n    variant_id: \"variant_123\",\n    amount: 20,\n  }],\n  delete: [\"price_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 265,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43538,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43539,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The prices to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminBatchPriceListPrice"
												},
												"name": "AdminBatchPriceListPrice",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43540,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43541,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListBatchResponse"
												},
												"name": "AdminPriceListBatchResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43542,
							"name": "linkProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
									"line": 301,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43543,
									"name": "linkProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes products from a price list. It sends a request to the\n[Remove Product](https://docs.medusajs.com/v2/api/admin#price-lists_postpricelistsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price list's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.priceList.linkProducts(\"plist_123\", {\n  remove: [\"prod_123\"]\n})\n.then(({ price_list }) => {\n  console.log(price_list)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
											"line": 301,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43544,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price list's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43545,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the products to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
													"qualifiedName": "AdminLinkPriceListProducts"
												},
												"name": "AdminLinkPriceListProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43546,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price list."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
													"qualifiedName": "AdminPriceListParams"
												},
												"name": "AdminPriceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43547,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
													"qualifiedName": "AdminPriceListResponse"
												},
												"name": "AdminPriceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43508
							]
						},
						{
							"title": "Properties",
							"children": [
								43511
							]
						},
						{
							"title": "Methods",
							"children": [
								43512,
								43517,
								43521,
								43526,
								43532,
								43536,
								43542
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-list.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43548,
					"name": "PricePreference",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43552,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43549,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43550,
									"name": "PricePreference",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43551,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43548,
										"name": "PricePreference",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43553,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 51,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43554,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a price preference. It sends a request to the\n[Get Price Preference](https://docs.medusajs.com/api/admin#price-preferences_getpricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a price preference by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.retrieve(\"prpref_123\")\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.retrieve(\"prpref_123\", {\n  fields: \"id,is_tax_inclusive\"\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 51,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43555,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43556,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43557,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43558,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43559,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of price preferences. It sends a request to the \n[List Price Preferences](https://docs.medusajs.com/api/admin#price-preferences_getpricepreferences) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of price preferences."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of price preferences:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list()\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each price preference:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.list({\n  fields: \"id,is_tax_inclusive\"\n})\n.then(({ price_preferences, count, limit, offset }) => {\n  console.log(price_preferences)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43560,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceListParams"
												},
												"name": "AdminPricePreferenceListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43561,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceListResponse"
												},
												"name": "AdminPricePreferenceListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43562,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 146,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43563,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a price preference. It sends a request to the\n[Create Price Preference](https://docs.medusajs.com/api/admin#price-preferences_postpricepreferences)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.create({\n  attribute: \"region_id\",\n  value: \"region_123\",\n  is_tax_inclusive: true\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 146,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43564,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the price preference to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/payloads.ts",
													"qualifiedName": "AdminCreatePricePreference"
												},
												"name": "AdminCreatePricePreference",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43565,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43566,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43567,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 181,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43568,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a price preference. It sends a request to the\n[Update Price Preference](https://docs.medusajs.com/api/admin#price-preferences_postpricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The price preference's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.update(\"prpref_123\", {\n  is_tax_inclusive: true\n})\n.then(({ price_preference }) => {\n  console.log(price_preference)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 181,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43569,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43570,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePricePreference"
												},
												"name": "AdminUpdatePricePreference",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43571,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the price preference."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/queries.ts",
													"qualifiedName": "AdminPricePreferenceParams"
												},
												"name": "AdminPricePreferenceParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43572,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceResponse"
												},
												"name": "AdminPricePreferenceResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43573,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
									"line": 213,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43574,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a price preference. It sends a request to the\n[Delete Price Preference](https://docs.medusajs.com/api/admin#price-preferences_deletepricepreferencesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.pricePreference.delete(\"prpref_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
											"line": 213,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43575,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The price preference's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43576,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/responses.ts",
													"qualifiedName": "AdminPricePreferenceDeleteResponse"
												},
												"name": "AdminPricePreferenceDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43549
							]
						},
						{
							"title": "Properties",
							"children": [
								43552
							]
						},
						{
							"title": "Methods",
							"children": [
								43553,
								43558,
								43562,
								43567,
								43573
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/price-preference.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43472,
					"name": "ProductCategory",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43476,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43473,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43474,
									"name": "ProductCategory",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43475,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43472,
										"name": "ProductCategory",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43477,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43478,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product category. It sends a request to the\n[Create Category](https://docs.medusajs.com/api/admin#product-categories_postproductcategories)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.create({\n  name: \"Shirts\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43479,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the category to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductCategory"
												},
												"name": "AdminCreateProductCategory",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43480,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43481,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43482,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43483,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product category. It sends a request to the\n[Update Category](https://docs.medusajs.com/api/admin#product-categories_postproductcategoriesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.update(\"pcat_123\", {\n  name: \"Shirts\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43484,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43485,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductCategory"
												},
												"name": "AdminUpdateProductCategory",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43486,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43487,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43488,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43489,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product categories. It sends a request to the \n[List Product Categories](https://docs.medusajs.com/api/admin#product-categories_getproductcategories) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product categories."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product categories:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list()\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product category:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.list({\n  fields: \"id,*products\"\n})\n.then(({ product_categories, count, limit, offset }) => {\n  console.log(product_categories)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43490,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryListParams"
												},
												"name": "AdminProductCategoryListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43491,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryListResponse"
												},
												"name": "AdminProductCategoryListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43492,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43493,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product category by its ID. It sends a request to the \n[Get Product Category](https://docs.medusajs.com/api/admin#product-categories_getproductcategoriesid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product category by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.retrieve(\"pcat_123\")\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.retrieve(\"pcat_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43494,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43495,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43496,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43497,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43498,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product category. It sends a request to the\n[Delete Product Category](https://docs.medusajs.com/api/admin#product-categories_deleteproductcategoriesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.delete(\"pcat_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43499,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43500,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryDeleteResponse"
												},
												"name": "AdminProductCategoryDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43501,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
									"line": 237,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43502,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manaes the products of a category to add or remove them. It sends a request\nto the [Manage Products](https://docs.medusajs.com/api/admin#product-categories_postproductcategoriesidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCategory.updateProducts(\"pcat_123\", {\n  add: [\"prod_123\"],\n  remove: [\"prod_321\"]\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
											"line": 237,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43503,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The category's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43504,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to create or update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductCategoryProducts"
												},
												"name": "AdminUpdateProductCategoryProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43505,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product category."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
													"qualifiedName": "AdminProductCategoryParams"
												},
												"name": "AdminProductCategoryParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43506,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
													"qualifiedName": "AdminProductCategoryResponse"
												},
												"name": "AdminProductCategoryResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43473
							]
						},
						{
							"title": "Properties",
							"children": [
								43476
							]
						},
						{
							"title": "Methods",
							"children": [
								43477,
								43482,
								43488,
								43492,
								43497,
								43501
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-category.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43438,
					"name": "ProductCollection",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43442,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43439,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43440,
									"name": "ProductCollection",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43441,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43438,
										"name": "ProductCollection",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43443,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43444,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product collection. It sends a request to the \n[Create Collection](https://docs.medusajs.com/api/admin#collections_postcollections)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.create({\n  title: \"Summer Collection\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43445,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the product collection to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminCreateCollection"
												},
												"name": "AdminCreateCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43446,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43447,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43448,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43449,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a collection. It sends a request to the\n[Update Collection](https://docs.medusajs.com/api/admin#collections_postcollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.update(\"pcol_123\", {\n  title: \"Summer Collection\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43450,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the collection."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43451,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCollection"
												},
												"name": "AdminUpdateCollection",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43452,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43453,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43454,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43455,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of collections. It sends a request to the \n[List Collections](https://docs.medusajs.com/api/admin#collections_getcollections) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of collections."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of collections:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list()\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each collection:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.list({\n  fields: \"id,*products\"\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43456,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionListParams"
												},
												"name": "AdminCollectionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43457,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionListResponse"
												},
												"name": "AdminCollectionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43458,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43459,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a collection by its ID. It sends a request to the \n[Get Collection](https://docs.medusajs.com/api/admin#collections_getcollectionsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The collection's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a collection by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.retrieve(\"pcol_123\")\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.retrieve(\"pcol_123\", {\n  fields: \"id,*products\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43460,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43461,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the collection."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
													"qualifiedName": "AdminCollectionParams"
												},
												"name": "AdminCollectionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43462,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43463,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43464,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product collection. It sends a request to the\n[Delete Collection](https://docs.medusajs.com/api/admin#collections_deletecollectionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.delete(\"pcol_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43465,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43466,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionDeleteResponse"
												},
												"name": "AdminCollectionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43467,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
									"line": 236,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43468,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the products of a collection to add or remove them. It sends a request\nto the [Manage Products](https://docs.medusajs.com/api/admin#collections_postcollectionsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product category's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productCollection.updateProducts(\"pcol_123\", {\n  add: [\"prod_123\"],\n  remove: [\"prod_321\"]\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
											"line": 236,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43469,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The collection's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43470,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to add or remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
													"qualifiedName": "AdminUpdateCollectionProducts"
												},
												"name": "AdminUpdateCollectionProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43471,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
													"qualifiedName": "AdminCollectionResponse"
												},
												"name": "AdminCollectionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43439
							]
						},
						{
							"title": "Properties",
							"children": [
								43442
							]
						},
						{
							"title": "Methods",
							"children": [
								43443,
								43448,
								43454,
								43458,
								43463,
								43467
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-collection.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44843,
					"name": "ProductTag",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44847,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44844,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44845,
									"name": "ProductTag",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44846,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44843,
										"name": "ProductTag",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44848,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44849,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product tag. It sends a request to the \n[Create Product Tag](https://docs.medusajs.com/api/admin#product-tags_postproducttags)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.create({\n  value: \"shirt\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44850,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductTag"
												},
												"name": "AdminCreateProductTag",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44851,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44852,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44853,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44854,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a tag's details. It sends a request to the\n[Update Product Tag](https://docs.medusajs.com/api/admin#product-tags_postproducttagsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.update(\"ptag_123\", {\n  value: \"shirt\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44855,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44856,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductTag"
												},
												"name": "AdminUpdateProductTag",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44857,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44858,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44859,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44860,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product tags. It sends a request to the \n[List Product Tags](https://docs.medusajs.com/api/admin#product-tags_getproducttags) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product tags."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product tags:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list()\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product tag:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.list({\n  fields: \"id,*products\"\n})\n.then(({ product_tags, count, limit, offset }) => {\n  console.log(product_tags)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44861,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagListParams"
												},
												"name": "AdminProductTagListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44862,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagListResponse"
												},
												"name": "AdminProductTagListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44863,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44864,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product tag by its ID. It sends a request to the \n[Get Product Tag](https://docs.medusajs.com/api/admin#product-tags_getproducttagsid) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product tag's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product tag by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.retrieve(\"ptag_123\")\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.retrieve(\"ptag_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_tag }) => {\n  console.log(product_tag)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44865,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44866,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product tag."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
													"qualifiedName": "AdminProductTagParams"
												},
												"name": "AdminProductTagParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44867,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagResponse"
												},
												"name": "AdminProductTagResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44868,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44869,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product tag. It sends a request to the\n[Delete Product Tag](https://docs.medusajs.com/api/admin#product-tags_deleteproducttagsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productTag.delete(\"ptag_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44870,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The tag's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44871,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
													"qualifiedName": "AdminProductTagDeleteResponse"
												},
												"name": "AdminProductTagDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44844
							]
						},
						{
							"title": "Properties",
							"children": [
								44847
							]
						},
						{
							"title": "Methods",
							"children": [
								44848,
								44853,
								44859,
								44863,
								44868
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-tag.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43705,
					"name": "ProductType",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43709,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43706,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43707,
									"name": "ProductType",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43708,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43705,
										"name": "ProductType",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43710,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43711,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product type. It sends a request to the\n[Create Product Type](https://docs.medusajs.com/api/admin#product-types_postproducttypes)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.create({\n  value: \"Clothes\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43712,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductType"
												},
												"name": "AdminCreateProductType",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43713,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43714,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43715,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43716,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product type. It sends a request to the\n[Update Product Type](https://docs.medusajs.com/api/admin#product-types_postproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.update(\"ptyp_123\", {\n  value: \"Clothes\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43717,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43718,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductType"
												},
												"name": "AdminUpdateProductType",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43719,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43720,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43721,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 133,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43722,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product types. It sends a request to the \n[List Product Types](https://docs.medusajs.com/api/admin#product-types_getproducttypes) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product types."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product types:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list()\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product type:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.list({\n  fields: \"id,*products\"\n})\n.then(({ product_types, count, limit, offset }) => {\n  console.log(product_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 133,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43723,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
													"qualifiedName": "AdminProductTypeListParams"
												},
												"name": "AdminProductTypeListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43724,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeListResponse"
												},
												"name": "AdminProductTypeListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43725,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 179,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43726,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product type by its ID. It sends a request to the \n[Get Product Type](https://docs.medusajs.com/api/admin#product-types_getproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product type by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.retrieve(\"ptyp_123\")\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.retrieve(\"ptyp_123\", {\n  fields: \"id,*products\"\n})\n.then(({ product_type }) => {\n  console.log(product_type)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 179,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43727,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43728,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
													"qualifiedName": "AdminProductTypeParams"
												},
												"name": "AdminProductTypeParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43729,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeResponse"
												},
												"name": "AdminProductTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43730,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
									"line": 208,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43731,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product type. It sends a request to the \n[Delete Product Type](https://docs.medusajs.com/api/admin#product-types_deleteproducttypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productType.delete(\"ptyp_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
											"line": 208,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43732,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43733,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
													"qualifiedName": "AdminProductTypeDeleteResponse"
												},
												"name": "AdminProductTypeDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43706
							]
						},
						{
							"title": "Properties",
							"children": [
								43709
							]
						},
						{
							"title": "Methods",
							"children": [
								43710,
								43715,
								43721,
								43725,
								43730
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-type.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44944,
					"name": "ProductVariant",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44948,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44945,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44946,
									"name": "ProductVariant",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44947,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44944,
										"name": "ProductVariant",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44949,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44950,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product variants. It sends a request to the\n[List Product Variants](https://docs.medusajs.com/api/admin#product-variants_getproductvariants)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product variants."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product variants:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list()\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each campaign:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.productVariant.list({\n  fields: \"id,products\"\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44951,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductVariantParams"
												},
												"name": "AdminProductVariantParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44952,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantListResponse"
												},
												"name": "AdminProductVariantListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44945
							]
						},
						{
							"title": "Properties",
							"children": [
								44948
							]
						},
						{
							"title": "Methods",
							"children": [
								44949
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product-variant.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43577,
					"name": "Product",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43581,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43578,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43579,
									"name": "Product",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43580,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43577,
										"name": "Product",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43582,
							"name": "import",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 38,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43583,
									"name": "import",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product import. The products are only imported after\nthe import is confirmed using the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "confirmImport",
												"target": 43594
											},
											{
												"kind": "text",
												"text": " method.\n\nThis method sends a request to the\n[Create Product Import](https://docs.medusajs.com/api/admin#products_postproductsimport)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The import's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.import({\n  file // uploaded File instance\n})\n.then(({ transaction_id }) => {\n  console.log(transaction_id)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 38,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43584,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The import's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminImportProductRequest"
												},
												"name": "AdminImportProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43585,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass to the request."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43586,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 43587,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminImportProductResponse"
												},
												"name": "AdminImportProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43588,
							"name": "createImport",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 84,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43589,
									"name": "createImport",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product import. The products are only imported after\nthe import is confirmed using the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "confirmImport",
												"target": 43594
											},
											{
												"kind": "text",
												"text": " method.\n\nThis method sends a request to the\n[Create Product Import](https://docs.medusajs.com/api/admin#products_postproductsimports)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "2.8.5"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The import's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.createImport({\n  file // uploaded File instance\n})\n.then(({ transaction_id }) => {\n  console.log(transaction_id)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 84,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43590,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The import's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminImportProductRequest"
												},
												"name": "AdminImportProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43591,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass to the request."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43592,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 43593,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminImportProductsResponse"
												},
												"name": "AdminImportProductsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43594,
							"name": "confirmImport",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 188,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43595,
									"name": "confirmImport",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms a product import created using the method "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "import",
												"target": 43582
											},
											{
												"kind": "text",
												"text": ".\nIt sends a request to the\n[Confirm Product Import](https://docs.medusajs.com/api/admin#products_postproductsimporttransaction_idconfirm)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "2.8.5"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.confirmImport(\"transaction_123\")\n.then(() => {\n  console.log(\"Import confirmed\")\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 188,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43596,
											"name": "transactionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the transaction of the created product import. This is returned\nby the API route used to create the product import."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43597,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass in the request."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43598,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 43599,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 43600,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43601,
							"name": "export",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 229,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43602,
									"name": "export",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method starts a product export process to retrieve a CSV of exported products.\n\nYou'll receive in the response the transaction ID of the workflow generating the CSV file.\nTo check the status of the execution, send a "
											},
											{
												"kind": "code",
												"text": "`GET`"
											},
											{
												"kind": "text",
												"text": " request to\n"
											},
											{
												"kind": "code",
												"text": "`/admin/workflows-executions/export-products/:transaction-id`"
											},
											{
												"kind": "text",
												"text": ".\n\nOnce the execution finishes successfully, a notification is created for the export.\nYou can retrieve the notifications using the "
											},
											{
												"kind": "code",
												"text": "`/admin/notification`"
											},
											{
												"kind": "text",
												"text": " API route to\nretrieve the file's download URL.\n\nThis method sends a request to the [Export Product](https://docs.medusajs.com/api/admin#products_postproductsexport)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The export's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.export({})\n.then(({ transaction_id }) => {\n  console.log(transaction_id)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 229,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43603,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The export's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminExportProductRequest"
												},
												"name": "AdminExportProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43604,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters to specify which products to export."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductListParams"
												},
												"name": "AdminProductListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43605,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminExportProductResponse"
												},
												"name": "AdminExportProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43606,
							"name": "batch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 285,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43607,
									"name": "batch",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages products to create, update, or delete them. It sends a request to the\n[Manage Products](https://docs.medusajs.com/api/admin#products_postproductsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The batch operations details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batch({\n  create: [\n    {\n      title: \"Shirt\",\n      options: [{\n        title: \"Default\",\n        values: [\"Default Option\"]\n      }],\n      variants: [\n        {\n          title: \"Default\",\n          options: {\n            Default: \"Default Option\"\n          },\n          prices: []\n        }\n      ]\n    }\n  ],\n  update: [{\n    id: \"prod_123\",\n    title: \"Pants\"\n  }],\n  delete: [\"prod_321\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 285,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43608,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The products to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductRequest"
												},
												"name": "AdminBatchProductRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43609,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the products."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43610,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductResponse"
												},
												"name": "AdminBatchProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43611,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 333,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43612,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a product. It sends a request to the\n[Create Product](https://docs.medusajs.com/api/admin#products_postproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.create({\n  title: \"Shirt\",\n  options: [{\n    title: \"Default\",\n    values: [\"Default Option\"]\n  }],\n  variants: [\n    {\n      title: \"Default\",\n      options: {\n        Default: \"Default Option\"\n      },\n      prices: []\n    }\n  ],\n  shipping_profile_id: \"sp_123\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 333,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43613,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProduct"
												},
												"name": "AdminCreateProduct",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43614,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43615,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43616,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 368,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43617,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product. It sends a request to the\n[Update Product](https://docs.medusajs.com/api/admin#products_postproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.update(\"prod_123\", {\n  title: \"Shirt\",\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 368,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43618,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43619,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProduct"
												},
												"name": "AdminUpdateProduct",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43620,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43621,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43622,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 431,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43623,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of products. It sends a request to the\n[List Products](https://docs.medusajs.com/api/admin#products_getproducts) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of products."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of products:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list()\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each products:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.list({\n  fields: \"id,*variants\"\n})\n.then(({ products, count, limit, offset }) => {\n  console.log(products)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 431,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43624,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductListParams"
												},
												"name": "AdminProductListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43625,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductListResponse"
												},
												"name": "AdminProductListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43626,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 477,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43627,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product by its ID. It sends a request to the\n[Get Product](https://docs.medusajs.com/api/admin#products_getproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieve(\"prod_123\")\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieve(\"prod_123\", {\n  fields: \"id,*variants\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 477,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43628,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43629,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43630,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43631,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 502,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43632,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product. It sends a request to the\n[Delete Product](https://docs.medusajs.com/api/admin#products_deleteproductsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.delete(\"prod_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 502,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43633,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43634,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductDeleteResponse"
												},
												"name": "AdminProductDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43635,
							"name": "batchVariants",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 546,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43636,
									"name": "batchVariants",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the variants of a product. It sends a request to the\n[Manage Variants](https://docs.medusajs.com/api/admin#products_postproductsidvariantsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product variants' details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batchVariants(\"prod_123\", {\n  create: [\n    {\n      title: \"Blue Shirt\",\n      options: {\n        Color: \"Blue\"\n      },\n      prices: []\n    }\n  ],\n  update: [\n    {\n      id: \"variant_123\",\n      title: \"Pants\"\n    }\n  ],\n  delete: [\"variant_123\"]\n})\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 546,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43637,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43638,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variants to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductVariantRequest"
												},
												"name": "AdminBatchProductVariantRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43639,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product variants."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43640,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductVariantResponse"
												},
												"name": "AdminBatchProductVariantResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43641,
							"name": "createVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 591,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43642,
									"name": "createVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a variant for a product. It sends a request to the\n[Create Variant](https://docs.medusajs.com/api/admin#products_postproductsidvariants)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.createVariant(\"prod_123\", {\n  title: \"Blue Shirt\",\n  options: {\n    Color: \"Blue\"\n  },\n  prices: [\n    {\n      amount: 10,\n      currency_code: \"usd\"\n    }\n  ]\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 591,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43643,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43644,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductVariant"
												},
												"name": "AdminCreateProductVariant",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43645,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43646,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43647,
							"name": "updateVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 632,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43648,
									"name": "updateVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a variant of a product. It sends a request to the\n[Update Variant](https://docs.medusajs.com/api/admin#products_postproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.updateVariant(\n  \"prod_123\",\n  \"variant_123\",\n    {\n    title: \"Blue Shirt\",\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 632,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43649,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43650,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43651,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the variant."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductVariant"
												},
												"name": "AdminUpdateProductVariant",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43652,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43653,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43654,
							"name": "listVariants",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 697,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43655,
									"name": "listVariants",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of products. It sends a request to the\n[List Products](https://docs.medusajs.com/api/admin#products_getproductsidvariants) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product variants."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product variants:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\")\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product variant:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listVariants(\"prod_123\", {\n  fields: \"id,*product\"\n})\n.then(({ variants, count, limit, offset }) => {\n  console.log(variants)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 697,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43656,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product to retrieve its variants."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43657,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductVariantParams"
												},
												"name": "AdminProductVariantParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43658,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantListResponse"
												},
												"name": "AdminProductVariantListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43659,
							"name": "retrieveVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 752,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43660,
									"name": "retrieveVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product's variant. It sends a request to the\n[Retrieve Variant](https://docs.medusajs.com/api/admin#products_getproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product variant's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product variant by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveVariant(\n  \"prod_123\",\n  \"variant_123\"\n)\n.then(({ variant }) => {\n  console.log(variant)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveVariant(\n  \"prod_123\",\n  \"variant_123\",\n  {\n    fields: \"id, *product\"\n  }\n)\n.then(({ variant }) => {\n  console.log(variant)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 752,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43661,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43662,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variant's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43663,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product variant."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43664,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantResponse"
												},
												"name": "AdminProductVariantResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43665,
							"name": "deleteVariant",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 783,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43666,
									"name": "deleteVariant",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product's variant. It sends a request to the\n[Delete Variant](https://docs.medusajs.com/api/admin#products_deleteproductsidvariantsvariant_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.deleteVariant(\"prod_123\", \"variant_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 783,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43667,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43668,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the variant."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43669,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductVariantDeleteResponse"
												},
												"name": "AdminProductVariantDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43670,
							"name": "batchVariantInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 837,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43671,
									"name": "batchVariantInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages a product's variant's inventories to associate them with inventory items,\nupdate their inventory items, or delete their association with inventory items.\n\nIt sends a request to the\n[Manage Variant Inventory](https://docs.medusajs.com/api/admin#products_postproductsidvariantsinventoryitemsbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the created, updated, or deleted inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.batchVariantInventoryItems(\n  \"prod_123\",\n  {\n    create: [\n      {\n        inventory_item_id: \"iitem_123\",\n        variant_id: \"variant_123\",\n        required_quantity: 10\n      }\n    ],\n    update: [\n      {\n        inventory_item_id: \"iitem_1234\",\n        variant_id: \"variant_1234\",\n        required_quantity: 20\n      }\n    ],\n    delete: [\n      {\n        inventory_item_id: \"iitem_321\",\n        variant_id: \"variant_321\"\n      }\n    ]\n  }\n)\n.then(({ created, updated, deleted }) => {\n  console.log(created, updated, deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 837,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43672,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product that the variant belongs to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43673,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items to create, update, or delete."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminBatchProductVariantInventoryItemRequest"
												},
												"name": "AdminBatchProductVariantInventoryItemRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43674,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Pass query parameters in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43675,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminBatchProductVariantInventoryItemResponse"
												},
												"name": "AdminBatchProductVariantInventoryItemResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43676,
							"name": "createOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 877,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43677,
									"name": "createOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an option in a product. It sends a request to the\n[Create Option](https://docs.medusajs.com/api/admin#products_postproductsidoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.createOption(\n  \"prod_123\",\n  {\n    title: \"Color\",\n    values: [\"Green\", \"Blue\"]\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 877,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43678,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43679,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The option's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminCreateProductOption"
												},
												"name": "AdminCreateProductOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43680,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43681,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43682,
							"name": "updateOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 918,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43683,
									"name": "updateOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a product's option. It sends a request to the\n[Update Option](https://docs.medusajs.com/api/admin#products_postproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.updateOption(\n  \"prod_123\",\n  \"prodopt_123\",\n  {\n    title: \"Color\"\n  }\n)\n.then(({ product }) => {\n  console.log(product)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 918,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43684,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43685,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the option to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43686,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/payloads.ts",
													"qualifiedName": "AdminUpdateProductOption"
												},
												"name": "AdminUpdateProductOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43687,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43688,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductResponse"
												},
												"name": "AdminProductResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43689,
							"name": "listOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 983,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43690,
									"name": "listOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of product options. It sends a request to the\n[List Options](https://docs.medusajs.com/api/admin#products_getproductsidoptions) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of product options."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of product options:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\")\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\", {\n  limit: 10,\n  offset: 10\n})\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each product options:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.listOptions(\"prod_123\", {\n  fields: \"id,title\"\n})\n.then(({ product_options, count, limit, offset }) => {\n  console.log(product_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 983,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43691,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the product to retrieve its options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43692,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/queries.ts",
													"qualifiedName": "AdminProductOptionParams"
												},
												"name": "AdminProductOptionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43693,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionListResponse"
												},
												"name": "AdminProductOptionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43694,
							"name": "retrieveOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 1038,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43695,
									"name": "retrieveOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a product's option. It sends a request to the\n[Get Option](https://docs.medusajs.com/api/admin#products_getproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The product option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a product option by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveOption(\n  \"prod_123\",\n  \"prodopt_123\"\n)\n.then(({ product_option }) => {\n  console.log(product_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.retrieveOption(\n  \"prod_123\",\n  \"prodopt_123\",\n  {\n    fields: \"id,title\"\n  }\n)\n.then(({ product_option }) => {\n  console.log(product_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 1038,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43696,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43697,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product option's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43698,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the product option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43699,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionResponse"
												},
												"name": "AdminProductOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43700,
							"name": "deleteOption",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
									"line": 1069,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43701,
									"name": "deleteOption",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a product's option. It sends a request to the\n[Delete Option](https://docs.medusajs.com/api/admin#products_deleteproductsidoptionsoption_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.product.deleteOption(\"prod_123\", \"prodopt_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
											"line": 1069,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43702,
											"name": "productId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The product's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43703,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The option's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43704,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/product/admin/responses.ts",
													"qualifiedName": "AdminProductOptionDeleteResponse"
												},
												"name": "AdminProductOptionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43578
							]
						},
						{
							"title": "Properties",
							"children": [
								43581
							]
						},
						{
							"title": "Methods",
							"children": [
								43582,
								43588,
								43594,
								43601,
								43606,
								43611,
								43616,
								43622,
								43626,
								43631,
								43635,
								43641,
								43647,
								43654,
								43659,
								43665,
								43670,
								43676,
								43682,
								43689,
								43694,
								43700
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/product.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 45095,
					"name": "Promotion",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45099,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45096,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45097,
									"name": "Promotion",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45098,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45095,
										"name": "Promotion",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45100,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45101,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a promotion by its ID. It sends a request to the\n[Retrieve Promotion](https://docs.medusajs.com/api/admin#promotions_getpromotionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a promotion by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.retrieve(\"promo_123\")\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.retrieve(\"promo_123\", {\n  fields: \"id,*application_method\"\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45102,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45103,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the promotion."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionParams"
												},
												"name": "AdminGetPromotionParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45104,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45105,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45106,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of promotions. It sends a request to the\n[List Promotions](https://docs.medusajs.com/api/admin#promotions_getpromotions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of promotions."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of promotions:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.list()\n.then(({ promotions, count, limit, offset }) => {\n  console.log(promotions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ promotions, count, limit, offset }) => {\n  console.log(promotions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each promotion:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.list({\n  fields: \"id,*application_method\"\n})\n.then(({ promotions, count, limit, offset }) => {\n  console.log(promotions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45107,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionsParams"
												},
												"name": "AdminGetPromotionsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45108,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionListResponse"
												},
												"name": "AdminPromotionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45109,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 145,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45110,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new promotion. It sends a request to the\n[Create Promotion](https://docs.medusajs.com/api/admin#promotions_postpromotions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.create({\n  name: \"My Promotion\",\n  description: \"This is a test promotion\",\n  code: \"PROMO123\",\n  starts_at: \"2021-01-01\",\n  ends_at: \"2021-01-01\",\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 145,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45111,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "AdminCreatePromotion"
												},
												"name": "AdminCreatePromotion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45112,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45113,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 177,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45114,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a promotion. It sends a request to the\n[Update Promotion](https://docs.medusajs.com/api/admin#promotions_postpromotionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.update(\"promo_123\", {\n  code: \"PROMO123\",\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 177,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45115,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45116,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details to update in the promotion."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "AdminUpdatePromotion"
												},
												"name": "AdminUpdatePromotion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45117,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45118,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45119,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a promotion. It sends a request to the\n[Delete Promotion](https://docs.medusajs.com/api/admin#promotions_deletepromotionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deleted promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.delete(\"promo_123\")\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45120,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45121,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
													"qualifiedName": "DeleteResponse"
												},
												"typeArguments": [
													{
														"type": "literal",
														"value": "promotion"
													}
												],
												"name": "DeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45122,
							"name": "addRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 249,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45123,
									"name": "addRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates and adds rules to a promotion. It can be the promotion's rules,\nor its application method's buy or target rules. That depends on the rule type\nyou specify as a parameter.\n\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`buy-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Buy Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidbuyrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`target-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Target Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidtargetrulesbatch)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.addRules(\"promo_123\", \"rules\", {\n  rules: [\n    {\n      operator: \"eq\",\n      attribute: \"product_id\",\n      values: [\"prod_123\"]\n    }\n  ]\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 249,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45124,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45125,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to create."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45126,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The rules to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchAddPromotionRulesReq"
												},
												"name": "BatchAddPromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45127,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45128,
							"name": "updateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 296,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45129,
									"name": "updateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates the rules of a promotion. It can be the promotion's rules,\nor its application method's buy or target rules. That depends on the rule type\nyou specify as a parameter.\n\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`buy-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Buy Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidbuyrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`target-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Target Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidtargetrulesbatch)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.updateRules(\"promo_123\", \"rules\", {\n  rules: [\n    {\n      id: \"rule_123\",\n      operator: \"ne\",\n    }\n  ]\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 296,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45130,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45131,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45132,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The rules to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchUpdatePromotionRulesReq"
												},
												"name": "BatchUpdatePromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45133,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45134,
							"name": "removeRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 338,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45135,
									"name": "removeRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes rules from a promotion. It can be the promotion's rules,\nor its application method's buy or target rules. That depends on the rule type\nyou specify as a parameter.\n\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`buy-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Buy Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidbuyrulesbatch).\n- If you set the "
											},
											{
												"kind": "code",
												"text": "`ruleType`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`target-rules`"
											},
											{
												"kind": "text",
												"text": ", the method sends a request to the\n[Manage Promotion's Target Rules API Route](https://docs.medusajs.com/api/admin#promotions_postpromotionsidtargetrulesbatch)."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.removeRules(\"promo_123\", \"rules\", {\n  rule_ids: [\"rule_123\"]\n})\n.then(({ promotion }) => {\n  console.log(promotion)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 338,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45136,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45137,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to remove."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45138,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The rules to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/payloads.ts",
													"qualifiedName": "BatchRemovePromotionRulesReq"
												},
												"name": "BatchRemovePromotionRulesReq",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45139,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionResponse"
												},
												"name": "AdminPromotionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45140,
							"name": "listRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 374,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45141,
									"name": "listRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the rules of a promotion. It can be the promotion's rules,\nor its application method's buy or target rules. That depends on the rule type\nyou specify as a parameter.\n\nThis method sends a request to the\n[List Rules of a Promotion API Route](https://docs.medusajs.com/api/admin#promotions_getpromotionsidrule_type)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The promotion's rules."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.listRules(\"promo_123\", \"rules\")\n.then(({ rules }) => {\n  console.log(rules)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 374,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45142,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The promotion's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 45143,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to retrieve. Can be "
													},
													{
														"kind": "code",
														"text": "`rules`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`buy-rules`"
													},
													{
														"kind": "text",
														"text": ", or "
													},
													{
														"kind": "code",
														"text": "`target-rules`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45144,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the rules."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionRuleParams"
												},
												"name": "AdminGetPromotionRuleParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45145,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminPromotionRuleListResponse"
												},
												"name": "AdminPromotionRuleListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45146,
							"name": "listRuleAttributes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 412,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45147,
									"name": "listRuleAttributes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve a list of potential rule attributes for the promotion and application method types specified in the query parameters. Only the attributes of the rule type specified in the path parameter are retrieved:\n\n- If "
											},
											{
												"kind": "code",
												"text": "`rule_type`"
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`rules`"
											},
											{
												"kind": "text",
												"text": ", the attributes of the promotion's type are retrieved.\n- If "
											},
											{
												"kind": "code",
												"text": "`rule_type`"
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`target-rules`"
											},
											{
												"kind": "text",
												"text": ", the target rules' attributes of the application method's type are retrieved.\n- If "
											},
											{
												"kind": "code",
												"text": "`rule_type`"
											},
											{
												"kind": "text",
												"text": " is "
											},
											{
												"kind": "code",
												"text": "`buy-rules`"
											},
											{
												"kind": "text",
												"text": ", the buy rules' attributes of the application method's type are retrieved.\n\nThis method sends a request to the\n[List Rule Attribute Options API Route](https://docs.medusajs.com/api/admin#promotions_getpromotionsruleattributeoptionsrule_type)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of rule attributes."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.listRuleAttributes(\"rules\", \"standard\")\n.then(({ attributes }) => {\n  console.log(attributes)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 412,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45148,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to retrieve the attributes for. Can be "
													},
													{
														"kind": "code",
														"text": "`rules`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`buy-rules`"
													},
													{
														"kind": "text",
														"text": ", or "
													},
													{
														"kind": "code",
														"text": "`target-rules`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45149,
											"name": "promotionType",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of promotion to retrieve the attributes for. It can be "
													},
													{
														"kind": "code",
														"text": "`standard`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`buyget`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45150,
											"name": "applicationMethodTargetType",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of application method to retrieve the attributes for. It can be "
													},
													{
														"kind": "code",
														"text": "`order`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`items`"
													},
													{
														"kind": "text",
														"text": " (default) or "
													},
													{
														"kind": "code",
														"text": "`shipping_methods`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45151,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminRuleAttributeOptionsListResponse"
												},
												"name": "AdminRuleAttributeOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45152,
							"name": "listRuleValues",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
									"line": 451,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45153,
									"name": "listRuleValues",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Retrieve all potential values for promotion rules and target and buy rules based on the specified rule attribute and type.\nFor example, if you provide the ID of the "
											},
											{
												"kind": "code",
												"text": "`currency_code`"
											},
											{
												"kind": "text",
												"text": " rule attribute, and set "
											},
											{
												"kind": "code",
												"text": "`rule_type`"
											},
											{
												"kind": "text",
												"text": " to rules,\na list of currencies are retrieved in label-value pairs.\n\nThis method sends a request to the\n[List Rule Values API Route](https://docs.medusajs.com/api/admin#promotions_getpromotionsrulevalueoptionsrule_typerule_attribute_id)"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of rule values."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.promotion.listRuleValues(\"rules\", \"attr_123\")\n.then(({ values }) => {\n  console.log(values)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
											"line": 451,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45154,
											"name": "ruleType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The type of rules to retrieve the values for. Can be "
													},
													{
														"kind": "code",
														"text": "`rules`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`buy-rules`"
													},
													{
														"kind": "text",
														"text": ", or "
													},
													{
														"kind": "code",
														"text": "`target-rules`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45155,
											"name": "ruleValue",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the rule attribute to retrieve the values for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45156,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the rule values."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/queries.ts",
													"qualifiedName": "AdminGetPromotionsRuleValueParams"
												},
												"name": "AdminGetPromotionsRuleValueParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45157,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/promotion/admin/responses.ts",
													"qualifiedName": "AdminRuleValueOptionsListResponse"
												},
												"name": "AdminRuleValueOptionsListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45096
							]
						},
						{
							"title": "Properties",
							"children": [
								45099
							]
						},
						{
							"title": "Methods",
							"children": [
								45100,
								45105,
								45109,
								45113,
								45118,
								45122,
								45128,
								45134,
								45140,
								45146,
								45152
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/promotion.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44953,
					"name": "RefundReason",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44957,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44954,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44955,
									"name": "RefundReason",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44956,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44953,
										"name": "RefundReason",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44958,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44959,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of refund reasons. It sends a request to the \n[List Refund Reasons](https://docs.medusajs.com/api/admin#refund-reasons_getrefundreasons)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of refund reasons."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of refund reasons:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.refundReason.list()\n.then(({ refund_reasons, count, limit, offset }) => {\n  console.log(refund_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.refundReason.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ refund_reasons, count, limit, offset }) => {\n  console.log(refund_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each refund reason:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.refundReason.list({\n  fields: \"id,name\"\n})\n.then(({ refund_reasons, count, limit, offset }) => {\n  console.log(refund_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44960,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/queries.ts",
													"qualifiedName": "RefundReasonFilters"
												},
												"name": "RefundReasonFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44961,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/payment/admin/responses.ts",
													"qualifiedName": "RefundReasonsResponse"
												},
												"name": "RefundReasonsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44954
							]
						},
						{
							"title": "Properties",
							"children": [
								44957
							]
						},
						{
							"title": "Methods",
							"children": [
								44958
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/refund-reasons.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43758,
					"name": "Region",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43762,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43759,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 17,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43760,
									"name": "Region",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 17,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43761,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43758,
										"name": "Region",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43763,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 40,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43764,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new region. It sends a request to the \n[Create Region](https://docs.medusajs.com/api/admin#regions_postregions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.create({\n  name: \"United States\",\n  currency_code: \"usd\",\n})\n.then(({ region }) => {\n  console.log(region)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 40,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43765,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the region to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/payloads.ts",
													"qualifiedName": "AdminCreateRegion"
												},
												"name": "AdminCreateRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43766,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43767,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionResponse"
												},
												"name": "AdminRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43768,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 75,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43769,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a region. It sends a request to the \n[Update Region](https://docs.medusajs.com/api/admin#regions_postregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.update(\"region_123\", {\n  name: \"United States\",\n})\n.then(({ region }) => {\n  console.log(region)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 75,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43770,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the region to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43771,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the region to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/payloads.ts",
													"qualifiedName": "AdminUpdateRegion"
												},
												"name": "AdminUpdateRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43772,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43773,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionResponse"
												},
												"name": "AdminRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43774,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 139,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43775,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of regions. It sends a request to the \n[List Regions](https://docs.medusajs.com/api/admin#regions_getregions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of regions."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of regions:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.list()\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each region:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.list({\n  fields: \"id,*countries\"\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 139,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43776,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/region/admin/queries.ts",
															"qualifiedName": "AdminRegionFilters"
														},
														"name": "AdminRegionFilters",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 43777,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionListResponse"
												},
												"name": "AdminRegionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43778,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 185,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43779,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a region by ID. It sends a request to the \n[Get Region](https://docs.medusajs.com/api/admin#regions_getregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a region by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.retrieve(\"region_123\")\n.then(({ region }) => {\n  console.log(region)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.retrieve(\"region_123\", {\n  fields: \"id,*countries\"\n})\n.then(({ region }) => {\n  console.log(region)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 185,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43780,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the region to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43781,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43782,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionResponse"
												},
												"name": "AdminRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43783,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43784,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a region by ID. It sends a request to the \n[Delete Region](https://docs.medusajs.com/api/admin#regions_deleteregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.region.delete(\"region_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43785,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the region to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43786,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/region/admin/responses.ts",
													"qualifiedName": "AdminRegionDeleteResponse"
												},
												"name": "AdminRegionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43759
							]
						},
						{
							"title": "Properties",
							"children": [
								43762
							]
						},
						{
							"title": "Methods",
							"children": [
								43763,
								43768,
								43774,
								43778,
								43783
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/region.ts",
							"line": 9,
							"character": 13
						}
					]
				},
				{
					"id": 45032,
					"name": "Reservation",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45036,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45033,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45034,
									"name": "Reservation",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45035,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45032,
										"name": "Reservation",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45037,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45038,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a reservation by ID. It sends a request to the\n[Get Reservation](https://docs.medusajs.com/api/admin#reservations_getreservationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reservation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a reservation by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.retrieve(\"res_123\")\n.then(({ reservation }) => {\n  console.log(reservation)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.retrieve(\"res_123\", {\n  fields: \"id,name\"\n})\n.then(({ reservation }) => {\n  console.log(reservation)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45039,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45040,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the reservation."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminReservationParams"
												},
												"name": "AdminReservationParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45041,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45042,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45043,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of reservations. It sends a request to the\n[List Reservations](https://docs.medusajs.com/api/admin#reservations_getreservations)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of reservations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.list()\n.then(({ reservations, count, limit, offset }) => {\n  console.log(reservations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ reservations, count, limit, offset }) => {\n  console.log(reservations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each reservation:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.list({\n  fields: \"id,*inventory_item\"\n})\n.then(({ reservations, count, limit, offset }) => {\n  console.log(reservations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45044,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45045,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationListResponse"
												},
												"name": "AdminReservationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45046,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 146,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45047,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a reservation. It sends a request to the\n[Create Reservation](https://docs.medusajs.com/api/admin#reservations_postreservations)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reservation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.create({\n  inventory_item_id: \"iitem_123\",\n  location_id: \"sloc_123\",\n  quantity: 10,\n})\n.then(({ reservation }) => {\n  console.log(reservation)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 146,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45048,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
													"qualifiedName": "AdminCreateReservation"
												},
												"name": "AdminCreateReservation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45049,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the reservation."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45050,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45051,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 181,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45052,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a reservation. It sends a request to the\n[Update Reservation](https://docs.medusajs.com/api/admin#reservations_postreservationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reservation's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.update(\"res_123\", {\n  quantity: 20,\n})\n.then(({ reservation }) => {\n  console.log(reservation)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 181,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45053,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45054,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReservation"
												},
												"name": "AdminUpdateReservation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45055,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the reservation."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
													"qualifiedName": "AdminGetReservationsParams"
												},
												"name": "AdminGetReservationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45056,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationResponse"
												},
												"name": "AdminReservationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45057,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
									"line": 213,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45058,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a reservation by ID. It sends a request to the\n[Delete Reservation](https://docs.medusajs.com/api/admin#reservations_deletereservationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.reservation.delete(\"res_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
											"line": 213,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45059,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45060,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
													"qualifiedName": "AdminReservationDeleteResponse"
												},
												"name": "AdminReservationDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45033
							]
						},
						{
							"title": "Properties",
							"children": [
								45036
							]
						},
						{
							"title": "Methods",
							"children": [
								45037,
								45042,
								45046,
								45051,
								45057
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/reservation.ts",
							"line": 5,
							"character": 6
						}
					]
				},
				{
					"id": 43787,
					"name": "ReturnReason",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43791,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43788,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43789,
									"name": "ReturnReason",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43790,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43787,
										"name": "ReturnReason",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43792,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43793,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of return reasons. It sends a request to the\n[List Return Reasons](https://docs.medusajs.com/api/admin#return-reasons_returnreason_schema)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of return reasons."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of return reasons:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.list()\n.then(({ return_reasons, count, limit, offset }) => {\n  console.log(return_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ return_reasons, count, limit, offset }) => {\n  console.log(return_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each return reason:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.list({\n  fields: \"id,value\"\n})\n.then(({ return_reasons, count, limit, offset }) => {\n  console.log(return_reasons)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43794,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonListParams"
												},
												"name": "AdminReturnReasonListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43795,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonListResponse"
												},
												"name": "AdminReturnReasonListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43796,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 111,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43797,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a return reason by ID. It sends a request to the\n[Get Return Reason](https://docs.medusajs.com/api/admin#return-reasons_getreturnreasonsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return reason's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a return reason by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.retrieve(\"ret_123\")\n.then(({ return_reason }) => {\n  console.log(return_reason)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.retrieve(\"ret_123\", {\n  fields: \"id,value\"\n})\n.then(({ return_reason }) => {\n  console.log(return_reason)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 111,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43798,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The return reason's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43799,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return reason."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43800,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43801,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 144,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43802,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a return reason. It sends a request to the\n[Create Return Reason](https://docs.medusajs.com/api/admin#return-reasons_postreturnreasons)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return reason's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.create({\n  value: \"refund\",\n  label: \"Refund\",\n})\n.then(({ return_reason }) => {\n  console.log(return_reason)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 144,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43803,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return reason to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
													"qualifiedName": "AdminCreateReturnReason"
												},
												"name": "AdminCreateReturnReason",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43804,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return reason."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43805,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43806,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 180,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43807,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a return reason. It sends a request to the\n[Update Return Reason](https://docs.medusajs.com/api/admin#return-reasons_postreturnreasonsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return reason's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.update(\"ret_123\", {\n  value: \"refund\",\n  label: \"Refund\",\n})\n.then(({ return_reason }) => {\n  console.log(return_reason)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 180,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43808,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The return reason's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43809,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return reason to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnReason"
												},
												"name": "AdminUpdateReturnReason",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43810,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return reason."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43811,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonResponse"
												},
												"name": "AdminReturnReasonResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43812,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
									"line": 213,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43813,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a return reason. It sends a request to the\n[Delete Return Reason](https://docs.medusajs.com/api/admin#return-reasons_deletereturnreasonsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.returnReason.delete(\"ret_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
											"line": 213,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43814,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The return reason's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43815,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass to the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
													"qualifiedName": "AdminReturnReasonParams"
												},
												"name": "AdminReturnReasonParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43816,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
													"qualifiedName": "AdminReturnReasonDeleteResponse"
												},
												"name": "AdminReturnReasonDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43788
							]
						},
						{
							"title": "Properties",
							"children": [
								43791
							]
						},
						{
							"title": "Methods",
							"children": [
								43792,
								43796,
								43801,
								43806,
								43812
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return-reason.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 44390,
					"name": "Return",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44394,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44391,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 14,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44392,
									"name": "Return",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 14,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44393,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44390,
										"name": "Return",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44395,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 65,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44396,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of returns. It sends a request to the\n[List Returns](https://docs.medusajs.com/api/admin#returns_getreturns)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of returns."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of returns:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.list()\n.then(({ returns, count, limit, offset }) => {\n  console.log(returns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ returns, count, limit, offset }) => {\n  console.log(returns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each return:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.list({\n  fields: \"id,*items\"\n})\n.then(({ returns, count, limit, offset }) => {\n  console.log(returns)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 65,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44397,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
													"qualifiedName": "AdminReturnFilters"
												},
												"name": "AdminReturnFilters",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44398,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnsResponse"
												},
												"name": "AdminReturnsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44399,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 108,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44400,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a return by ID. It sends a request to the\n[Get Return](https://docs.medusajs.com/api/admin#returns_getreturnsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a return by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.retrieve(\"return_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.retrieve(\"return_123\", {\n  fields: \"id,*items\"\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 108,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44401,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44402,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44403,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44404,
							"name": "initiateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 136,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44405,
									"name": "initiateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method initiates a return request by creating a return. It sends a request to the\n[Create Return](https://docs.medusajs.com/api/admin#returns_postreturns)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.initiateRequest({\n  order_id: \"order_123\",\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 136,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44406,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminInitiateReturnRequest"
												},
												"name": "AdminInitiateReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44407,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44408,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44409,
							"name": "cancel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 168,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44410,
									"name": "cancel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a return. It sends a request to the\n[Cancel Return](https://docs.medusajs.com/api/admin#returns_postreturnsidcancel)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.cancel(\"return_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 168,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44411,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to cancel."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44412,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44413,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44414,
							"name": "cancelRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 199,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44415,
									"name": "cancelRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a return request. It sends a request to the\n[Cancel Return Request](https://docs.medusajs.com/api/admin#returns_deletereturnsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.cancelRequest(\"return_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 199,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44416,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to cancel."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44417,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44418,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44419,
							"name": "addReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 234,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44420,
									"name": "addReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds an item to a return request. It sends a request to the\n[Add Return Item](https://docs.medusajs.com/api/admin#returns_postreturnsidrequestitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.addReturnItem(\"return_123\", {\n  id: \"orlitem_123\",\n  quantity: 1,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 234,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44421,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to add the item to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44422,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the item to add to the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminAddReturnItems"
												},
												"name": "AdminAddReturnItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44423,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44424,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44425,
							"name": "updateReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 276,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44426,
									"name": "updateReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an item in a return request by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property. For example, \n"
											},
											{
												"kind": "code",
												"text": "`item.actions.find((action) => action.action === \"RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is the ID of an item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Update Requested Return Item](https://docs.medusajs.com/api/admin#returns_postreturnsidrequestitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateReturnItem(\"return_123\", \"orchach_123\", {\n  quantity: 2,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 276,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44427,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update the item in."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44428,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44429,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the item to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnItems"
												},
												"name": "AdminUpdateReturnItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44430,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44431,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44432,
							"name": "removeReturnItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 317,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44433,
									"name": "removeReturnItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes an item from a return request by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property. For example, \n"
											},
											{
												"kind": "code",
												"text": "`item.actions.find((action) => action.action === \"RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is the ID of an item's "
											},
											{
												"kind": "code",
												"text": "`RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Remove Item from Return](https://docs.medusajs.com/api/admin#returns_deletereturnsidrequestitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.removeReturnItem(\"return_123\", \"orchach_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 317,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44434,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to remove the item from."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44435,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item's "
													},
													{
														"kind": "code",
														"text": "`RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44436,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44437,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44438,
							"name": "addReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 352,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44439,
									"name": "addReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a shipping method to a return request. It sends a request to the\n[Add Shipping Method to Return](https://docs.medusajs.com/api/admin#returns_postreturnsidshippingmethod)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.addReturnShipping(\"return_123\", {\n  shipping_option_id: \"so_123\",\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 352,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44440,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to add the shipping method to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44441,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping method to add to the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminAddReturnShipping"
												},
												"name": "AdminAddReturnShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44442,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44443,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44444,
							"name": "updateReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 397,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44445,
									"name": "updateReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping method in a return request by the ID of the shipping method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`shipping_method.actions.find((action) => action.action === \"SHIPPING_ADD\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a shipping method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Update Shipping Method in Return](https://docs.medusajs.com/api/admin#returns_postreturnsidshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateReturnShipping(\"return_123\", \"orchach_123\", {\n  custom_amount: 100,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 397,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44446,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update the shipping method in."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44447,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44448,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping method to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnShipping"
												},
												"name": "AdminUpdateReturnShipping",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44449,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44450,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44451,
							"name": "deleteReturnShipping",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 440,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44452,
									"name": "deleteReturnShipping",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a shipping method from a return request by the ID of the shipping method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery shipping method has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`shipping_method.actions.find((action) => action.action === \"SHIPPING_ADD\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a shipping method's "
											},
											{
												"kind": "code",
												"text": "`SHIPPING_ADD`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Remove Shipping Method from Return](https://docs.medusajs.com/api/admin#returns_deletereturnsidshippingmethodaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.deleteReturnShipping(\"return_123\", \"orchach_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 440,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44453,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to remove the shipping method from."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44454,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping method's "
													},
													{
														"kind": "code",
														"text": "`SHIPPING_ADD`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44455,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44456,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44457,
							"name": "updateRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 475,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44458,
									"name": "updateRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a return request. It sends a request to the\n[Update Return](https://docs.medusajs.com/api/admin#returns_postreturnsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateRequest(\"return_123\", {\n  location_id: \"sloc_123\",\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 475,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44459,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44460,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReturnRequest"
												},
												"name": "AdminUpdateReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44461,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44462,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44463,
							"name": "confirmRequest",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 516,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44464,
									"name": "confirmRequest",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms a return request. The return's changes are applied on the inventory quantity of the return\nitems and the order only after the return has been confirmed as received using the\n[Confirm Return Receival](https://docs.medusajs.com/api/admin#returns_postreturnsidreceiveconfirm)\nAPI route.\n\nThis method sends a request to the\n[Confirm Return Request](https://docs.medusajs.com/api/admin#returns_postreturnsidrequest)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.confirmRequest(\"return_123\", {\n  no_notification: true,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 516,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44465,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to confirm."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44466,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return to confirm."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminConfirmReturnRequest"
												},
												"name": "AdminConfirmReturnRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44467,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44468,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44469,
							"name": "initiateReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 552,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44470,
									"name": "initiateReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method starts the return receival process. It sends a request to the\n[Start Return Receival](https://docs.medusajs.com/api/admin#returns_postreturnsidreceive)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.initiateReceive(\"return_123\", {\n  internal_note: \"Return received by the customer\",\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 552,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44471,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to start the receival process."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44472,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the return to start the receival process."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminInitiateReceiveReturn"
												},
												"name": "AdminInitiateReceiveReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44473,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44474,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44475,
							"name": "receiveItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 592,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44476,
									"name": "receiveItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds received items to a return. These items will have the action "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": ".\n\nThe method sends a request to the\n[Add Received Items](https://docs.medusajs.com/api/admin#returns_postreturnsidreceiveitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.receiveItems(\"return_123\", {\n  items: [\n    { id: \"item_123\", quantity: 1 },\n  ],\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 592,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44477,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to add the received items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44478,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the received items to add to the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminReceiveItems"
												},
												"name": "AdminReceiveItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44479,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44480,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44481,
							"name": "updateReceiveItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 637,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44482,
									"name": "updateReceiveItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a received item in the return by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`received_item.actions.find((action) => action.action === \"RECEIVE_RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a received item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Update Received Item](https://docs.medusajs.com/api/admin#returns_postreturnsidreceiveitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateReceiveItem(\"return_123\", \"orchach_123\", {\n  quantity: 2,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 637,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44483,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update the received item in."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44484,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the received item's "
													},
													{
														"kind": "code",
														"text": "`RECEIVE_RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44485,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the received item to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateReceiveItems"
												},
												"name": "AdminUpdateReceiveItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44486,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44487,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44488,
							"name": "removeReceiveItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 680,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44489,
									"name": "removeReceiveItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a received item from the return by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`received_item.actions.find((action) => action.action === \"RECEIVE_RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a received item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Remove Received Item](https://docs.medusajs.com/api/admin#returns_deletereturnsidreceiveitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.removeReceiveItem(\"return_123\", \"orchach_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 680,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44490,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to remove the received item from."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44491,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the received item's "
													},
													{
														"kind": "code",
														"text": "`RECEIVE_RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44492,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44493,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44494,
							"name": "dismissItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 722,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44495,
									"name": "dismissItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds damaged items to the return. These items will have the action "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": ".\n\nA damaged item's quantity is not added back to the associated inventory item's quantity in the\nstock location where the return is initiated from.\n\nThe method sends a request to the\n[Add Damaged Items](https://docs.medusajs.com/api/admin#returns_postreturnsiddismissitems)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.dismissItems(\"return_123\", {\n  items: [\n    { id: \"orli_123\", quantity: 1 },\n  ],\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 722,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44496,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to add the damaged items to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44497,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the damaged items to add to the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminDismissItems"
												},
												"name": "AdminDismissItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44498,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44499,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44500,
							"name": "updateDismissItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 767,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44501,
									"name": "updateDismissItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a damaged item in the return by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`item.actions.find((action) => action.action === \"RECEIVE_DAMAGED_RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a damaged item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Update Damaged Item](https://docs.medusajs.com/api/admin#returns_postreturnsiddismissitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.updateDismissItem(\"return_123\", \"orchach_123\", {\n  quantity: 2,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 767,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44502,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to update the damaged item in."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44503,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the damaged item's "
													},
													{
														"kind": "code",
														"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44504,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the damaged item to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminUpdateDismissItems"
												},
												"name": "AdminUpdateDismissItems",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44505,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44506,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44507,
							"name": "removeDismissItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 810,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44508,
									"name": "removeDismissItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method removes a damaged item from the return by the ID of the item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nEvery item has an "
											},
											{
												"kind": "code",
												"text": "`actions`"
											},
											{
												"kind": "text",
												"text": " property, whose value is an array of actions. You can check the action's name \nusing its "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " property, and use the value of the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " property.\n\nFor example, "
											},
											{
												"kind": "code",
												"text": "`item.actions.find((action) => action.action === \"RECEIVE_DAMAGED_RETURN_ITEM\")?.id`"
											},
											{
												"kind": "text",
												"text": " is \nthe ID of a damaged item's "
											},
											{
												"kind": "code",
												"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
											},
											{
												"kind": "text",
												"text": " action.\n\nThis method sends a request to the\n[Remove Damaged Item](https://docs.medusajs.com/api/admin#returns_deletereturnsiddismissitemsaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.removeDismissItem(\"return_123\", \"orchach_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 810,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44509,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to remove the damaged item from."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44510,
											"name": "actionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the damaged item's "
													},
													{
														"kind": "code",
														"text": "`RECEIVE_DAMAGED_RETURN_ITEM`"
													},
													{
														"kind": "text",
														"text": " action."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44511,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44512,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44513,
							"name": "confirmReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 845,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44514,
									"name": "confirmReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms the return receival. It sends a request to the\n[Confirm Return Receival](https://docs.medusajs.com/api/admin#returns_postreturnsidreceiveconfirm)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.confirmReceive(\"return_123\", {\n  no_notification: true,\n})\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 845,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44515,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to confirm the receival of."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44516,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the receival confirmation."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
													"qualifiedName": "AdminConfirmReceiveReturn"
												},
												"name": "AdminConfirmReceiveReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44517,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44518,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44519,
							"name": "cancelReceive",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
									"line": 878,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44520,
									"name": "cancelReceive",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method cancels a return receival. It sends a request to the\n[Cancel Return Receival](https://docs.medusajs.com/api/admin#returns_deletereturnsidreceive)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The return's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.return.cancelReceive(\"return_123\")\n.then(({ return }) => {\n  console.log(return)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
											"line": 878,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44521,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the return to cancel the receival of."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44522,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the return."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44523,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
													"qualifiedName": "AdminReturnResponse"
												},
												"name": "AdminReturnResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44391
							]
						},
						{
							"title": "Properties",
							"children": [
								44394
							]
						},
						{
							"title": "Methods",
							"children": [
								44395,
								44399,
								44404,
								44409,
								44414,
								44419,
								44425,
								44432,
								44438,
								44444,
								44451,
								44457,
								44463,
								44469,
								44475,
								44481,
								44488,
								44494,
								44500,
								44507,
								44513,
								44519
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/return.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 43861,
					"name": "SalesChannel",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43865,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43862,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43863,
									"name": "SalesChannel",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43864,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43861,
										"name": "SalesChannel",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43866,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43867,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new sales channel. It sends a request to the\n[Create Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_postsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.create({\n  name: \"Storefront\",\n})\n.then(({ salesChannel }) => {\n  console.log(salesChannel)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43868,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the sales channel to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminCreateSalesChannel"
												},
												"name": "AdminCreateSalesChannel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43869,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43870,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43871,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 73,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43872,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a sales channel. It sends a request to the\n[Update Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_postsaleschannelsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.update(\n  \"sc_123\",\n  {\n    name: \"Storefront\",\n  }\n)\n.then(({ salesChannel }) => {\n  console.log(salesChannel)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 73,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43873,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43874,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the sales channel to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminUpdateSalesChannel"
												},
												"name": "AdminUpdateSalesChannel",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43875,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43876,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43877,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 105,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43878,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a sales channel. It sends a request to the\n[Delete Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_deletesaleschannelsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.delete(\"sc_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 105,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43879,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43880,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelDeleteResponse"
												},
												"name": "AdminSalesChannelDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43881,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 148,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43882,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a sales channel. It sends a request to the\n[Retrieve Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_getsaleschannelsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a sales channel by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.retrieve(\"sc_123\")\n.then(({ sales_channel }) => {\n  console.log(sales_channel)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.retrieve(\"sc_123\", {\n  fields: \"id,*products\"\n})\n.then(({ sales_channel }) => {\n  console.log(sales_channel)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 148,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43883,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43884,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43885,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43886,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43887,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of sales channels. It sends a request to the\n[List Sales Channels](https://docs.medusajs.com/api/admin#sales-channels_getsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sales channels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of sales channels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.list()\n.then(({ sales_channels, count, limit, offset }) => {\n  console.log(sales_channels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ sales_channels, count, limit, offset }) => {\n  console.log(sales_channels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each sales channel:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.list({\n  fields: \"id,*products\"\n})\n.then(({ sales_channels, count, limit, offset }) => {\n  console.log(sales_channels)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43888,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/queries.ts",
													"qualifiedName": "AdminSalesChannelListParams"
												},
												"name": "AdminSalesChannelListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43889,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelListResponse"
												},
												"name": "AdminSalesChannelListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43890,
							"name": "updateProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 245,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43891,
									"name": "updateProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the products in a sales channel to add or remove them. It sends a request to the\n[Manage Products in Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_postsaleschannelsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.updateProducts(\"sc_123\", {\n  add: [\"prod_123\", \"prod_456\"],\n  remove: [\"prod_789\"]\n})\n.then(({ sales_channel }) => {\n  console.log(sales_channel)\n})\n```"
													}
												]
											},
											{
												"tag": "@deprecated",
												"content": [
													{
														"kind": "text",
														"text": "Use "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "batchProducts",
														"target": 43895
													},
													{
														"kind": "text",
														"text": " instead"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 245,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43892,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to manage the products for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43893,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the products to add or remove from the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminUpdateSalesChannelProducts"
												},
												"name": "AdminUpdateSalesChannelProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43894,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43895,
							"name": "batchProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
									"line": 279,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43896,
									"name": "batchProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the products in a sales channel to add or remove them. It sends a request to the\n[Manage Products in Sales Channel](https://docs.medusajs.com/api/admin#sales-channels_postsaleschannelsidproducts)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sales channel's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.salesChannel.batchProducts(\"sc_123\", {\n  add: [\"prod_123\", \"prod_456\"],\n  remove: [\"prod_789\"]\n})\n.then(({ sales_channel }) => {\n  console.log(sales_channel)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
											"line": 279,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43897,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the sales channel to manage the products for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43898,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the products to add or remove from the sales channel."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/payloads.ts",
													"qualifiedName": "AdminUpdateSalesChannelProducts"
												},
												"name": "AdminUpdateSalesChannelProducts",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43899,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/responses.ts",
													"qualifiedName": "AdminSalesChannelResponse"
												},
												"name": "AdminSalesChannelResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43862
							]
						},
						{
							"title": "Properties",
							"children": [
								43865
							]
						},
						{
							"title": "Methods",
							"children": [
								43866,
								43871,
								43877,
								43881,
								43886,
								43890,
								43895
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/sales-channel.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44001,
					"name": "ShippingOptionType",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44005,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44002,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44003,
									"name": "ShippingOptionType",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44004,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44001,
										"name": "ShippingOptionType",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44006,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
									"line": 37,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44007,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipping option type. It sends a request to the\n[Create Shipping Option Type](https://docs.medusajs.com/api/admin#shipping-option-types_postshippingoptiontypes)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOptionType.create({\n  label: \"Standard\",\n  code: \"standard\",\n  description: \"Ship in 2-3 days.\"\n})\n.then(({ shipping_option_type }) => {\n  console.log(shipping_option_type)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
											"line": 37,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44008,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping option type's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminCreateShippingOptionType"
												},
												"name": "AdminCreateShippingOptionType",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44009,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the shipping option type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44010,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionTypeResponse"
												},
												"name": "AdminShippingOptionTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44011,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
									"line": 72,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44012,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping option type. It sends a request to the\n[Update Shipping Option Type](https://docs.medusajs.com/api/admin#shipping-option-types_postshippingoptiontypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOptionType.update(\"sotype_123\", {\n  code: \"express\"\n})\n.then(({ shipping_option_type }) => {\n  console.log(shipping_option_type)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
											"line": 72,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44013,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping option type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44014,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to update in the shipping option type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingOptionType"
												},
												"name": "AdminUpdateShippingOptionType",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44015,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the shipping option type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44016,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionTypeResponse"
												},
												"name": "AdminShippingOptionTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44017,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
									"line": 135,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44018,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of shipping option types. It sends a request to the\n[List Shipping Option Types](https://docs.medusajs.com/api/admin#shipping-option-types_getshippingoptiontypes) API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The paginated list of shipping option types."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of shipping option types:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOptionType.list()\n.then(({ shipping_option_types, count, limit, offset }) => {\n  console.log(shipping_option_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOptionType.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ shipping_option_types, count, limit, offset }) => {\n  console.log(shipping_option_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each shipping option type:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOptionType.list({\n  fields: \"id,*shippingOptions\"\n})\n.then(({ shipping_option_types, count, limit, offset }) => {\n  console.log(shipping_option_types)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
											"line": 135,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44019,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
													"qualifiedName": "AdminShippingOptionTypeListParams"
												},
												"name": "AdminShippingOptionTypeListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44020,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionTypeListResponse"
												},
												"name": "AdminShippingOptionTypeListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44021,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
									"line": 181,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44022,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a shipping option type by its ID. It sends a request to the\n[Get Shipping Option Type](https://docs.medusajs.com/api/admin#shipping-option-types_getshippingoptiontypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a shipping option type by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOptionType.retrieve(\"sotype_123\")\n.then(({ shipping_option_type }) => {\n  console.log(shipping_option_type)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOptionType.retrieve(\"sotype_123\", {\n  fields: \"id,*shippingOptions\"\n})\n.then(({ shipping_option_type }) => {\n  console.log(shipping_option_type)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
											"line": 181,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44023,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping option type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44024,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields to retrieve in the shipping option type."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44025,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionTypeResponse"
												},
												"name": "AdminShippingOptionTypeResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44026,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44027,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a shipping option type. It sends a request to the\n[Delete Shipping Option Type](https://docs.medusajs.com/api/admin#shipping-option-types_deleteshippingoptiontypesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option type's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOptionType.delete(\"sotype_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44028,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The shipping option type's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44029,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionTypeDeleteResponse"
												},
												"name": "AdminShippingOptionTypeDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44002
							]
						},
						{
							"title": "Properties",
							"children": [
								44005
							]
						},
						{
							"title": "Methods",
							"children": [
								44006,
								44011,
								44017,
								44021,
								44026
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option-type.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43967,
					"name": "ShippingOption",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43971,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43968,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43969,
									"name": "ShippingOption",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43970,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43967,
										"name": "ShippingOption",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43972,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43973,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a shipping option. It sends a request to the\n[Create Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.create({\n  name: \"Standard Shipping\",\n  profile_id: \"shp_123\",\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43974,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping option to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminCreateShippingOption"
												},
												"name": "AdminCreateShippingOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43975,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43976,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43977,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 84,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43978,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a shipping option. It sends a request to the\n[Get Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_getshippingoptionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a shipping option by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.retrieve(\"so_123\")\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.retrieve(\"so_123\", {\n  fields: \"id,*service_zone\"\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 84,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43979,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43980,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43981,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43982,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 118,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43983,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping option. It sends a request to the\n[Update Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.update(\"so_123\", {\n  name: \"Standard Shipping\",\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 118,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43984,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43985,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping option to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingOption"
												},
												"name": "AdminUpdateShippingOption",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43986,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping option."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43987,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionResponse"
												},
												"name": "AdminShippingOptionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43988,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 150,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43989,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a shipping option. It sends a request to the\n[Delete Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_deleteshippingoptionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.delete(\"so_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 150,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43990,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43991,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionDeleteResponse"
												},
												"name": "AdminShippingOptionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43992,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 207,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43993,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of shipping options. It sends a request to the\n[List Shipping Options](https://docs.medusajs.com/api/admin#shipping-options_getshippingoptions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of shipping options."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of shipping options:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.list()\n.then(({ shipping_options, count, limit, offset }) => {\n  console.log(shipping_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ shipping_options, count, limit, offset }) => {\n  console.log(shipping_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each shipping option:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.list({\n  fields: \"id,*service_zone\"\n})\n.then(({ shipping_options, count, limit, offset }) => {\n  console.log(shipping_options)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 207,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43994,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
													"qualifiedName": "AdminShippingOptionListParams"
												},
												"name": "AdminShippingOptionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43995,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminShippingOptionListResponse"
												},
												"name": "AdminShippingOptionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43996,
							"name": "updateRules",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
									"line": 239,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43997,
									"name": "updateRules",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the rules of a shipping option to create, update, or remove them. It sends a request to the\n[Manage Rules of a Shipping Option](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptionsidrulesbatch)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping option's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingOption.updateRules(\"so_123\", {\n  create: [{ attribute: \"enabled_in_store\", operator: \"eq\", value: \"true\" }],\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
											"line": 239,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43998,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping option to manage the rules for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43999,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping option rules to manage."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingOptionRules"
												},
												"name": "AdminUpdateShippingOptionRules",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44000,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
													"qualifiedName": "AdminUpdateShippingOptionRulesResponse"
												},
												"name": "AdminUpdateShippingOptionRulesResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43968
							]
						},
						{
							"title": "Properties",
							"children": [
								43971
							]
						},
						{
							"title": "Methods",
							"children": [
								43972,
								43977,
								43982,
								43988,
								43992,
								43996
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-option.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44030,
					"name": "ShippingProfile",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44034,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44031,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44032,
									"name": "ShippingProfile",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44033,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44030,
										"name": "ShippingProfile",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44035,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 35,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44036,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new shipping profile. It sends a request to the\n[Create Shipping Profile](https://docs.medusajs.com/api/admin#shipping-profiles_postshippingprofiles)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping profile's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.create({\n  name: \"Default Shipping Profile\",\n})\n.then(({ shipping_profile }) => {\n  console.log(shipping_profile)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 35,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44037,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping profile to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
													"qualifiedName": "AdminCreateShippingProfile"
												},
												"name": "AdminCreateShippingProfile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44038,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping profile."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44039,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44040,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 70,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44041,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a shipping profile. It sends a request to the\n[Update Shipping Profile](https://docs.medusajs.com/api/admin#shipping-profiles_postshippingprofilesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping profile's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.update(\"sp_123\", {\n  name: \"Updated Shipping Profile\",\n})\n.then(({ shipping_profile }) => {\n  console.log(shipping_profile)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 70,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44042,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping profile to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44043,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the shipping profile to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
													"qualifiedName": "AdminUpdateShippingProfile"
												},
												"name": "AdminUpdateShippingProfile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44044,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping profile."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44045,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44046,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 102,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44047,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a shipping profile. It sends a request to the\n[Delete Shipping Profile](https://docs.medusajs.com/api/admin#shipping-profiles_deleteshippingprofilesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.delete(\"sp_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 102,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44048,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping profile to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44049,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileDeleteResponse"
												},
												"name": "AdminShippingProfileDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44050,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 159,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44051,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of shipping profiles. It sends a request to the\n[List Shipping Profiles](https://docs.medusajs.com/api/admin#shipping-profiles_getshippingprofiles)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of shipping profiles."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of shipping profiles:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.list()\n.then(({ shipping_profiles, count, limit, offset }) => {\n  console.log(shipping_profiles)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ shipping_profiles, count, limit, offset }) => {\n  console.log(shipping_profiles)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each shipping profile:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.list({\n  fields: \"id,name\"\n})\n.then(({ shipping_profiles, count, limit, offset }) => {\n  console.log(shipping_profiles)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 159,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44052,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
													"qualifiedName": "AdminShippingProfileListParams"
												},
												"name": "AdminShippingProfileListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44053,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileListResponse"
												},
												"name": "AdminShippingProfileListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44054,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
									"line": 206,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44055,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a shipping profile. It sends a request to the\n[Get Shipping Profile](https://docs.medusajs.com/api/admin#shipping-profiles_getshippingprofilesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The shipping profile's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a shipping profile by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.retrieve(\"sp_123\")\n.then(({ shipping_profile }) => {\n  console.log(shipping_profile)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.shippingProfile.retrieve(\"sp_123\", {\n  fields: \"id,name\"\n})\n.then(({ shipping_profile }) => {\n  console.log(shipping_profile)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
											"line": 206,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44056,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the shipping profile to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44057,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the shipping profile."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44058,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
													"qualifiedName": "AdminShippingProfileResponse"
												},
												"name": "AdminShippingProfileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44031
							]
						},
						{
							"title": "Properties",
							"children": [
								44034
							]
						},
						{
							"title": "Methods",
							"children": [
								44035,
								44040,
								44046,
								44050,
								44054
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/shipping-profile.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 43817,
					"name": "StockLocation",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43821,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43818,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43819,
									"name": "StockLocation",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43820,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43817,
										"name": "StockLocation",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43822,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 36,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43823,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new stock location. It sends a request to the\n[Create Stock Location](https://docs.medusajs.com/api/admin#stock-locations_poststocklocations)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.create({\n  name: \"Main Warehouse\",\n  address_id: \"addr_123\",\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 36,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43824,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the stock location to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminCreateStockLocation"
												},
												"name": "AdminCreateStockLocation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43825,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43826,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43827,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 71,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43828,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a stock location. It sends a request to the\n[Update Stock Location](https://docs.medusajs.com/api/admin#stock-locations_poststocklocationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.update(\"sloc_123\", {\n  name: \"European Warehouse\",\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 71,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43829,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43830,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the stock location to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStockLocation"
												},
												"name": "AdminUpdateStockLocation",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43831,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43832,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43833,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 103,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43834,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a stock location. It sends a request to the\n[Delete Stock Location](https://docs.medusajs.com/api/admin#stock-locations_deletestocklocationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.delete(\"sloc_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 103,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43835,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43836,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationDeleteResponse"
												},
												"name": "AdminStockLocationDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43837,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 146,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43838,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a stock location. It sends a request to the\n[Get Stock Location](https://docs.medusajs.com/api/admin#stock-locations_getstocklocationsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a stock location by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.retrieve(\"sloc_123\")\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.retrieve(\"sloc_123\", {\n  fields: \"id,*sales_channels\"\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 146,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43839,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43840,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43841,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43842,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 204,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43843,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of stock locations. It sends a request to the\n[List Stock Locations](https://docs.medusajs.com/api/admin#stock-locations_getstocklocations)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.list()\n.then(({ stock_locations, count, limit, offset }) => {\n  console.log(stock_locations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ stock_locations, count, limit, offset }) => {\n  console.log(stock_locations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each stock location:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.list({\n  fields: \"id,*sales_channels\"\n})\n.then(({ stock_locations, count, limit, offset }) => {\n  console.log(stock_locations)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 204,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43844,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
													"qualifiedName": "AdminStockLocationListParams"
												},
												"name": "AdminStockLocationListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43845,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationListResponse"
												},
												"name": "AdminStockLocationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43846,
							"name": "updateSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 237,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43847,
									"name": "updateSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the sales channels of a stock location by adding or removing them. It sends a request to the\n[Manage Stock Location Sales Channels](https://docs.medusajs.com/api/admin#stock-locations_poststocklocationsidsaleschannels)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.updateSalesChannels(\"sloc_123\", {\n  add: [\"sc_123\"],\n  remove: [\"sc_456\"],\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 237,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43848,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to update the sales channels for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43849,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the sales channels to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStockLocationSalesChannels"
												},
												"name": "AdminUpdateStockLocationSalesChannels",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43850,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43851,
							"name": "createFulfillmentSet",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 271,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43852,
									"name": "createFulfillmentSet",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adds a new fulfillment set to a stock location. It sends a request to the\n[Add Fulfillment Set to Stock Location](https://docs.medusajs.com/api/admin#stock-locations_poststocklocationsidfulfillmentsets)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.createFulfillmentSet(\"sloc_123\", {\n  name: \"Shipping\",\n  type: \"shipping\",\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 271,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43853,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to add the fulfillment set to."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43854,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the fulfillment set to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
													"qualifiedName": "AdminCreateStockLocationFulfillmentSet"
												},
												"name": "AdminCreateStockLocationFulfillmentSet",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43855,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43856,
							"name": "updateFulfillmentProviders",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
									"line": 305,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43857,
									"name": "updateFulfillmentProviders",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method manages the fulfillment providers of a stock location by adding or removing them. It sends a request to the\n[Manage Fulfillment Providers of Stock Location](https://docs.medusajs.com/api/admin#stock-locations_poststocklocationsidfulfillmentproviders)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stock location's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.stockLocation.updateFulfillmentProviders(\"sloc_123\", {\n  add: [\"fp_manual_manual\"],\n  remove: [\"fp_shipstation_shipstation\"],\n})\n.then(({ stock_location }) => {\n  console.log(stock_location)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
											"line": 305,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43858,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location to manage the fulfillment providers for."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43859,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the fulfillment providers to manage."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "AdminBatchLink"
												},
												"name": "AdminBatchLink",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43860,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
													"qualifiedName": "AdminStockLocationResponse"
												},
												"name": "AdminStockLocationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43818
							]
						},
						{
							"title": "Properties",
							"children": [
								43821
							]
						},
						{
							"title": "Methods",
							"children": [
								43822,
								43827,
								43833,
								43837,
								43842,
								43846,
								43851,
								43856
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/stock-location.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44823,
					"name": "Store",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44827,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44824,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44825,
									"name": "Store",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44826,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44823,
										"name": "Store",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44828,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 50,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44829,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a store by its ID. It sends a request to the\n[Get Store](https://docs.medusajs.com/api/admin#stores_getstoresid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The store's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a store by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.retrieve(\"store_123\")\n.then(({ store }) => {\n  console.log(store)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.retrieve(\"store_123\", {\n  fields: \"id,*supported_currencies\"\n})\n.then(({ store }) => {\n  console.log(store)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 50,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44830,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the store to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44831,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/queries.ts",
													"qualifiedName": "AdminStoreParams"
												},
												"name": "AdminStoreParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44832,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreResponse"
												},
												"name": "AdminStoreResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44833,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 112,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44834,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of stores. It sends a request to the\n[List Stores](https://docs.medusajs.com/api/admin#stores_getstores)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stores."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of stores:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.list()\n.then(({ stores, count, limit, offset }) => {\n  console.log(stores)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ stores, count, limit, offset }) => {\n  console.log(stores)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each store:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.list({\n  fields: \"id,*supported_currencies\"\n})\n.then(({ stores, count, limit, offset }) => {\n  console.log(stores)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 112,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44835,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/queries.ts",
													"qualifiedName": "AdminStoreListParams"
												},
												"name": "AdminStoreListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44836,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreListResponse"
												},
												"name": "AdminStoreListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44837,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
									"line": 142,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44838,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a store. It sends a request to the\n[Update Store](https://docs.medusajs.com/api/admin#stores_poststoresid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The store's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.store.update(\"store_123\", {\n  name: \"My Store\",\n})\n.then(({ store }) => {\n  console.log(store)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
											"line": 142,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44839,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the store to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44840,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the store to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/payloads.ts",
													"qualifiedName": "AdminUpdateStore"
												},
												"name": "AdminUpdateStore",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44841,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the store."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44842,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/store/admin/responses.ts",
													"qualifiedName": "AdminStoreResponse"
												},
												"name": "AdminStoreResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44824
							]
						},
						{
							"title": "Properties",
							"children": [
								44827
							]
						},
						{
							"title": "Methods",
							"children": [
								44828,
								44833,
								44837
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/store.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 45158,
					"name": "TaxProvider",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45162,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-provider.ts",
									"line": 11,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45159,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-provider.ts",
									"line": 15,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45160,
									"name": "TaxProvider",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-provider.ts",
											"line": 15,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45161,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45158,
										"name": "TaxProvider",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45163,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-provider.ts",
									"line": 68,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45164,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of tax providers. It sends a request to the\n[List Tax Providers](https://docs.medusajs.com/api/admin#tax-providers_gettaxproviders)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "2.8.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of tax providers."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of tax providers:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxProvider.list()\n.then(({ tax_providers, count, limit, offset }) => {\n  console.log(tax_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxProvider.list({\n  limit: 10,\n  offset: 10,\n})\n.then(({ tax_providers, count, limit, offset }) => {\n  console.log(tax_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each products:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxProvider.list({\n  fields: \"id,*regions\"\n})\n.then(({ tax_providers, count, limit, offset }) => {\n  console.log(tax_providers)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-provider.ts",
											"line": 68,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45165,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-provider/admin/queries.ts",
													"qualifiedName": "AdminGetTaxProvidersParams"
												},
												"name": "AdminGetTaxProvidersParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45166,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-provider/admin/responses.ts",
													"qualifiedName": "AdminTaxProviderListResponse"
												},
												"name": "AdminTaxProviderListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45159
							]
						},
						{
							"title": "Properties",
							"children": [
								45162
							]
						},
						{
							"title": "Methods",
							"children": [
								45163
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-provider.ts",
							"line": 7,
							"character": 13
						}
					]
				},
				{
					"id": 44765,
					"name": "TaxRate",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44769,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 11,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44766,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 15,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44767,
									"name": "TaxRate",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 15,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44768,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44765,
										"name": "TaxRate",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44770,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 40,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44771,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a tax rate. It sends a request to the\n[Create Tax Rate](https://docs.medusajs.com/api/admin#tax-rates_posttaxrates)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax rate's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.create({\n  name: \"VAT\",\n  tax_region_id: \"txreg_123\",\n  code: \"VAT\",\n  rate: 2, // 2%\n})\n.then(({ tax_rate }) => {\n  console.log(tax_rate)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 40,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44772,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the tax rate to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
													"qualifiedName": "AdminCreateTaxRate"
												},
												"name": "AdminCreateTaxRate",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44773,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax rate."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44774,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44775,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 73,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44776,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a tax rate. It sends a request to the\n[Update Tax Rate](https://docs.medusajs.com/api/admin#tax-rates_posttaxratesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax rate's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.update(\"txrat_123\", {\n  name: \"VAT\",\n  code: \"VAT\",\n})\n.then(({ tax_rate }) => {\n  console.log(tax_rate)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 73,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44777,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax rate to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44778,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the tax rate to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
													"qualifiedName": "AdminUpdateTaxRate"
												},
												"name": "AdminUpdateTaxRate",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44779,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax rate."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44780,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44781,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 105,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44782,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a tax rate. It sends a request to the\n[Delete Tax Rate](https://docs.medusajs.com/api/admin#tax-rates_deletetaxratesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.delete(\"txrat_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 105,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44783,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax rate to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44784,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateDeleteResponse"
												},
												"name": "AdminTaxRateDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44785,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 148,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44786,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a tax rate. It sends a request to the\n[Get Tax Rate](https://docs.medusajs.com/api/admin#tax-rates_gettaxratesid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax rate's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a tax rate by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.retrieve(\"txrat_123\")\n.then(({ tax_rate }) => {\n  console.log(tax_rate)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.retrieve(\"txrat_123\", {\n  fields: \"id,*tax_region\"\n})\n.then(({ tax_rate }) => {\n  console.log(tax_rate)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 148,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44787,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax rate to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44788,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax rate."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44789,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateResponse"
												},
												"name": "AdminTaxRateResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44790,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
									"line": 210,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44791,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of tax rates. It sends a request to the\n[List Tax Rates](https://docs.medusajs.com/api/admin#tax-rates_gettaxrates)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of tax rates."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of tax rates:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.list()\n.then(({ tax_rates, count, limit, offset }) => {\n  console.log(tax_rates)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ tax_rates, count, limit, offset }) => {\n  console.log(tax_rates)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each tax rate:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRate.list({\n  fields: \"id,*tax_region\"\n})\n.then(({ tax_rates, count, limit, offset }) => {\n  console.log(tax_rates)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
											"line": 210,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44792,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
													"qualifiedName": "AdminTaxRateListParams"
												},
												"name": "AdminTaxRateListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44793,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
													"qualifiedName": "AdminTaxRateListResponse"
												},
												"name": "AdminTaxRateListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44766
							]
						},
						{
							"title": "Properties",
							"children": [
								44769
							]
						},
						{
							"title": "Methods",
							"children": [
								44770,
								44775,
								44781,
								44785,
								44790
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-rate.ts",
							"line": 7,
							"character": 13
						}
					]
				},
				{
					"id": 44794,
					"name": "TaxRegion",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44798,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 16,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44795,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 20,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44796,
									"name": "TaxRegion",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 20,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44797,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44794,
										"name": "TaxRegion",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44799,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44800,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a tax region. It sends a request to the\n[Create Tax Region](https://docs.medusajs.com/api/admin#tax-regions_posttaxregions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.create({\n  country_code: \"us\",\n  province_code: \"ca\",\n  default_tax_rate: {\n    code: \"VAT\",\n    name: \"VAT\",\n    rate: 20, // 20%\n    is_combinable: true,\n  },\n})\n.then(({ tax_region }) => {\n  console.log(tax_region)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44801,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the tax region to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
													"qualifiedName": "AdminCreateTaxRegion"
												},
												"name": "AdminCreateTaxRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44802,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44803,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionResponse"
												},
												"name": "AdminTaxRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44804,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 86,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44805,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a tax region. It sends a request to the\n[Update Tax Region](https://docs.medusajs.com/api/admin#tax-regions_posttaxregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@since",
												"content": [
													{
														"kind": "text",
														"text": "2.8.0"
													}
												]
											},
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.update(\"txreg_123\", {\n  province_code: \"ca\",\n})\n.then(({ tax_region }) => {\n  console.log(tax_region)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 86,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44806,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax region to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44807,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the tax region to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
													"qualifiedName": "AdminUpdateTaxRegion"
												},
												"name": "AdminUpdateTaxRegion",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44808,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44809,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionResponse"
												},
												"name": "AdminTaxRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44810,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 118,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44811,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a tax region. It sends a request to the\n[Delete Tax Region](https://docs.medusajs.com/api/admin#tax-regions_deletetaxregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.delete(\"txreg_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 118,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44812,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax region to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44813,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionDeleteResponse"
												},
												"name": "AdminTaxRegionDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44814,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 161,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44815,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a tax region. It sends a request to the\n[Get Tax Region](https://docs.medusajs.com/api/admin#tax-regions_gettaxregionsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The tax region's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a tax region by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.retrieve(\"txreg_123\")\n.then(({ tax_region }) => {\n  console.log(tax_region)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.retrieve(\"txreg_123\", {\n  fields: \"id,*tax_rates\"\n})\n.then(({ tax_region }) => {\n  console.log(tax_region)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 161,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44816,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the tax region to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44817,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44818,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionResponse"
												},
												"name": "AdminTaxRegionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44819,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
									"line": 223,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44820,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of tax regions. It sends a request to the\n[List Tax Regions](https://docs.medusajs.com/api/admin#tax-regions_gettaxregions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of tax regions."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of tax regions:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.list()\n.then(({ tax_regions, count, limit, offset }) => {\n  console.log(tax_regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ tax_regions, count, limit, offset }) => {\n  console.log(tax_regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each tax region:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.taxRegion.list({\n  fields: \"id,*tax_rates\"\n})\n.then(({ tax_regions, count, limit, offset }) => {\n  console.log(tax_regions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
											"line": 223,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44821,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
													"qualifiedName": "AdminTaxRegionListParams"
												},
												"name": "AdminTaxRegionListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44822,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
													"qualifiedName": "AdminTaxRegionListResponse"
												},
												"name": "AdminTaxRegionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44795
							]
						},
						{
							"title": "Properties",
							"children": [
								44798
							]
						},
						{
							"title": "Methods",
							"children": [
								44799,
								44804,
								44810,
								44814,
								44819
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/tax-region.ts",
							"line": 12,
							"character": 13
						}
					]
				},
				{
					"id": 43734,
					"name": "Upload",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43738,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 43735,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 43736,
									"name": "Upload",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 43737,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43734,
										"name": "Upload",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43739,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 49,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43740,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a new upload. It sends a request to the\n[Upload Files](https://docs.medusajs.com/api/admin#uploads_postuploads)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The upload files' details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.upload.create(\n  {\n    files: [\n       // file uploaded as a binary string\n      {\n        name: \"test.txt\",\n        content: \"test\", // Should be the binary string of the file\n      },\n      // file uploaded as a File object\n      new File([\"test\"], \"test.txt\", { type: \"text/plain\" })\n    ],\n  }\n)\n.then(({ files }) => {\n  console.log(files)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 49,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43741,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the files to upload."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
													"qualifiedName": "BaseUploadFile"
												},
												"name": "BaseUploadFile",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43742,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the uploaded files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43743,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
													"qualifiedName": "AdminFileListResponse"
												},
												"name": "AdminFileListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43744,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 104,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43745,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a file's details by its ID. It sends a request to the\n[Get File](https://docs.medusajs.com/api/admin#uploads_getuploadsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The file's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.upload.retrieve(\"test.txt\")\n.then(({ file }) => {\n  console.log(file)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 104,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43746,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43747,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43748,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
													"qualifiedName": "AdminFileResponse"
												},
												"name": "AdminFileResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43749,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 129,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43750,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a file by its ID from the configured File Module Provider. It sends a request to the\n[Delete File](https://docs.medusajs.com/api/admin#uploads_deleteuploadsid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.upload.delete(\"test.txt\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 129,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43751,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43752,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
													"qualifiedName": "AdminFileDeleteResponse"
												},
												"name": "AdminFileDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43753,
							"name": "presignedUrl",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
									"line": 155,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 43754,
									"name": "presignedUrl",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a presigned URL for a file upload. It sends a request to the\n"
											},
											{
												"kind": "code",
												"text": "`/admin/uploads/presigned-urls`"
											},
											{
												"kind": "text",
												"text": " API route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The presigned URL for the file upload."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.upload.presignedUrl({\n  name: \"test.txt\",\n  size: 1000,\n  type: \"text/plain\",\n}))\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
											"line": 155,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 43755,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file to upload."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/payloads.ts",
													"qualifiedName": "AdminUploadPreSignedUrlRequest"
												},
												"name": "AdminUploadPreSignedUrlRequest",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43756,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Query parameters to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43757,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
													"qualifiedName": "AdminUploadPreSignedUrlResponse"
												},
												"name": "AdminUploadPreSignedUrlResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43735
							]
						},
						{
							"title": "Properties",
							"children": [
								43738
							]
						},
						{
							"title": "Methods",
							"children": [
								43739,
								43744,
								43749,
								43753
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/upload.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 44872,
					"name": "User",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 44876,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 44873,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 44874,
									"name": "User",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 44875,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 44872,
										"name": "User",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 44877,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 37,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44878,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates a user. It sends a request to the\n[Update User](https://docs.medusajs.com/api/admin#users_postusersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.update(\"user_123\", {\n  first_name: \"John\",\n  last_name: \"Doe\",\n})\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 37,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44879,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the user to update."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44880,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the user to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/payloads.ts",
													"qualifiedName": "AdminUpdateUser"
												},
												"name": "AdminUpdateUser",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44881,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the tax region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44882,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44883,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 101,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44884,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of users. It sends a request to the\n[List Users](https://docs.medusajs.com/api/admin#users_getusers)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of users."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of users:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.list()\n.then(({ users, count, limit, offset }) => {\n  console.log(users)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ users, count, limit, offset }) => {\n  console.log(users)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each user:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.list({\n  fields: \"id,email\"\n})\n.then(({ users, count, limit, offset }) => {\n  console.log(users)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 101,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44885,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserListParams"
												},
												"name": "AdminUserListParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44886,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserListResponse"
												},
												"name": "AdminUserListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44887,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 144,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44888,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a user. It sends a request to the\n[Get User](https://docs.medusajs.com/api/admin#users_getusersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a user by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.retrieve(\"user_123\")\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.retrieve(\"user_123\", {\n  fields: \"id,email\"\n})\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 144,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44889,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the user to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44890,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44891,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44892,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 173,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44893,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a user. It sends a request to the\n[Delete User](https://docs.medusajs.com/api/admin#users_deleteusersid)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The deletion's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.delete(\"user_123\")\n.then(({ deleted }) => {\n  console.log(deleted)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 173,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44894,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the user to delete."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 44895,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserDeleteResponse"
												},
												"name": "AdminUserDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 44896,
							"name": "me",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
									"line": 215,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 44897,
									"name": "me",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the currently authenticated user. It sends a request to the\n[Get Logged-In User](https://docs.medusajs.com/api/admin#users_getusersme)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the currently authenticated user:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.me()\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.user.me({\n  fields: \"id,email\"\n})\n.then(({ user }) => {\n  console.log(user)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
											"line": 215,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 44898,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure the fields and relations to retrieve in the user."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/queries.ts",
													"qualifiedName": "AdminUserParams"
												},
												"name": "AdminUserParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 44899,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/responses.ts",
													"qualifiedName": "AdminUserResponse"
												},
												"name": "AdminUserResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								44873
							]
						},
						{
							"title": "Properties",
							"children": [
								44876
							]
						},
						{
							"title": "Methods",
							"children": [
								44877,
								44883,
								44887,
								44892,
								44896
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/user.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 45207,
					"name": "Views",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45208,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 7,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45209,
									"name": "Views",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 7,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45210,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45207,
										"name": "Views",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45211,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 7,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45212,
							"name": "columns",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 10,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45213,
									"name": "columns",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 10,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45214,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45215,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45216,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/columns.ts",
													"qualifiedName": "AdminViewsEntityColumnsResponse"
												},
												"name": "AdminViewsEntityColumnsResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45217,
							"name": "listConfigurations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 22,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45218,
									"name": "listConfigurations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 22,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45219,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45220,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/queries.ts",
													"qualifiedName": "AdminGetViewConfigurationsParams"
												},
												"name": "AdminGetViewConfigurationsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45221,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/responses.ts",
													"qualifiedName": "AdminViewConfigurationListResponse"
												},
												"name": "AdminViewConfigurationListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45222,
							"name": "createConfiguration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 34,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45223,
									"name": "createConfiguration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 34,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45224,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45225,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/payloads.ts",
													"qualifiedName": "AdminCreateViewConfiguration"
												},
												"name": "AdminCreateViewConfiguration",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45226,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/responses.ts",
													"qualifiedName": "AdminViewConfigurationResponse"
												},
												"name": "AdminViewConfigurationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45227,
							"name": "retrieveConfiguration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 46,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45228,
									"name": "retrieveConfiguration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 46,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45229,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45230,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45231,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
													"qualifiedName": "SelectParams"
												},
												"name": "SelectParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45232,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/responses.ts",
													"qualifiedName": "AdminViewConfigurationResponse"
												},
												"name": "AdminViewConfigurationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45233,
							"name": "updateConfiguration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 62,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45234,
									"name": "updateConfiguration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 62,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45235,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45236,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45237,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/payloads.ts",
													"qualifiedName": "AdminUpdateViewConfiguration"
												},
												"name": "AdminUpdateViewConfiguration",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45238,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/responses.ts",
													"qualifiedName": "AdminViewConfigurationResponse"
												},
												"name": "AdminViewConfigurationResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45239,
							"name": "deleteConfiguration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 78,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45240,
									"name": "deleteConfiguration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 78,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45241,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45242,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45243,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/responses.ts",
													"qualifiedName": "AdminViewConfigurationDeleteResponse"
												},
												"name": "AdminViewConfigurationDeleteResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45244,
							"name": "retrieveActiveConfiguration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 92,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45245,
									"name": "retrieveActiveConfiguration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 92,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45246,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45247,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/view-configuration/admin/responses.ts",
															"qualifiedName": "AdminViewConfigurationResponse"
														},
														"name": "AdminViewConfigurationResponse",
														"package": "@medusajs/types"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 45248,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 45249,
																	"name": "active_view_configuration_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
																			"line": 97,
																			"character": 6
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": null
																			},
																			{
																				"type": "intrinsic",
																				"name": "string"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		45249
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
																	"line": 96,
																	"character": 47
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45250,
							"name": "setActiveConfiguration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
									"line": 109,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45251,
									"name": "setActiveConfiguration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
											"line": 109,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45252,
											"name": "entity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45253,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 45254,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 45255,
															"name": "view_configuration_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
																	"line": 111,
																	"character": 12
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																45255
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
															"line": 111,
															"character": 10
														}
													]
												}
											}
										},
										{
											"id": 45256,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 45257,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 45258,
															"name": "success",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
																	"line": 113,
																	"character": 15
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																45258
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
															"line": 113,
															"character": 13
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45208
							]
						},
						{
							"title": "Properties",
							"children": [
								45211
							]
						},
						{
							"title": "Methods",
							"children": [
								45212,
								45217,
								45222,
								45227,
								45233,
								45239,
								45244,
								45250
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/views.ts",
							"line": 6,
							"character": 13
						}
					]
				},
				{
					"id": 45019,
					"name": "WorkflowExecution",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45023,
							"name": "client",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45259,
								"name": "Client",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45020,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 13,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45021,
									"name": "WorkflowExecution",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 13,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45022,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45019,
										"name": "WorkflowExecution",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45024,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 64,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45025,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a list of workflow executions. It sends a request to the\n[List Workflow Executions](https://docs.medusajs.com/api/admin#workflows-executions_getworkflowsexecutions)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of workflow executions."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve the list of workflow executions:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.workflowExecution.list()\n.then(({ workflow_executions, count, limit, offset }) => {\n  console.log(workflow_executions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo configure the pagination, pass the "
													},
													{
														"kind": "code",
														"text": "`limit`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`offset`"
													},
													{
														"kind": "text",
														"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.workflowExecution.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ workflow_executions, count, limit, offset }) => {\n  console.log(workflow_executions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nUsing the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " query parameter, you can specify the fields and relations to retrieve\nin each workflow execution:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.workflowExecution.list({\n  fields: \"id,name\"\n})\n.then(({ workflow_executions, count, limit, offset }) => {\n  console.log(workflow_executions)\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nLearn more about the "
													},
													{
														"kind": "code",
														"text": "`fields`"
													},
													{
														"kind": "text",
														"text": " property in the [API reference](https://docs.medusajs.com/api/admin#select-fields-and-relations)."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 64,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45026,
											"name": "queryParams",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Filters and pagination configurations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
													"qualifiedName": "AdminGetWorkflowExecutionsParams"
												},
												"name": "AdminGetWorkflowExecutionsParams",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 45027,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
													"qualifiedName": "AdminWorkflowExecutionListResponse"
												},
												"name": "AdminWorkflowExecutionListResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45028,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
									"line": 92,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45029,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a workflow execution by its ID. It sends a request to the\n[Get Workflow Execution](https://docs.medusajs.com/api/admin#workflows-executions_getworkflowsexecutionsworkflow_idtransaction_id)\nAPI route."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The workflow execution's details."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.admin.workflowExecution.retrieve(\"wrk_123\")\n.then(({ workflow_execution }) => {\n  console.log(workflow_execution)\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
											"line": 92,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45030,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the workflow execution to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45031,
											"name": "headers",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Headers to pass in the request."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
													"qualifiedName": "AdminWorkflowExecutionResponse"
												},
												"name": "AdminWorkflowExecutionResponse",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45020
							]
						},
						{
							"title": "Properties",
							"children": [
								45023
							]
						},
						{
							"title": "Methods",
							"children": [
								45024,
								45028
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/admin/workflow-execution.ts",
							"line": 5,
							"character": 13
						}
					]
				},
				{
					"id": 45259,
					"name": "Client",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 45263,
							"name": "fetch_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 108,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"target": 45334,
								"name": "ClientFetch",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45264,
							"name": "config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 109,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45319,
								"name": "Config",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45265,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 110,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"target": 45339,
								"name": "Logger",
								"package": "@medusajs/js-sdk"
							}
						},
						{
							"id": 45266,
							"name": "DEFAULT_JWT_STORAGE_KEY",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 112,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"medusa_auth_token\""
						},
						{
							"id": 45267,
							"name": "token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 113,
									"character": 10
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 45260,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 115,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45261,
									"name": "Client",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 115,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45262,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45319,
												"name": "Config",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45259,
										"name": "Client",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45268,
							"name": "fetch",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 144,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45269,
									"name": "fetch",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": " closely follows (and uses under the hood) the native "
											},
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": " API. There are, however, few key differences:\n- Non 2xx statuses throw a "
											},
											{
												"kind": "code",
												"text": "`FetchError`"
											},
											{
												"kind": "text",
												"text": " with the status code as the "
											},
											{
												"kind": "code",
												"text": "`status`"
											},
											{
												"kind": "text",
												"text": " property, rather than resolving the promise\n- You can pass "
											},
											{
												"kind": "code",
												"text": "`body`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`query`"
											},
											{
												"kind": "text",
												"text": " as objects, and they will be encoded and stringified.\n- The response gets parsed as JSON if the "
											},
											{
												"kind": "code",
												"text": "`accept`"
											},
											{
												"kind": "text",
												"text": " header is set to "
											},
											{
												"kind": "code",
												"text": "`application/json`"
											},
											{
												"kind": "text",
												"text": ", otherwise the raw Response object is returned\n\nSince the response is dynamically determined, we cannot know if it is JSON or not. Therefore, it is important to pass "
											},
											{
												"kind": "code",
												"text": "`Response`"
											},
											{
												"kind": "text",
												"text": " as the return type"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Promise<T>"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 144,
											"character": 2
										}
									],
									"typeParameters": [
										{
											"id": 45270,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 45271,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "URL"
														},
														"name": "URL",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Request"
														},
														"name": "Request",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 45272,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45357,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 45270,
												"name": "T",
												"package": "@medusajs/js-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45273,
							"name": "fetchStream",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 158,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45274,
									"name": "fetchStream",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`fetchStream`"
											},
											{
												"kind": "text",
												"text": " is a helper method to deal with server-sent events. It returns an object with a stream and an abort function.\nIt follows a very similar interface to "
											},
											{
												"kind": "code",
												"text": "`fetch`"
											},
											{
												"kind": "text",
												"text": ", with the return value being an async generator.\nThe stream is an async generator that yields "
											},
											{
												"kind": "code",
												"text": "`ServerSentEventMessage`"
											},
											{
												"kind": "text",
												"text": " objects, which contains the event name, stringified data, and few other properties.\nThe caller is responsible for handling "
											},
											{
												"kind": "code",
												"text": "`disconnect`"
											},
											{
												"kind": "text",
												"text": " events and aborting the stream. The caller is also responsible for parsing the data field."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "FetchStreamResponse"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 158,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45275,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "URL"
														},
														"name": "URL",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
															"qualifiedName": "Request"
														},
														"name": "Request",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 45276,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45357,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 45362,
												"name": "FetchStreamResponse",
												"package": "@medusajs/js-sdk"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45277,
							"name": "setToken",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 178,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45278,
									"name": "setToken",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 178,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 45279,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45280,
							"name": "getToken",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 182,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45281,
									"name": "getToken",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 182,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45282,
							"name": "clearToken",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 186,
									"character": 8
								}
							],
							"signatures": [
								{
									"id": 45283,
									"name": "clearToken",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 186,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45284,
							"name": "clearToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 190,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 45285,
									"name": "clearToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 190,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45286,
							"name": "initClient",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 212,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 45287,
									"name": "initClient",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 212,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"target": 45334,
										"name": "ClientFetch",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45288,
							"name": "getApiKeyHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 275,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 45289,
									"name": "getApiKeyHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 275,
											"character": 31
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 45290,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 45291,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 45292,
															"name": "Authorization",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 275,
																	"character": 37
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																45292
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
															"line": 275,
															"character": 35
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 45293,
							"name": "getPublishableKeyHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 281,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 45294,
									"name": "getPublishableKeyHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 281,
											"character": 39
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 45295,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 45296,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 45297,
															"name": "x-publishable-api-key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 282,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																45297
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
															"line": 282,
															"character": 6
														}
													]
												}
											}
										]
									}
								}
							]
						},
						{
							"id": 45298,
							"name": "getJwtHeader_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 289,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 45299,
									"name": "getJwtHeader_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 289,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 45300,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 45301,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 45302,
																	"name": "Authorization",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
																			"line": 289,
																			"character": 45
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		45302
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
																	"line": 289,
																	"character": 43
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45303,
							"name": "setToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 299,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 45304,
									"name": "setToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 299,
											"character": 18
										}
									],
									"parameters": [
										{
											"id": 45305,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45306,
							"name": "getToken_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 321,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 45307,
									"name": "getToken_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 321,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 45308,
							"name": "getTokenStorageInfo_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 341,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 45309,
									"name": "getTokenStorageInfo_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 341,
											"character": 35
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 45310,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 45311,
													"name": "storageMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
															"line": 363,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "session"
															},
															{
																"type": "literal",
																"value": "local"
															},
															{
																"type": "literal",
																"value": "memory"
															},
															{
																"type": "literal",
																"value": "custom"
															},
															{
																"type": "literal",
																"value": "nostore"
															}
														]
													}
												},
												{
													"id": 45312,
													"name": "storageKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
															"line": 364,
															"character": 6
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														45311,
														45312
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
													"line": 362,
													"character": 11
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 45313,
							"name": "throwError_",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
									"line": 368,
									"character": 12
								}
							],
							"signatures": [
								{
									"id": 45314,
									"name": "throwError_",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
											"line": 368,
											"character": 12
										}
									],
									"parameters": [
										{
											"id": 45315,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								45260
							]
						},
						{
							"title": "Properties",
							"children": [
								45263,
								45264,
								45265,
								45266,
								45267
							]
						},
						{
							"title": "Methods",
							"children": [
								45268,
								45273,
								45277,
								45280,
								45282,
								45284,
								45286,
								45288,
								45293,
								45298,
								45303,
								45306,
								45308,
								45313
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/client.ts",
							"line": 107,
							"character": 13
						}
					]
				},
				{
					"id": 45339,
					"name": "Logger",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 1,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 45340,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 45341,
									"name": "error",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 2,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 45342,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 2,
													"character": 9
												}
											],
											"signatures": [
												{
													"id": 45343,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 45344,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 45345,
									"name": "warn",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 3,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 45346,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 3,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 45347,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 45348,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 45349,
									"name": "info",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 4,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 45350,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 4,
													"character": 8
												}
											],
											"signatures": [
												{
													"id": 45351,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 45352,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 45353,
									"name": "debug",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 5,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 45354,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 5,
													"character": 9
												}
											],
											"signatures": [
												{
													"id": 45355,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 45356,
															"name": "messages",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										45341,
										45345,
										45349,
										45353
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 1,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 45319,
					"name": "Config",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 45320,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 45321,
									"name": "baseUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 9,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 45322,
									"name": "globalHeaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 10,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 45316,
										"name": "ClientHeaders",
										"package": "@medusajs/js-sdk"
									}
								},
								{
									"id": 45323,
									"name": "publishableKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 11,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 45324,
									"name": "apiKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 12,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 45325,
									"name": "auth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 13,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 45326,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 45327,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 14,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "jwt"
															},
															{
																"type": "literal",
																"value": "session"
															}
														]
													}
												},
												{
													"id": 45328,
													"name": "jwtTokenStorageKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 15,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 45329,
													"name": "jwtTokenStorageMethod",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 16,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "local"
															},
															{
																"type": "literal",
																"value": "session"
															},
															{
																"type": "literal",
																"value": "memory"
															},
															{
																"type": "literal",
																"value": "custom"
															},
															{
																"type": "literal",
																"value": "nostore"
															}
														]
													}
												},
												{
													"id": 45330,
													"name": "fetchCredentials",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 22,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "include"
															},
															{
																"type": "literal",
																"value": "omit"
															},
															{
																"type": "literal",
																"value": "same-origin"
															}
														]
													}
												},
												{
													"id": 45331,
													"name": "storage",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 23,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 45367,
														"name": "CustomStorage",
														"package": "@medusajs/js-sdk"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														45327,
														45328,
														45329,
														45330,
														45331
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 13,
													"character": 9
												}
											]
										}
									}
								},
								{
									"id": 45332,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 25,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 45339,
										"name": "Logger",
										"package": "@medusajs/js-sdk"
									}
								},
								{
									"id": 45333,
									"name": "debug",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 26,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										45321,
										45322,
										45323,
										45324,
										45325,
										45332,
										45333
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 8,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 45385,
					"name": "Awaitable",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 29,
							"character": 12
						}
					],
					"typeParameters": [
						{
							"id": 45386,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 45386,
								"name": "T",
								"package": "@medusajs/js-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 45386,
										"name": "T",
										"package": "@medusajs/js-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 45367,
					"name": "CustomStorage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 45368,
							"name": "getItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 32,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45369,
									"name": "getItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 32,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45370,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45385,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45371,
							"name": "setItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 33,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45372,
									"name": "setItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 33,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45373,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 45374,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45385,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 45375,
							"name": "removeItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 34,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 45376,
									"name": "removeItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 34,
											"character": 2
										}
									],
									"parameters": [
										{
											"id": 45377,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 45385,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Awaitable",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								45368,
								45371,
								45375
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 31,
							"character": 17
						}
					]
				},
				{
					"id": 45387,
					"name": "FetchParams",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Parameters"
						},
						"typeArguments": [
							{
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
										"qualifiedName": "fetch"
									},
									"name": "fetch",
									"package": "typescript",
									"preferValues": true
								}
							}
						],
						"name": "Parameters",
						"package": "typescript"
					}
				},
				{
					"id": 45316,
					"name": "ClientHeaders",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 39,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 45317,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 45318,
													"name": "tags",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Tags to cache data under for Next.js applications.\n\nLearn more in [Next.js's documentation](https://nextjs.org/docs/app/building-your-application/caching#fetch-optionsnexttags-and-revalidatetag)."
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
															"line": 49,
															"character": 6
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														45318
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 43,
													"character": 4
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 45378,
					"name": "FetchInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 53,
							"character": 12
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": 0
						},
						"objectType": {
							"type": "reference",
							"target": 45387,
							"name": "FetchParams",
							"package": "@medusajs/js-sdk"
						}
					}
				},
				{
					"id": 45357,
					"name": "FetchArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "RequestInit"
										},
										"name": "RequestInit",
										"package": "typescript"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "headers"
											},
											{
												"type": "literal",
												"value": "body"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 45358,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 45359,
											"name": "query",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 56,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 45360,
											"name": "headers",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 57,
													"character": 2
												}
											],
											"type": {
												"type": "reference",
												"target": 45316,
												"name": "ClientHeaders",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 45361,
											"name": "body",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 58,
													"character": 2
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "body"
														},
														"objectType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
																"qualifiedName": "RequestInit"
															},
															"name": "RequestInit",
															"package": "typescript"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												45359,
												45360,
												45361
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 55,
											"character": 64
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 45334,
					"name": "ClientFetch",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 61,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 45335,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 61,
									"character": 26
								}
							],
							"signatures": [
								{
									"id": 45336,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 45337,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45378,
												"name": "FetchInput",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 45338,
											"name": "init",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 45357,
												"name": "FetchArgs",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "Response"
												},
												"name": "Response",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 45379,
					"name": "ServerSentEventMessage",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 45380,
							"name": "comment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Ignored by the client."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 69,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 45381,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A string identifying the type of event described."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 45382,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data field for the message. Split by new lines."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 45383,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event ID to set the "
									},
									{
										"kind": "inline-tag",
										"tag": "@linkcode",
										"text": "EventSource",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "EventSource"
										}
									},
									{
										"kind": "text",
										"text": " object's last event ID value."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 45384,
							"name": "retry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reconnection time."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								45380,
								45381,
								45382,
								45383,
								45384
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 67,
							"character": 17
						}
					]
				},
				{
					"id": 45362,
					"name": "FetchStreamResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 45363,
							"name": "stream",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 81,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts",
											"qualifiedName": "AsyncGenerator"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 45379,
												"name": "ServerSentEventMessage",
												"package": "@medusajs/js-sdk"
											},
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "AsyncGenerator",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 45364,
							"name": "abort",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 45365,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
											"line": 82,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 45366,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
													"line": 82,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								45363,
								45364
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/js-sdk/src/types.ts",
							"line": 80,
							"character": 17
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						44982,
						45167,
						44524,
						44900,
						45061,
						43379,
						44230,
						44654,
						43954,
						43900,
						43933,
						43013,
						44059,
						43345,
						44120,
						44339,
						44134,
						44962,
						44914,
						45199,
						43507,
						43548,
						43472,
						43438,
						44843,
						43705,
						44944,
						43577,
						45095,
						44953,
						43758,
						45032,
						43787,
						44390,
						43861,
						44001,
						43967,
						44030,
						43817,
						44823,
						45158,
						44765,
						44794,
						43734,
						44872,
						45207,
						45019,
						45259
					]
				},
				{
					"title": "Interfaces",
					"children": [
						45367,
						45379,
						45362
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						45339,
						45319,
						45385,
						45387,
						45316,
						45378,
						45357,
						45334
					]
				}
			],
			"sources": [
				{
					"fileName": "admin/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/admin/index.ts#L1"
				}
			]
		},
		{
			"id": 43063,
			"name": "auth",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 43064,
					"name": "Auth",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43065,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 43066,
									"name": "Auth",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 43067,
											"name": "client",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45259,
												"name": "Client",
												"package": "@medusajs/js-sdk"
											}
										},
										{
											"id": 43068,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 45319,
												"name": "Config",
												"package": "@medusajs/js-sdk"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 43064,
										"name": "Auth",
										"package": "@medusajs/js-sdk"
									}
								}
							]
						},
						{
							"id": 43071,
							"name": "register",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L48"
								}
							],
							"signatures": [
								{
									"id": 43072,
									"name": "register",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a registration JWT token for a user, customer, or custom actor type. It sends a request to the\n[Retrieve Registration Token API route](https://docs.medusajs.com/api/store#auth_postactor_typeauth_provider_register).\n\nThen, it stores the returned token and passes it in the header of subsequent requests. So, you can call the\n[store.customer.create](https://docs.medusajs.com/resources/references/js-sdk/store/customer#create) method,\nfor example, after calling this method.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The JWT token used for registration later."
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait sdk.auth.register(\n  \"customer\",\n  \"emailpass\",\n  {\n    email: \"customer@gmail.com\",\n    password: \"supersecret\"\n  }\n)\n\n// all subsequent requests will use the token in the header\nconst { customer } = await sdk.store.customer.create({\n  email: \"customer@gmail.com\",\n  password: \"supersecret\"\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 48,
											"character": 13,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L48"
										}
									],
									"parameters": [
										{
											"id": 43073,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43074,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43075,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to pass in the request's body for authentication. When using the "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " provider,\nyou pass the email and password."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
															"qualifiedName": "AdminSignUpWithEmailPassword"
														},
														"name": "AdminSignUpWithEmailPassword",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43076,
							"name": "login",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 126,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L126"
								}
							],
							"signatures": [
								{
									"id": 43077,
									"name": "login",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the JWT authenticated token for an admin user, customer, or custom\nactor type. It sends a request to the [Authenticate API Route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_provider).\n\n### Third-Party Authentication\n\nIf the API route returns a "
											},
											{
												"kind": "code",
												"text": "`location`"
											},
											{
												"kind": "text",
												"text": " property, it means that the authentication requires additional steps,\ntypically in a third-party service. The "
											},
											{
												"kind": "code",
												"text": "`location`"
											},
											{
												"kind": "text",
												"text": " property is returned so that you\ncan redirect the user to the appropriate page.\n\n:::note\n\nFor an example of implementing third-party authentication, refer to the\n[Third-Party Login in Storefront](https://docs.medusajs.com/resources/storefront-development/customers/third-party-login) guide.\n\n:::\n\n### Session Authentication\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`auth.type`"
											},
											{
												"kind": "text",
												"text": " of the SDK is set to "
											},
											{
												"kind": "code",
												"text": "`session`"
											},
											{
												"kind": "text",
												"text": ", this method will also send a request to the\n[Set Authentication Session API route](https://docs.medusajs.com/api/admin#auth_postsession).\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide.\n\n### Automatic Authentication\n\nIf the authentication was successful, subsequent requests using the SDK will automatically have the necessary authentication headers / session\nset, based on your JS SDK authentication configurations.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The authentication JWT token"
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst result = await sdk.auth.login(\n  \"customer\",\n  \"emailpass\",\n  {\n    email: \"customer@gmail.com\",\n    password: \"supersecret\"\n  }\n)\n\nif (typeof result !== \"string\") {\n  alert(\"Authentication requires additional steps\")\n  // replace with the redirect logic of your application\n  window.location.href = result.location\n  return\n}\n\n// customer is now authenticated\n// all subsequent requests will use the token in the header\nconst { customer } = await sdk.store.customer.retrieve()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 126,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L126"
										}
									],
									"parameters": [
										{
											"id": 43078,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43079,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43080,
											"name": "payload",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to pass in the request's body for authentication. When using the "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": " provider,\nyou pass the email and password."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
															"qualifiedName": "AdminSignInWithEmailPassword"
														},
														"name": "AdminSignInWithEmailPassword",
														"package": "@medusajs/types"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 43081,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 43082,
																	"name": "location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "auth/index.ts",
																			"line": 143,
																			"character": 15,
																			"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L143"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		43082
																	]
																}
															],
															"sources": [
																{
																	"fileName": "auth/index.ts",
																	"line": 143,
																	"character": 13,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L143"
																}
															]
														}
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43083,
							"name": "callback",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L188"
								}
							],
							"signatures": [
								{
									"id": 43084,
									"name": "callback",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to validate an Oauth callback from a third-party service, such as Google, for an admin user, customer, or custom actor types.\nIt sends a request to the [Validate Authentication Callback](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providercallback).\n\nThe method stores the returned token and passes it in the header of subsequent requests. So, you can call the\n[store.customer.create](https://docs.medusajs.com/resources/references/js-sdk/store/customer#create) or "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "refresh",
												"target": 43088
											},
											{
												"kind": "text",
												"text": " methods,\nfor example, after calling this method.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The authentication JWT token"
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait sdk.auth.callback(\n  \"customer\",\n  \"google\",\n  {\n    code: \"123\",\n    state: \"456\"\n  }\n)\n\n// all subsequent requests will use the token in the header\nconst { customer } = await sdk.store.customer.create({\n  email: \"customer@gmail.com\",\n  password: \"supersecret\"\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 188,
											"character": 13,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L188"
										}
									],
									"parameters": [
										{
											"id": 43085,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43086,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`google`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43087,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The query parameters from the Oauth callback, which should be passed to the API route. This includes query parameters like\n"
													},
													{
														"kind": "code",
														"text": "`code`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`state`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43088,
							"name": "refresh",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 228,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L228"
								}
							],
							"signatures": [
								{
									"id": 43089,
									"name": "refresh",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method refreshes a JWT authentication token, which is useful after validating the Oauth callback\nwith "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "callback",
												"target": 43083
											},
											{
												"kind": "text",
												"text": ". It sends a request to the [Refresh Authentication Token API route](https://docs.medusajs.com/api/admin#auth_postadminauthtokenrefresh).\n\nThe method stores the returned token and passes it in the header of subsequent requests. So, you can call other\nmethods that require authentication after calling this method.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide.\n\nFor an example of implementing third-party authentication, refer to the\n[Third-Party Login in Storefront](https://docs.medusajs.com/resources/storefront-development/customers/third-party-login) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The refreshed JWT authentication token."
													}
												]
											},
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst token = await sdk.auth.refresh()\n\n// all subsequent requests will use the token in the header\nconst { customer } = await sdk.store.customer.retrieve()\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 228,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L228"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43090,
							"name": "logout",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 260,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L260"
								}
							],
							"signatures": [
								{
									"id": 43091,
									"name": "logout",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method logs out the currently authenticated user based on your JS SDK authentication configurations.\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`auth.type`"
											},
											{
												"kind": "text",
												"text": " of the SDK is set to "
											},
											{
												"kind": "code",
												"text": "`session`"
											},
											{
												"kind": "text",
												"text": ", this method will also send a request to the\n[Delete Authentication Session API route](https://docs.medusajs.com/api/admin#auth_deletesession).\n\nThe method also clears any stored tokens or sessions, based on your JS SDK authentication configurations.\n\nLearn more in the [JS SDK Authentication](https://docs.medusajs.com/resources/js-sdk/auth/overview) guide."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait sdk.auth.logout()\n\n// user is now logged out\n// you can't send any requests that require authentication\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 260,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L260"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43092,
							"name": "resetPassword",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 296,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L296"
								}
							],
							"signatures": [
								{
									"id": 43093,
									"name": "resetPassword",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method requests a reset password token for an admin user, customer, or custom actor type.\nIt sends a request to the [Generate Reset Password Token API route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providerresetpassword).\n\nTo reset the password later using the token delivered to the user, use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "updateProvider",
												"target": 43099
											},
											{
												"kind": "text",
												"text": " method.\n\nRelated guide: [How to allow customers to reset their passwords in a storefront](https://docs.medusajs.com/resources/storefront-development/customers/reset-password)."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.resetPassword(\n  \"customer\",\n  \"emailpass\",\n  {\n    identifier: \"customer@gmail.com\"\n  }\n)\n.then(() => {\n  // user receives token\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 296,
											"character": 18,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L296"
										}
									],
									"parameters": [
										{
											"id": 43094,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43095,
											"name": "provider",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43096,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data required to identify the user."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43097,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 43098,
															"name": "identifier",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The user's identifier. For example, when using the "
																	},
																	{
																		"kind": "code",
																		"text": "`emailpass`"
																	},
																	{
																		"kind": "text",
																		"text": " provider,\nthis would be the user's email."
																	}
																]
															},
															"sources": [
																{
																	"fileName": "auth/index.ts",
																	"line": 304,
																	"character": 6,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L304"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																43098
															]
														}
													],
													"sources": [
														{
															"fileName": "auth/index.ts",
															"line": 299,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L299"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 43099,
							"name": "updateProvider",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "auth/index.ts",
									"line": 344,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L344"
								}
							],
							"signatures": [
								{
									"id": 43100,
									"name": "updateProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to update user-related data authentication data.\n\nMore specifically, use this method when updating the password of an admin user, customer, or\ncustom actor type after requesting to reset their password with "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "resetPassword",
												"target": 43092
											},
											{
												"kind": "text",
												"text": ".\n\nThis method sends a request to [this API route](https://docs.medusajs.com/api/admin#auth_postactor_typeauth_providerupdate).\n\nRelated guide: [How to allow customers to reset their passwords in a storefront](https://docs.medusajs.com/resources/storefront-development/customers/reset-password)."
											}
										],
										"blockTags": [
											{
												"tag": "@tags",
												"content": [
													{
														"kind": "text",
														"text": "auth"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nsdk.auth.updateProvider(\n  \"customer\",\n  \"emailpass\",\n  {\n    password: \"supersecret\"\n  },\n  token\n)\n.then(() => {\n  // password updated\n})\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "auth/index.ts",
											"line": 344,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L344"
										}
									],
									"parameters": [
										{
											"id": 43101,
											"name": "actor",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The actor type. For example, "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": " for admin user, or "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": " for customer."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43102,
											"name": "provider",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The authentication provider to use. For example, "
													},
													{
														"kind": "code",
														"text": "`emailpass`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43103,
											"name": "body",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data necessary to update the user's authentication data. When resetting the user's password,\nsend the "
													},
													{
														"kind": "code",
														"text": "`password`"
													},
													{
														"kind": "text",
														"text": " property."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/auth/payloads.ts",
													"qualifiedName": "AdminUpdateProvider"
												},
												"name": "AdminUpdateProvider",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 43104,
											"name": "token",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								43065
							]
						},
						{
							"title": "Methods",
							"children": [
								43071,
								43076,
								43083,
								43088,
								43090,
								43092,
								43099
							]
						}
					],
					"sources": [
						{
							"fileName": "auth/index.ts",
							"line": 5,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L5"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						43064
					]
				}
			],
			"sources": [
				{
					"fileName": "auth/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/auth/index.ts#L1"
				}
			]
		},
		{
			"id": 43108,
			"name": "store",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 43109,
					"name": "Store",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 43114,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "region"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 21,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L21"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43115,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43116,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the paginated list of regions in the store. It sends a request to the\n[List Regions API route](https://docs.medusajs.com/api/store#regions_getregions).\n\nRelated guide: [How to list regions in a storefront](https://docs.medusajs.com/resources/storefront-development/regions/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of regions:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list()\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each region:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.list({\n  fields: \"id,*countries\"\n})\n.then(({ regions, count, limit, offset }) => {\n  console.log(regions)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L70"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43117,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 70,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L70"
														}
													],
													"signatures": [
														{
															"id": 43118,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of regions."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 70,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L70"
																}
															],
															"parameters": [
																{
																	"id": 43119,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/region/store/queries.ts",
																					"qualifiedName": "StoreRegionFilters"
																				},
																				"name": "StoreRegionFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 43120,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/region/store/responses.ts",
																			"qualifiedName": "StoreRegionListResponse"
																		},
																		"name": "StoreRegionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43121,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a region by its ID. It sends a request to the [Get Region](https://docs.medusajs.com/api/store#regions_getregionsid)\nAPI route.\n\nRelated guide: [Store and retrieve regions in a storefront](https://docs.medusajs.com/resources/storefront-development/regions/store-retrieve-region)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a region by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.retrieve(\"reg_123\")\n.then(({ region }) => {\n  console.log(region)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.region.retrieve(\n  \"reg_123\",\n  {\n    fields: \"id,*countries\"\n  }\n)\n.then(({ region }) => {\n  console.log(region)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 119,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L119"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43122,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 119,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L119"
														}
													],
													"signatures": [
														{
															"id": 43123,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The region."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 119,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L119"
																}
															],
															"parameters": [
																{
																	"id": 43124,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The region's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43125,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the region."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43126,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/region/store/responses.ts",
																			"qualifiedName": "StoreRegionResponse"
																		},
																		"name": "StoreRegionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43116,
												43121
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 21,
											"character": 18,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L21"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 43127,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 137,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L137"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43128,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43129,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of product collections. It sends a request to the\n[List Collections](https://docs.medusajs.com/api/store#collections_getcollections) API route.\n\nRelated guide: [How to retrieve collections in a storefront](https://docs.medusajs.com/resources/storefront-development/products/collections/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list()\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each collection:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.list({\n  fields: \"id,handle\"\n})\n.then(({ collections, count, limit, offset }) => {\n  console.log(collections)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 186,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L186"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43130,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 186,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L186"
														}
													],
													"signatures": [
														{
															"id": 43131,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of collections."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 186,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L186"
																}
															],
															"parameters": [
																{
																	"id": 43132,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/collection/store/queries.ts",
																					"qualifiedName": "StoreCollectionFilters"
																				},
																				"name": "StoreCollectionFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 43133,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/collection/store/responses.ts",
																			"qualifiedName": "StoreCollectionListResponse"
																		},
																		"name": "StoreCollectionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43134,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a collection by its ID. It sends a request to the [Get Collection](https://docs.medusajs.com/api/store#collections_getcollectionsid)\nAPI route.\n\nRelated guide: [How to retrieve a collection in a storefront](https://docs.medusajs.com/resources/storefront-development/products/collections/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a collection by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.retrieve(\"pcol_123\")\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.collection.retrieve(\"pcol_123\", {\n  fields: \"id,handle\"\n})\n.then(({ collection }) => {\n  console.log(collection)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 232,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L232"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43135,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 232,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L232"
														}
													],
													"signatures": [
														{
															"id": 43136,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The collection."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 232,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L232"
																}
															],
															"parameters": [
																{
																	"id": 43137,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the collection to retrieve."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43138,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the collection."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43139,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/collection/store/responses.ts",
																			"qualifiedName": "StoreCollectionResponse"
																		},
																		"name": "StoreCollectionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43129,
												43134
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 137,
											"character": 22,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L137"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 43140,
							"name": "category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 250,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L250"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43141,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43142,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of product categories. It sends a request to the\n[List Categories](https://docs.medusajs.com/api/store#product-categories_getproductcategories) API route.\n\nRelated guide: [How to retrieve list of categories in the storefront](https://docs.medusajs.com/resources/storefront-development/products/categories/list)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list()\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each category:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.list({\n  fields: \"id,*parent_category\"\n})\n.then(({ product_categories, count, offset, limit }) => {\n  console.log(product_categories)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 299,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L299"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43143,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 299,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L299"
														}
													],
													"signatures": [
														{
															"id": 43144,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of categories."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 299,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L299"
																}
															],
															"parameters": [
																{
																	"id": 43145,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/queries.ts",
																					"qualifiedName": "StoreProductCategoryListParams"
																				},
																				"name": "StoreProductCategoryListParams",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 43146,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/responses.ts",
																			"qualifiedName": "StoreProductCategoryListResponse"
																		},
																		"name": "StoreProductCategoryListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43147,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a category by its ID. It sends a request to the\n[Retrieve Product Category](https://docs.medusajs.com/api/store#product-categories_getproductcategoriesid).\n\nRelated guide: [How to retrieve a category in the storefront](https://docs.medusajs.com/resources/storefront-development/products/categories/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a category by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.retrieve(\"pcat_123\")\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.category.retrieve(\"pcat_123\", {\n  fields: \"id,*parent_category\"\n})\n.then(({ product_category }) => {\n  console.log(product_category)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 345,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L345"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43148,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 345,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L345"
														}
													],
													"signatures": [
														{
															"id": 43149,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The category."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 345,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L345"
																}
															],
															"parameters": [
																{
																	"id": 43150,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the category to retrieve."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43151,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the category."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/queries.ts",
																			"qualifiedName": "StoreProductCategoryParams"
																		},
																		"name": "StoreProductCategoryParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43152,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product-category/store/responses.ts",
																			"qualifiedName": "StoreProductCategoryResponse"
																		},
																		"name": "StoreProductCategoryResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43142,
												43147
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 250,
											"character": 20,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L250"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 43153,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "product"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 363,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L363"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43154,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43155,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a list of products. It sends a request to the\n[List Products API route](https://docs.medusajs.com/api/store#products_getproducts).\n\nRelated guides:\n\n- [How to list products in a storefront](https://docs.medusajs.com/resources/storefront-development/products/list).\n- [How to retrieve a product variant's prices in the storefront](https://docs.medusajs.com/resources/storefront-development/products/price)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of products:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list()\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each product:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.list({\n  fields: \"id,*collection\"\n})\n.then(({ products, count, offset, limit }) => {\n  console.log(products)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 415,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L415"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43156,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 415,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L415"
														}
													],
													"signatures": [
														{
															"id": 43157,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of products."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 415,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L415"
																}
															],
															"parameters": [
																{
																	"id": 43158,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Filters and pagination configurations."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/queries.ts",
																			"qualifiedName": "StoreProductListParams"
																		},
																		"name": "StoreProductListParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43159,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/responses.ts",
																			"qualifiedName": "StoreProductListResponse"
																		},
																		"name": "StoreProductListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43160,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method is used to retrieve a product by its ID. It sends a request to the\n[Get Product](https://docs.medusajs.com/api/store#products_getproductsid) API route.\n\nRelated guides:\n\n- [How to retrieve a product in the storefront](https://docs.medusajs.com/resources/storefront-development/products/retrieve).\n- [How to retrieve a product variant's prices in the storefront](https://docs.medusajs.com/resources/storefront-development/products/price)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a product by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.retrieve(\"prod_123\")\n.then(({ product }) => {\n  console.log(product)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.product.retrieve(\"prod_123\", {\n  fields: \"id,*collection\"\n})\n.then(({ product }) => {\n  console.log(product)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 464,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L464"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43161,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 464,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L464"
														}
													],
													"signatures": [
														{
															"id": 43162,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The product."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 464,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L464"
																}
															],
															"parameters": [
																{
																	"id": 43163,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The product's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43164,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the product."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/queries.ts",
																			"qualifiedName": "StoreProductParams"
																		},
																		"name": "StoreProductParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43165,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request"
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/product/store/responses.ts",
																			"qualifiedName": "StoreProductResponse"
																		},
																		"name": "StoreProductResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43155,
												43160
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 363,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L363"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 43166,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Related guides: [How to implement carts in the storefront](https://docs.medusajs.com/resources/storefront-development/cart)."
									}
								],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "cart"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 484,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L484"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43167,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43168,
											"name": "create",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates a cart. It sends a request to the [Create Cart](https://docs.medusajs.com/api/store#carts_postcarts)\nAPI route.\n\nRelated guide: [How to create a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/create)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.create({\n  region_id: \"reg_123\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 504,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L504"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43169,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 504,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L504"
														}
													],
													"signatures": [
														{
															"id": 43170,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The created cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 504,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L504"
																}
															],
															"parameters": [
																{
																	"id": 43171,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details of the cart to create."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreCreateCart"
																		},
																		"name": "StoreCreateCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43172,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43173,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43174,
											"name": "update",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates a cart. It sends a request to the\n[Update Cart](https://docs.medusajs.com/api/store#carts_postcartsid) API route.\n\nRelated guide: [How to update a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/update)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.update(\"cart_123\", {\n  region_id: \"reg_123\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 536,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L536"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43175,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 536,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L536"
														}
													],
													"signatures": [
														{
															"id": 43176,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The updated cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 536,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L536"
																}
															],
															"parameters": [
																{
																	"id": 43177,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43178,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The data to update in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCart"
																		},
																		"name": "StoreUpdateCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43179,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43180,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43181,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a cart by its ID. It sends a request to the\n[Get Cart](https://docs.medusajs.com/api/store#carts_getcartsid) API route.\n\nRelated guide: [How to retrieve a cart in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/retrieve)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve a cart by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.retrieve(\"cart_123\")\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.retrieve(\"cart_123\", {\n  fields: \"id,*items\"\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 586,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L586"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43182,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 586,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L586"
														}
													],
													"signatures": [
														{
															"id": 43183,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 586,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L586"
																}
															],
															"parameters": [
																{
																	"id": 43184,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43185,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43186,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43187,
											"name": "createLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This methods adds a product variant to the cart as a line item. It sends a request to the\n[Add Line Item](https://docs.medusajs.com/api/store#carts_postcartsidlineitems) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.createLineItem(\"cart_123\", {\n  variant_id: \"variant_123\",\n  quantity: 1\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 620,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L620"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43188,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 620,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L620"
														}
													],
													"signatures": [
														{
															"id": 43189,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 620,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L620"
																}
															],
															"parameters": [
																{
																	"id": 43190,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43191,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details of the item to add."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreAddCartLineItem"
																		},
																		"name": "StoreAddCartLineItem",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43192,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43193,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43194,
											"name": "updateLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates a line item in a cart. It sends a request to the\n[Update Line Item](https://docs.medusajs.com/api/store#carts_postcartsidlineitemsline_id) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.updateLineItem(\n  \"cart_123\",\n  \"li_123\",\n  {\n    quantity: 1\n  }\n)\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 661,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L661"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43195,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 661,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L661"
														}
													],
													"signatures": [
														{
															"id": 43196,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 661,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L661"
																}
															],
															"parameters": [
																{
																	"id": 43197,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43198,
																	"name": "lineItemId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The line item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43199,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The data to update."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCartLineItem"
																		},
																		"name": "StoreUpdateCartLineItem",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43200,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43201,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43202,
											"name": "deleteLineItem",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method deletes a line item from a cart. It sends a request to the\n[Remove Line Item](https://docs.medusajs.com/api/store#carts_deletecartsidlineitemsline_id) API route.\n\nRelated guide: [How to manage a cart's line items in the storefront](https://docs.medusajs.com/resources/storefront-development/cart/manage-items)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.deleteLineItem(\n  \"cart_123\",\n  \"li_123\"\n)\n.then(({ deleted, parent: cart }) => {\n  console.log(deleted, cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 698,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L698"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43203,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 698,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L698"
														}
													],
													"signatures": [
														{
															"id": 43204,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The deletion's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 698,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L698"
																}
															],
															"parameters": [
																{
																	"id": 43205,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43206,
																	"name": "lineItemId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43207,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreLineItemDeleteResponse"
																		},
																		"name": "StoreLineItemDeleteResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43208,
											"name": "addShippingMethod",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method adds a shipping method to a cart. It sends a request to\nthe [Add Shipping Method](https://docs.medusajs.com/api/store#carts_postcartsidshippingmethods) API routes.\n\nRelated guide: [Implement shipping step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/shipping)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.addShippingMethod(\"cart_123\", {\n  option_id: \"so_123\",\n  data: {\n    // custom data for fulfillment provider.\n  }\n})\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 734,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L734"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43209,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 734,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L734"
														}
													],
													"signatures": [
														{
															"id": 43210,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 734,
																	"character": 23,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L734"
																}
															],
															"parameters": [
																{
																	"id": 43211,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43212,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The shipping method's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/payloads.ts",
																			"qualifiedName": "StoreAddCartShippingMethods"
																		},
																		"name": "StoreAddCartShippingMethods",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43213,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43214,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43215,
											"name": "complete",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method completes a cart and places the order. It's the last step of the checkout flow.\nThe method sends a request to the [Complete Cart](https://docs.medusajs.com/api/store#carts_postcartsidcomplete)\nAPI route.\n\nRelated guide: [Learn how to complete cart in checkout flow](https://docs.medusajs.com/resources/storefront-development/checkout/complete-cart)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.complete(\"cart_123\")\n.then((data) => {\n  if(data.type === \"cart\") {\n    // an error occurred\n    console.log(data.error, data.cart)\n  } else {\n    // order placed successfully\n    console.log(data.order)\n  }\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 774,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L774"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43216,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 774,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L774"
														}
													],
													"signatures": [
														{
															"id": 43217,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order's details, if it was placed successfully. Otherwise, the cart is returned with an error."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 774,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L774"
																}
															],
															"parameters": [
																{
																	"id": 43218,
																	"name": "cartId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43219,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the created order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43220,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCompleteCartResponse"
																		},
																		"name": "StoreCompleteCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43221,
											"name": "transferCart",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the customer of a cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.cart.transferCart(\"cart_123\")\n.then(({ cart }) => {\n  console.log(cart)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 803,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L803"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43222,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 803,
															"character": 18,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L803"
														}
													],
													"signatures": [
														{
															"id": 43223,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The updated cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 803,
																	"character": 18,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L803"
																}
															],
															"parameters": [
																{
																	"id": 43224,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43225,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the cart."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43226,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/responses.ts",
																			"qualifiedName": "StoreCartResponse"
																		},
																		"name": "StoreCartResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43168,
												43174,
												43181,
												43187,
												43194,
												43202,
												43208,
												43215,
												43221
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 484,
											"character": 16,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L484"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 43227,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "fulfillment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 822,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L822"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43228,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43229,
											"name": "listCartOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the list of shipping options for a cart. It sends a request to\nthe [List Shipping Options](https://docs.medusajs.com/api/store#shipping-options_getshippingoptions)\nAPI route.\n\nRelated guide: [Implement shipping step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/shipping)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.fulfillment.listCartOptions({\n  cart_id: \"cart_123\"\n})\n.then(({ shipping_options }) => {\n  console.log(shipping_options)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 842,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L842"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43230,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 842,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L842"
														}
													],
													"signatures": [
														{
															"id": 43231,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The shipping options that can be used for the cart."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 842,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L842"
																}
															],
															"parameters": [
																{
																	"id": 43232,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's details along with configurations of the fields to retrieve in the options."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/queries.ts",
																			"qualifiedName": "StoreGetShippingOptionList"
																		},
																		"name": "StoreGetShippingOptionList",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43233,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/responses.ts",
																			"qualifiedName": "StoreShippingOptionListResponse"
																		},
																		"name": "StoreShippingOptionListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43234,
											"name": "calculate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method calculates the price of a shipping option in a cart, which is useful during checkout.\nIt sends a request to the [Calculate Shipping Option Price](https://docs.medusajs.com/api/store#shipping-options_postshippingoptionsidcalculate)\nAPI route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.fulfillment.calculate(\"so_123\", {\n  cart_id: \"cart_123\"\n})\n.then(({ shipping_option }) => {\n  console.log(shipping_option)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 874,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L874"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43235,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 874,
															"character": 15,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L874"
														}
													],
													"signatures": [
														{
															"id": 43236,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The shipping option's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 874,
																	"character": 15,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L874"
																}
															],
															"parameters": [
																{
																	"id": 43237,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The shipping option's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43238,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The price calculation's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/payloads.ts",
																			"qualifiedName": "StoreCalculateShippingOptionPrice"
																		},
																		"name": "StoreCalculateShippingOptionPrice",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43239,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the shipping option."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43240,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/store/responses.ts",
																			"qualifiedName": "StoreShippingOptionResponse"
																		},
																		"name": "StoreShippingOptionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43229,
												43234
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 822,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L822"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 43241,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "payment"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 895,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L895"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43242,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43243,
											"name": "listPaymentProviders",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the payment providers available in a region, which is useful during checkout.\nIt sends a request to the [List Payment Providers](https://docs.medusajs.com/api/store#payment-providers_getpaymentproviders)\nAPI route.\n\nRelated guide: [Implement payment step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/payment)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of payment providers for a region:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\"\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\",\n  limit: 10,\n  offset: 10\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each provider:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.listPaymentProviders({\n  region_id: \"reg_123\",\n  limit: 10,\n  offset: 10,\n  fields: \"id\"\n})\n.then(({ payment_providers, count, offset, limit }) => {\n  console.log(payment_providers)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 952,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L952"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43244,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 952,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L952"
														}
													],
													"signatures": [
														{
															"id": 43245,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The list of payment providers."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 952,
																	"character": 26,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L952"
																}
															],
															"parameters": [
																{
																	"id": 43246,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The filters to apply on the retrieved providers, along with configurations of the\nfields to retrieve in the options."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/payment/store/queries.ts",
																					"qualifiedName": "StorePaymentProviderFilters"
																				},
																				"name": "StorePaymentProviderFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 43247,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/responses.ts",
																			"qualifiedName": "StorePaymentProviderListResponse"
																		},
																		"name": "StorePaymentProviderListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43248,
											"name": "initiatePaymentSession",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates a payment session of a cart's payment collection, selecting a payment provider.\nIt sends a request to the [Initialize Payment Session](https://docs.medusajs.com/api/store#payment-collections_postpaymentcollectionsidpaymentsessions)\nAPI route.\n\nIf the cart doesn't have a payment collection, a payment collection is created for the cart by\nsending a request to the [Create Payment Collection](https://docs.medusajs.com/api/store#payment-collections_postpaymentcollections)\nAPI route.\n\nRelated guide: [Implement payment step during checkout](https://docs.medusajs.com/resources/storefront-development/checkout/payment)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.payment.initiatePaymentSession(\n  cart, // assuming you already have the cart object.\n  {\n    provider_id: \"pp_stripe_stripe\",\n    data: {\n      // any data relevant for the provider.\n    }\n  }\n)\n.then(({ payment_collection }) => {\n  console.log(payment_collection)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 996,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L996"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43249,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 996,
															"character": 28,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L996"
														}
													],
													"signatures": [
														{
															"id": 43250,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The payment collection's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 996,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L996"
																}
															],
															"parameters": [
																{
																	"id": 43251,
																	"name": "cart",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The cart's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/cart/store/entities.ts",
																			"qualifiedName": "StoreCart"
																		},
																		"name": "StoreCart",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43252,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payment session's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/payloads.ts",
																			"qualifiedName": "StoreInitializePaymentSession"
																		},
																		"name": "StoreInitializePaymentSession",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43253,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the payment collection."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43254,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/payment/store/responses.ts",
																			"qualifiedName": "StorePaymentCollectionResponse"
																		},
																		"name": "StorePaymentCollectionResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43243,
												43248
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 895,
											"character": 19,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L895"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 43255,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "order"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 1034,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1034"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43256,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43257,
											"name": "list",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves a paginated list of orders matching the specified filters. It\nsends a request to the [List Orders](https://docs.medusajs.com/api/store#orders_getorders)\nAPI route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list()\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list({\n  limit: 10,\n  offset: 10\n})\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each order:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.list({\n  fields: \"id,*items\"\n})\n.then(({ orders, count, offset, limit }) => {\n  console.log(orders)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1082,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1082"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43258,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1082,
															"character": 10,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1082"
														}
													],
													"signatures": [
														{
															"id": 43259,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of orders."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1082,
																	"character": 10,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1082"
																}
															],
															"parameters": [
																{
																	"id": 43260,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the orders."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/queries.ts",
																			"qualifiedName": "StoreOrderFilters"
																		},
																		"name": "StoreOrderFilters",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43261,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderListResponse"
																		},
																		"name": "StoreOrderListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43262,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves an order by its ID. It sends a request to the\n[Get Order](https://docs.medusajs.com/api/store#orders_getordersid) API route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.retrieve(\"order_123\")\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.retrieve(\"order_123\", {\n  fields: \"id,*items\"\n})\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1126,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1126"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43263,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1126,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1126"
														}
													],
													"signatures": [
														{
															"id": 43264,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1126,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1126"
																}
															],
															"parameters": [
																{
																	"id": 43265,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43266,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43267,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 43268,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 43269,
																					"name": "order",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "store/index.ts",
																							"line": 1131,
																							"character": 33,
																							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1131"
																						}
																					],
																					"type": {
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../../packages/core/types/src/http/order/store/entities.ts",
																							"qualifiedName": "StoreOrder"
																						},
																						"name": "StoreOrder",
																						"package": "@medusajs/types"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						43269
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "store/index.ts",
																					"line": 1131,
																					"character": 31,
																					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1131"
																				}
																			]
																		}
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43270,
											"name": "requestTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method requests a order transfer from a guest account to the current, logged in customer account.\n\nCustomer requesting the transfer must be logged in."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.requestTransfer(\n  \"order_123\",\n  {\n    description: \"I want to transfer this order to my friend.\"\n  },\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1165,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1165"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43271,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1165,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1165"
														}
													],
													"signatures": [
														{
															"id": 43272,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1165,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1165"
																}
															],
															"parameters": [
																{
																	"id": 43273,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43274,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The transfer's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreRequestOrderTransfer"
																		},
																		"name": "StoreRequestOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43275,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43276,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43277,
											"name": "cancelTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method cancels an order transfer request.\n\nCustomer requesting the transfer must be logged in."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.cancelTransfer(\n  \"order_123\",\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1203,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1203"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43278,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1203,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1203"
														}
													],
													"signatures": [
														{
															"id": 43279,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1203,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1203"
																}
															],
															"parameters": [
																{
																	"id": 43280,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43281,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43282,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43283,
											"name": "acceptTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The method called for the original owner to accept the order transfer to a new owner."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.acceptTransfer(\n  \"order_123\",\n  {\n    token: \"transfer_token\"\n  },\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1240,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1240"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43284,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1240,
															"character": 20,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1240"
														}
													],
													"signatures": [
														{
															"id": 43285,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1240,
																	"character": 20,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1240"
																}
															],
															"parameters": [
																{
																	"id": 43286,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43287,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payload containing the transfer token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreAcceptOrderTransfer"
																		},
																		"name": "StoreAcceptOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43288,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43289,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43290,
											"name": "declineTransfer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The method called for the original owner to decline the order transfer to a new owner."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.order.declineTransfer(\n  \"order_123\",\n  {\n    token: \"transfer_token\"\n  },\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ order }) => {\n  console.log(order)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1279,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1279"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43291,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1279,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1279"
														}
													],
													"signatures": [
														{
															"id": 43292,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The order details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1279,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1279"
																}
															],
															"parameters": [
																{
																	"id": 43293,
																	"name": "id",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The order's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43294,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The payload containing the transfer token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/payloads.ts",
																			"qualifiedName": "StoreDeclineOrderTransfer"
																		},
																		"name": "StoreDeclineOrderTransfer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43295,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the order."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43296,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/order/store/responses.ts",
																			"qualifiedName": "StoreOrderResponse"
																		},
																		"name": "StoreOrderResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43257,
												43262,
												43270,
												43277,
												43283,
												43290
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 1034,
											"character": 17,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1034"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 43297,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@tags",
										"content": [
											{
												"kind": "text",
												"text": "customer"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "store/index.ts",
									"line": 1300,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1300"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43298,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43299,
											"name": "create",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method registers a customer. It sends a request to the [Register Customer](https://docs.medusajs.com/api/store#customers_postcustomers)\nAPI route.\n\nYou must use the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.register"
													},
													{
														"kind": "text",
														"text": " method first to retrieve a registration token. Then, pass that\nregistration token in the "
													},
													{
														"kind": "code",
														"text": "`headers`"
													},
													{
														"kind": "text",
														"text": " parameter of this method as an authorization bearer header.\n\nRelated guide: [How to register customer in storefront](https://docs.medusajs.com/resources/storefront-development/customers/register)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nconst token = await sdk.auth.register(\"customer\", \"emailpass\", {\n  \"email\": \"customer@gmail.com\",\n  \"password\": \"supersecret\"\n})\n\nsdk.store.customer.create(\n  {\n    \"email\": \"customer@gmail.com\"\n  },\n  {},\n  {\n    Authorization: `Bearer ${token}`\n  }\n)\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1334,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1334"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43300,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1334,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1334"
														}
													],
													"signatures": [
														{
															"id": 43301,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1334,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1334"
																}
															],
															"parameters": [
																{
																	"id": 43302,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreCreateCustomer"
																		},
																		"name": "StoreCreateCustomer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43303,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43304,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request. This is where you include the authorization JWT registration token."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43305,
											"name": "update",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the logged-in customer's details. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the\n[Update Customer](https://docs.medusajs.com/api/store#customers_postcustomersme) API route.\n\nRelated guide: [How to edit customer's profile in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/profile)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.update({\n  first_name: \"John\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1371,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1371"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43306,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1371,
															"character": 12,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1371"
														}
													],
													"signatures": [
														{
															"id": 43307,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1371,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1371"
																}
															],
															"parameters": [
																{
																	"id": 43308,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The customer's details to update."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCustomer"
																		},
																		"name": "StoreUpdateCustomer",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43309,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43310,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43311,
											"name": "retrieve",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the logged-in customer's details. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Get Logged-In Customer](https://docs.medusajs.com/api/store#customers_getcustomersme)\nAPI route."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieve()\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1403,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1403"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43312,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1403,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1403"
														}
													],
													"signatures": [
														{
															"id": 43313,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1403,
																	"character": 14,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1403"
																}
															],
															"parameters": [
																{
																	"id": 43314,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43315,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43316,
											"name": "createAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method creates an address for the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Create Address](https://docs.medusajs.com/api/store#customers_postcustomersmeaddresses)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.createAddress({\n  country_code: \"us\"\n})\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1434,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1434"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43317,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1434,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1434"
														}
													],
													"signatures": [
														{
															"id": 43318,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1434,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1434"
																}
															],
															"parameters": [
																{
																	"id": 43319,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's details."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreCreateCustomerAddress"
																		},
																		"name": "StoreCreateCustomerAddress",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43320,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43321,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43322,
											"name": "updateAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method updates the address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Update Address](https://docs.medusajs.com/api/store#customers_postcustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.updateAddress(\n  \"caddr_123\",\n  {\n    country_code: \"us\"\n  }\n)\n.then(({ customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1475,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1475"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43323,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1475,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1475"
														}
													],
													"signatures": [
														{
															"id": 43324,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The customer's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1475,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1475"
																}
															],
															"parameters": [
																{
																	"id": 43325,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The ID of the address to update."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43326,
																	"name": "body",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The details to update in the address."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/payloads.ts",
																			"qualifiedName": "StoreUpdateCustomerAddress"
																		},
																		"name": "StoreUpdateCustomerAddress",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43327,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the customer."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43328,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerResponse"
																		},
																		"name": "StoreCustomerResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43329,
											"name": "listAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves the logged-in customer's address. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [List Customer's Address](https://docs.medusajs.com/api/store#customers_getcustomersmeaddresses)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve the list of addresses:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress()\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo configure the pagination, pass the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " query parameters.\n\nFor example, to retrieve only 10 items and skip 10 items:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress({\n  limit: 10,\n  offset: 10\n})\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nUsing the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " query parameter, you can specify the fields and relations to retrieve\nin each address:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.listAddress({\n  fields: \"id,country_code\"\n})\n.then(({ addresses, count, offset, limit }) => {\n  console.log(addresses)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1542,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1542"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43330,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1542,
															"character": 17,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1542"
														}
													],
													"signatures": [
														{
															"id": 43331,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The paginated list of addresses."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1542,
																	"character": 17,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1542"
																}
															],
															"parameters": [
																{
																	"id": 43332,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the addresses."
																			}
																		]
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																					"qualifiedName": "FindParams"
																				},
																				"name": "FindParams",
																				"package": "@medusajs/types"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/http/customer/store/queries.ts",
																					"qualifiedName": "StoreCustomerAddressFilters"
																				},
																				"name": "StoreCustomerAddressFilters",
																				"package": "@medusajs/types"
																			}
																		]
																	}
																},
																{
																	"id": 43333,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressListResponse"
																		},
																		"name": "StoreCustomerAddressListResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43334,
											"name": "retrieveAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method retrieves an address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Get Address](https://docs.medusajs.com/api/store#customers_getcustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To retrieve an address by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieveAddress(\n  \"caddr_123\"\n)\n.then(({ address }) => {\n  console.log(address)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify the fields and relations to retrieve:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.retrieveAddress(\n  \"caddr_123\",\n  {\n    fields: \"id,country_code\"\n  }\n)\n.then(({ address }) => {\n  console.log(address)\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nLearn more about the "
															},
															{
																"kind": "code",
																"text": "`fields`"
															},
															{
																"kind": "text",
																"text": " property in the [API reference](https://docs.medusajs.com/api/store#select-fields-and-relations)."
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1596,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1596"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43335,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1596,
															"character": 21,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1596"
														}
													],
													"signatures": [
														{
															"id": 43336,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The address's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1596,
																	"character": 21,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1596"
																}
															],
															"parameters": [
																{
																	"id": 43337,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43338,
																	"name": "query",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure the fields to retrieve in the address."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
																			"qualifiedName": "SelectParams"
																		},
																		"name": "SelectParams",
																		"package": "@medusajs/types"
																	}
																},
																{
																	"id": 43339,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressResponse"
																		},
																		"name": "StoreCustomerAddressResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 43340,
											"name": "deleteAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This method deletes an address of the logged-in customer. The customer must be logged in\nfirst with the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "Auth.login"
													},
													{
														"kind": "text",
														"text": " method.\n\nIt sends a request to the [Remove Address](https://docs.medusajs.com/api/store#customers_deletecustomersmeaddressesaddress_id)\nAPI route.\n\nRelated guides: [How to manage customer's addresses in the storefront](https://docs.medusajs.com/resources/storefront-development/customers/addresses)"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nsdk.store.customer.deleteAddress(\"caddr_123\")\n.then(({ deleted, parent: customer }) => {\n  console.log(customer)\n})\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "store/index.ts",
													"line": 1628,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1628"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 43341,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "store/index.ts",
															"line": 1628,
															"character": 19,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1628"
														}
													],
													"signatures": [
														{
															"id": 43342,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@returns",
																		"content": [
																			{
																				"kind": "text",
																				"text": "The deletion's details."
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "store/index.ts",
																	"line": 1628,
																	"character": 19,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1628"
																}
															],
															"parameters": [
																{
																	"id": 43343,
																	"name": "addressId",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The address's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 43344,
																	"name": "headers",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Headers to pass in the request."
																			}
																		]
																	},
																	"type": {
																		"type": "reference",
																		"target": 45316,
																		"name": "ClientHeaders",
																		"package": "@medusajs/js-sdk"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/http/customer/store/responses.ts",
																			"qualifiedName": "StoreCustomerAddressDeleteResponse"
																		},
																		"name": "StoreCustomerAddressDeleteResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43299,
												43305,
												43311,
												43316,
												43322,
												43329,
												43334,
												43340
											]
										}
									],
									"sources": [
										{
											"fileName": "store/index.ts",
											"line": 1300,
											"character": 20,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1300"
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43114,
								43127,
								43140,
								43153,
								43166,
								43227,
								43241,
								43255,
								43297
							]
						}
					],
					"sources": [
						{
							"fileName": "store/index.ts",
							"line": 5,
							"character": 13,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L5"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						43109
					]
				}
			],
			"sources": [
				{
					"fileName": "store/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/js-sdk/src/store/index.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				43012,
				43063,
				43108
			]
		}
	],
	"packageName": "@medusajs/js-sdk",
	"symbolIdMap": {
		"43012": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": ""
		},
		"43013": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin"
		},
		"43014": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.__constructor"
		},
		"43015": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin"
		},
		"43016": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "client"
		},
		"43017": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.invite"
		},
		"43018": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.customer"
		},
		"43019": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productCollection"
		},
		"43020": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productCategory"
		},
		"43021": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.priceList"
		},
		"43022": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.pricePreference"
		},
		"43023": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.product"
		},
		"43024": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productType"
		},
		"43025": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.upload"
		},
		"43026": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.region"
		},
		"43027": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.returnReason"
		},
		"43028": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.stockLocation"
		},
		"43029": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.salesChannel"
		},
		"43030": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillmentSet"
		},
		"43031": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillment"
		},
		"43032": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.fulfillmentProvider"
		},
		"43033": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.shippingOption"
		},
		"43034": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.shippingOptionType"
		},
		"43035": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.shippingProfile"
		},
		"43036": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.inventoryItem"
		},
		"43037": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.notification"
		},
		"43038": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.order"
		},
		"43039": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.draftOrder"
		},
		"43040": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.orderEdit"
		},
		"43041": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.return"
		},
		"43042": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.claim"
		},
		"43043": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.exchange"
		},
		"43044": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.taxRate"
		},
		"43045": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.taxRegion"
		},
		"43046": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.store"
		},
		"43047": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productTag"
		},
		"43048": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.user"
		},
		"43049": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.currency"
		},
		"43050": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.payment"
		},
		"43051": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.productVariant"
		},
		"43052": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.refundReason"
		},
		"43053": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.paymentCollection"
		},
		"43054": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.apiKey"
		},
		"43055": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.workflowExecution"
		},
		"43056": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.reservation"
		},
		"43057": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.customerGroup"
		},
		"43058": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.promotion"
		},
		"43059": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.taxProvider"
		},
		"43060": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.campaign"
		},
		"43061": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.plugin"
		},
		"43062": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"qualifiedName": "Admin.views"
		},
		"43063": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": ""
		},
		"43064": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth"
		},
		"43065": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.__constructor"
		},
		"43066": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth"
		},
		"43067": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "client"
		},
		"43068": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "config"
		},
		"43071": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.register"
		},
		"43072": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.register"
		},
		"43073": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"43074": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"43075": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "payload"
		},
		"43076": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.login"
		},
		"43077": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.login"
		},
		"43078": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"43079": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"43080": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "payload"
		},
		"43081": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__object"
		},
		"43082": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__object.location"
		},
		"43083": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.callback"
		},
		"43084": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.callback"
		},
		"43085": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"43086": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "method"
		},
		"43087": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "query"
		},
		"43088": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.refresh"
		},
		"43089": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.refresh"
		},
		"43090": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.logout"
		},
		"43091": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.logout"
		},
		"43092": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.resetPassword"
		},
		"43093": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.resetPassword"
		},
		"43094": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"43095": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "provider"
		},
		"43096": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "body"
		},
		"43097": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__type"
		},
		"43098": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "__type.identifier"
		},
		"43099": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.updateProvider"
		},
		"43100": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "Auth.updateProvider"
		},
		"43101": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "actor"
		},
		"43102": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "provider"
		},
		"43103": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "body"
		},
		"43104": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"qualifiedName": "token"
		},
		"43108": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": ""
		},
		"43109": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store"
		},
		"43114": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.region"
		},
		"43115": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43116": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"43117": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43118": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43119": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43120": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43121": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"43122": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43123": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43124": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43125": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43126": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43127": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.collection"
		},
		"43128": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43129": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"43130": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43131": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43132": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43133": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43134": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"43135": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43136": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43137": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43138": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43139": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43140": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.category"
		},
		"43141": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43142": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"43143": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43144": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43145": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43146": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43147": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"43148": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43149": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43150": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43151": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43152": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43153": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.product"
		},
		"43154": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43155": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"43156": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43157": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43158": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43159": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43160": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"43161": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43162": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43163": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43164": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43165": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43166": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.cart"
		},
		"43167": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43168": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.create"
		},
		"43169": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43170": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43171": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43172": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43173": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43174": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.update"
		},
		"43175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"43182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.createLineItem"
		},
		"43188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"43191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.updateLineItem"
		},
		"43195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"43198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "lineItemId"
		},
		"43199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.deleteLineItem"
		},
		"43203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"43206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "lineItemId"
		},
		"43207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.addShippingMethod"
		},
		"43209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43210": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"43212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43215": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.complete"
		},
		"43216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cartId"
		},
		"43219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43220": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.transferCart"
		},
		"43222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.fulfillment"
		},
		"43228": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43229": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listCartOptions"
		},
		"43230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.calculate"
		},
		"43235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.payment"
		},
		"43242": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43243": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listPaymentProviders"
		},
		"43244": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43245": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43246": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43247": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43248": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.initiatePaymentSession"
		},
		"43249": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43250": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43251": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "cart"
		},
		"43252": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43253": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43254": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43255": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.order"
		},
		"43256": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43257": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.list"
		},
		"43258": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43259": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43260": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43261": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43262": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"43263": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43264": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43265": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43266": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43267": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43268": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__type"
		},
		"43269": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__type.order"
		},
		"43270": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.requestTransfer"
		},
		"43271": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43272": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43273": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43274": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43275": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43276": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43277": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.cancelTransfer"
		},
		"43278": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43279": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43280": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43281": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43282": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43283": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.acceptTransfer"
		},
		"43284": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43285": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43286": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43287": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43288": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43289": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43290": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.declineTransfer"
		},
		"43291": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43292": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43293": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "id"
		},
		"43294": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43295": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43296": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43297": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "Store.customer"
		},
		"43298": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object"
		},
		"43299": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.create"
		},
		"43300": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43301": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43302": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43303": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43304": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43305": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.update"
		},
		"43306": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43307": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43308": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43309": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43310": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43311": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieve"
		},
		"43312": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43313": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43314": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43315": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43316": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.createAddress"
		},
		"43317": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43318": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43319": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43320": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43321": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43322": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.updateAddress"
		},
		"43323": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43324": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43325": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"43326": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "body"
		},
		"43327": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43328": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43329": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.listAddress"
		},
		"43330": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43331": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43332": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43333": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43334": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.retrieveAddress"
		},
		"43335": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43336": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43337": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"43338": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "query"
		},
		"43339": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43340": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__object.deleteAddress"
		},
		"43341": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43342": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "__function"
		},
		"43343": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "addressId"
		},
		"43344": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/store/index.ts",
			"qualifiedName": "headers"
		},
		"43345": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite"
		},
		"43346": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.__constructor"
		},
		"43347": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite"
		},
		"43348": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "client"
		},
		"43349": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.client"
		},
		"43350": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.accept"
		},
		"43351": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.accept"
		},
		"43352": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "input"
		},
		"43353": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "__type"
		},
		"43354": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "__type.invite_token"
		},
		"43355": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"43356": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"43357": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.create"
		},
		"43358": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.create"
		},
		"43359": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "body"
		},
		"43360": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"43361": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"43362": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.retrieve"
		},
		"43363": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.retrieve"
		},
		"43364": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"43365": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "query"
		},
		"43366": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"43367": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.list"
		},
		"43368": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.list"
		},
		"43369": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "queryParams"
		},
		"43370": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"43371": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.resend"
		},
		"43372": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.resend"
		},
		"43373": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"43374": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"43375": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.delete"
		},
		"43376": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "Invite.delete"
		},
		"43377": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "id"
		},
		"43378": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/invite.ts",
			"qualifiedName": "headers"
		},
		"43379": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer"
		},
		"43380": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.__constructor"
		},
		"43381": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer"
		},
		"43382": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "client"
		},
		"43383": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.client"
		},
		"43384": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.create"
		},
		"43385": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.create"
		},
		"43386": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"43387": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"43388": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43389": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.update"
		},
		"43390": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.update"
		},
		"43391": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43392": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"43393": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"43394": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43395": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.list"
		},
		"43396": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.list"
		},
		"43397": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "queryParams"
		},
		"43398": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43399": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieve"
		},
		"43400": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieve"
		},
		"43401": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43402": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "query"
		},
		"43403": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43404": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.delete"
		},
		"43405": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.delete"
		},
		"43406": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43407": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43408": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.batchCustomerGroups"
		},
		"43409": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.batchCustomerGroups"
		},
		"43410": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43411": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"43412": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43413": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.createAddress"
		},
		"43414": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.createAddress"
		},
		"43415": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43416": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"43417": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43418": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.updateAddress"
		},
		"43419": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.updateAddress"
		},
		"43420": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43421": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "addressId"
		},
		"43422": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "body"
		},
		"43423": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43424": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.deleteAddress"
		},
		"43425": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.deleteAddress"
		},
		"43426": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43427": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "addressId"
		},
		"43428": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43429": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieveAddress"
		},
		"43430": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.retrieveAddress"
		},
		"43431": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43432": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "addressId"
		},
		"43433": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43434": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.listAddresses"
		},
		"43435": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "Customer.listAddresses"
		},
		"43436": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "id"
		},
		"43437": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer.ts",
			"qualifiedName": "headers"
		},
		"43438": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection"
		},
		"43439": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.__constructor"
		},
		"43440": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection"
		},
		"43441": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "client"
		},
		"43442": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.client"
		},
		"43443": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.create"
		},
		"43444": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.create"
		},
		"43445": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"43446": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"43447": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"43448": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.update"
		},
		"43449": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.update"
		},
		"43450": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"43451": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"43452": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"43453": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"43454": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.list"
		},
		"43455": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.list"
		},
		"43456": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "queryParams"
		},
		"43457": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"43458": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.retrieve"
		},
		"43459": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.retrieve"
		},
		"43460": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"43461": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "query"
		},
		"43462": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"43463": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.delete"
		},
		"43464": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.delete"
		},
		"43465": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"43466": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"43467": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.updateProducts"
		},
		"43468": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "ProductCollection.updateProducts"
		},
		"43469": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "id"
		},
		"43470": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "body"
		},
		"43471": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-collection.ts",
			"qualifiedName": "headers"
		},
		"43472": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory"
		},
		"43473": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.__constructor"
		},
		"43474": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory"
		},
		"43475": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "client"
		},
		"43476": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.client"
		},
		"43477": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.create"
		},
		"43478": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.create"
		},
		"43479": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"43480": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"43481": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"43482": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.update"
		},
		"43483": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.update"
		},
		"43484": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"43485": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"43486": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"43487": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"43488": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.list"
		},
		"43489": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.list"
		},
		"43490": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"43491": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"43492": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.retrieve"
		},
		"43493": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.retrieve"
		},
		"43494": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"43495": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"43496": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"43497": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.delete"
		},
		"43498": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.delete"
		},
		"43499": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"43500": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"43501": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.updateProducts"
		},
		"43502": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "ProductCategory.updateProducts"
		},
		"43503": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "id"
		},
		"43504": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "body"
		},
		"43505": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "query"
		},
		"43506": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-category.ts",
			"qualifiedName": "headers"
		},
		"43507": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList"
		},
		"43508": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.__constructor"
		},
		"43509": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList"
		},
		"43510": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "client"
		},
		"43511": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.client"
		},
		"43512": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.retrieve"
		},
		"43513": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.retrieve"
		},
		"43514": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"43515": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"43516": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"43517": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.list"
		},
		"43518": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.list"
		},
		"43519": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"43520": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"43521": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.create"
		},
		"43522": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.create"
		},
		"43523": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"43524": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"43525": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"43526": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.update"
		},
		"43527": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.update"
		},
		"43528": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"43529": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"43530": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"43531": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"43532": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.delete"
		},
		"43533": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.delete"
		},
		"43534": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"43535": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"43536": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.batchPrices"
		},
		"43537": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.batchPrices"
		},
		"43538": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"43539": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"43540": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"43541": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"43542": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.linkProducts"
		},
		"43543": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "PriceList.linkProducts"
		},
		"43544": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "id"
		},
		"43545": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "body"
		},
		"43546": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "query"
		},
		"43547": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-list.ts",
			"qualifiedName": "headers"
		},
		"43548": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference"
		},
		"43549": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.__constructor"
		},
		"43550": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference"
		},
		"43551": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "client"
		},
		"43552": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.client"
		},
		"43553": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.retrieve"
		},
		"43554": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.retrieve"
		},
		"43555": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"43556": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"43557": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"43558": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.list"
		},
		"43559": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.list"
		},
		"43560": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"43561": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"43562": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.create"
		},
		"43563": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.create"
		},
		"43564": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "body"
		},
		"43565": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"43566": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"43567": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.update"
		},
		"43568": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.update"
		},
		"43569": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"43570": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "body"
		},
		"43571": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "query"
		},
		"43572": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"43573": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.delete"
		},
		"43574": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "PricePreference.delete"
		},
		"43575": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "id"
		},
		"43576": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/price-preference.ts",
			"qualifiedName": "headers"
		},
		"43577": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product"
		},
		"43578": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.__constructor"
		},
		"43579": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product"
		},
		"43580": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "client"
		},
		"43581": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.client"
		},
		"43582": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.import"
		},
		"43583": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.import"
		},
		"43584": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43585": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43586": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"43587": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43588": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createImport"
		},
		"43589": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createImport"
		},
		"43590": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43591": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43592": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"43593": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43594": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.confirmImport"
		},
		"43595": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.confirmImport"
		},
		"43596": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "transactionId"
		},
		"43597": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43598": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"43599": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43600": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"43601": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.export"
		},
		"43602": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.export"
		},
		"43603": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43604": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43605": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43606": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batch"
		},
		"43607": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batch"
		},
		"43608": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43609": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43610": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43611": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.create"
		},
		"43612": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.create"
		},
		"43613": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43614": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43615": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43616": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.update"
		},
		"43617": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.update"
		},
		"43618": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43619": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43620": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43621": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43622": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.list"
		},
		"43623": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.list"
		},
		"43624": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "queryParams"
		},
		"43625": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43626": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieve"
		},
		"43627": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieve"
		},
		"43628": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43629": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43630": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43631": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.delete"
		},
		"43632": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.delete"
		},
		"43633": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43634": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43635": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariants"
		},
		"43636": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariants"
		},
		"43637": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43638": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43639": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43640": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43641": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createVariant"
		},
		"43642": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createVariant"
		},
		"43643": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43644": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43645": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43646": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43647": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateVariant"
		},
		"43648": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateVariant"
		},
		"43649": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43650": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43651": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43652": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43653": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43654": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listVariants"
		},
		"43655": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listVariants"
		},
		"43656": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43657": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43658": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43659": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveVariant"
		},
		"43660": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveVariant"
		},
		"43661": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43662": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43663": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43664": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43665": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteVariant"
		},
		"43666": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteVariant"
		},
		"43667": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43668": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43669": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43670": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariantInventoryItems"
		},
		"43671": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.batchVariantInventoryItems"
		},
		"43672": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43673": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43674": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43675": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43676": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createOption"
		},
		"43677": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.createOption"
		},
		"43678": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43679": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43680": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43681": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43682": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateOption"
		},
		"43683": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.updateOption"
		},
		"43684": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43685": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43686": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "body"
		},
		"43687": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43688": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43689": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listOptions"
		},
		"43690": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.listOptions"
		},
		"43691": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43692": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43693": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43694": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveOption"
		},
		"43695": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.retrieveOption"
		},
		"43696": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43697": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43698": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "query"
		},
		"43699": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43700": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteOption"
		},
		"43701": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "Product.deleteOption"
		},
		"43702": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "productId"
		},
		"43703": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "id"
		},
		"43704": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product.ts",
			"qualifiedName": "headers"
		},
		"43705": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType"
		},
		"43706": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.__constructor"
		},
		"43707": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType"
		},
		"43708": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "client"
		},
		"43709": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.client"
		},
		"43710": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.create"
		},
		"43711": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.create"
		},
		"43712": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "body"
		},
		"43713": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"43714": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"43715": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.update"
		},
		"43716": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.update"
		},
		"43717": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"43718": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "body"
		},
		"43719": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"43720": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"43721": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.list"
		},
		"43722": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.list"
		},
		"43723": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"43724": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"43725": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.retrieve"
		},
		"43726": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.retrieve"
		},
		"43727": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"43728": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "query"
		},
		"43729": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"43730": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.delete"
		},
		"43731": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "ProductType.delete"
		},
		"43732": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "id"
		},
		"43733": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-type.ts",
			"qualifiedName": "headers"
		},
		"43734": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload"
		},
		"43735": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.__constructor"
		},
		"43736": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload"
		},
		"43737": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "client"
		},
		"43738": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.client"
		},
		"43739": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.create"
		},
		"43740": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.create"
		},
		"43741": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "body"
		},
		"43742": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "query"
		},
		"43743": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"43744": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.retrieve"
		},
		"43745": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.retrieve"
		},
		"43746": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "id"
		},
		"43747": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "query"
		},
		"43748": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"43749": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.delete"
		},
		"43750": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.delete"
		},
		"43751": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "id"
		},
		"43752": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"43753": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.presignedUrl"
		},
		"43754": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "Upload.presignedUrl"
		},
		"43755": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "body"
		},
		"43756": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "query"
		},
		"43757": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/upload.ts",
			"qualifiedName": "headers"
		},
		"43758": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region"
		},
		"43759": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.__constructor"
		},
		"43760": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region"
		},
		"43761": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "client"
		},
		"43762": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.client"
		},
		"43763": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.create"
		},
		"43764": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.create"
		},
		"43765": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "body"
		},
		"43766": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"43767": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"43768": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.update"
		},
		"43769": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.update"
		},
		"43770": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"43771": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "body"
		},
		"43772": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"43773": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"43774": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.list"
		},
		"43775": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.list"
		},
		"43776": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "queryParams"
		},
		"43777": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"43778": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.retrieve"
		},
		"43779": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.retrieve"
		},
		"43780": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"43781": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "query"
		},
		"43782": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"43783": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.delete"
		},
		"43784": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "Region.delete"
		},
		"43785": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "id"
		},
		"43786": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/region.ts",
			"qualifiedName": "headers"
		},
		"43787": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason"
		},
		"43788": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.__constructor"
		},
		"43789": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason"
		},
		"43790": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "client"
		},
		"43791": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.client"
		},
		"43792": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.list"
		},
		"43793": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.list"
		},
		"43794": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"43795": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"43796": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.retrieve"
		},
		"43797": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.retrieve"
		},
		"43798": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"43799": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"43800": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"43801": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.create"
		},
		"43802": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.create"
		},
		"43803": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "body"
		},
		"43804": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"43805": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"43806": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.update"
		},
		"43807": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.update"
		},
		"43808": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"43809": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "body"
		},
		"43810": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"43811": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"43812": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.delete"
		},
		"43813": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "ReturnReason.delete"
		},
		"43814": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "id"
		},
		"43815": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "query"
		},
		"43816": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return-reason.ts",
			"qualifiedName": "headers"
		},
		"43817": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation"
		},
		"43818": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.__constructor"
		},
		"43819": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation"
		},
		"43820": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "client"
		},
		"43821": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.client"
		},
		"43822": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.create"
		},
		"43823": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.create"
		},
		"43824": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"43825": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"43826": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"43827": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.update"
		},
		"43828": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.update"
		},
		"43829": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"43830": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"43831": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"43832": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"43833": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.delete"
		},
		"43834": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.delete"
		},
		"43835": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"43836": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"43837": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.retrieve"
		},
		"43838": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.retrieve"
		},
		"43839": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"43840": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"43841": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"43842": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.list"
		},
		"43843": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.list"
		},
		"43844": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "query"
		},
		"43845": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"43846": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateSalesChannels"
		},
		"43847": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateSalesChannels"
		},
		"43848": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"43849": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"43850": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"43851": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.createFulfillmentSet"
		},
		"43852": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.createFulfillmentSet"
		},
		"43853": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"43854": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"43855": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"43856": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateFulfillmentProviders"
		},
		"43857": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "StockLocation.updateFulfillmentProviders"
		},
		"43858": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "id"
		},
		"43859": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "body"
		},
		"43860": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/stock-location.ts",
			"qualifiedName": "headers"
		},
		"43861": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel"
		},
		"43862": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.__constructor"
		},
		"43863": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel"
		},
		"43864": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "client"
		},
		"43865": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.client"
		},
		"43866": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.create"
		},
		"43867": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.create"
		},
		"43868": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"43869": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"43870": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"43871": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.update"
		},
		"43872": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.update"
		},
		"43873": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"43874": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"43875": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"43876": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"43877": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.delete"
		},
		"43878": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.delete"
		},
		"43879": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"43880": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"43881": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.retrieve"
		},
		"43882": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.retrieve"
		},
		"43883": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"43884": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"43885": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"43886": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.list"
		},
		"43887": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.list"
		},
		"43888": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "query"
		},
		"43889": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"43890": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.updateProducts"
		},
		"43891": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.updateProducts"
		},
		"43892": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"43893": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"43894": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"43895": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.batchProducts"
		},
		"43896": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "SalesChannel.batchProducts"
		},
		"43897": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "id"
		},
		"43898": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "body"
		},
		"43899": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/sales-channel.ts",
			"qualifiedName": "headers"
		},
		"43900": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet"
		},
		"43901": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.__constructor"
		},
		"43902": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet"
		},
		"43903": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "client"
		},
		"43904": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.client"
		},
		"43905": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.delete"
		},
		"43906": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.delete"
		},
		"43907": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "id"
		},
		"43908": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"43909": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.createServiceZone"
		},
		"43910": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.createServiceZone"
		},
		"43911": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "id"
		},
		"43912": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "body"
		},
		"43913": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"43914": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"43915": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.retrieveServiceZone"
		},
		"43916": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.retrieveServiceZone"
		},
		"43917": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"43918": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"43919": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"43920": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"43921": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.updateServiceZone"
		},
		"43922": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.updateServiceZone"
		},
		"43923": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"43924": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"43925": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "body"
		},
		"43926": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "query"
		},
		"43927": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"43928": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.deleteServiceZone"
		},
		"43929": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "FulfillmentSet.deleteServiceZone"
		},
		"43930": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "fulfillmentSetId"
		},
		"43931": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "serviceZoneId"
		},
		"43932": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-set.ts",
			"qualifiedName": "headers"
		},
		"43933": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment"
		},
		"43934": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.__constructor"
		},
		"43935": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment"
		},
		"43936": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "client"
		},
		"43937": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.client"
		},
		"43938": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.create"
		},
		"43939": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.create"
		},
		"43940": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "body"
		},
		"43941": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"43942": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"43943": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.cancel"
		},
		"43944": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.cancel"
		},
		"43945": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "id"
		},
		"43946": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"43947": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"43948": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.createShipment"
		},
		"43949": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "Fulfillment.createShipment"
		},
		"43950": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "id"
		},
		"43951": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "body"
		},
		"43952": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "query"
		},
		"43953": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment.ts",
			"qualifiedName": "headers"
		},
		"43954": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider"
		},
		"43955": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.__constructor"
		},
		"43956": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider"
		},
		"43957": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "client"
		},
		"43958": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.client"
		},
		"43959": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.list"
		},
		"43960": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.list"
		},
		"43961": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "query"
		},
		"43962": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "headers"
		},
		"43963": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.listFulfillmentOptions"
		},
		"43964": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "FulfillmentProvider.listFulfillmentOptions"
		},
		"43965": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "id"
		},
		"43966": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/fulfillment-provider.ts",
			"qualifiedName": "headers"
		},
		"43967": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption"
		},
		"43968": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.__constructor"
		},
		"43969": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption"
		},
		"43970": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "client"
		},
		"43971": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.client"
		},
		"43972": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.create"
		},
		"43973": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.create"
		},
		"43974": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"43975": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"43976": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"43977": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.retrieve"
		},
		"43978": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.retrieve"
		},
		"43979": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"43980": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"43981": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"43982": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.update"
		},
		"43983": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.update"
		},
		"43984": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"43985": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"43986": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"43987": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"43988": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.delete"
		},
		"43989": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.delete"
		},
		"43990": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"43991": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"43992": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.list"
		},
		"43993": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.list"
		},
		"43994": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "query"
		},
		"43995": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"43996": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.updateRules"
		},
		"43997": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "ShippingOption.updateRules"
		},
		"43998": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "id"
		},
		"43999": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "body"
		},
		"44000": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option.ts",
			"qualifiedName": "headers"
		},
		"44001": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType"
		},
		"44002": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.__constructor"
		},
		"44003": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType"
		},
		"44004": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "client"
		},
		"44005": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.client"
		},
		"44006": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.create"
		},
		"44007": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.create"
		},
		"44008": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "body"
		},
		"44009": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "query"
		},
		"44010": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "headers"
		},
		"44011": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.update"
		},
		"44012": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.update"
		},
		"44013": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "id"
		},
		"44014": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "body"
		},
		"44015": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "query"
		},
		"44016": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "headers"
		},
		"44017": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.list"
		},
		"44018": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.list"
		},
		"44019": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "query"
		},
		"44020": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "headers"
		},
		"44021": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.retrieve"
		},
		"44022": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.retrieve"
		},
		"44023": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "id"
		},
		"44024": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "query"
		},
		"44025": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "headers"
		},
		"44026": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.delete"
		},
		"44027": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "ShippingOptionType.delete"
		},
		"44028": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "id"
		},
		"44029": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-option-type.ts",
			"qualifiedName": "headers"
		},
		"44030": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile"
		},
		"44031": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.__constructor"
		},
		"44032": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile"
		},
		"44033": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "client"
		},
		"44034": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.client"
		},
		"44035": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.create"
		},
		"44036": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.create"
		},
		"44037": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "body"
		},
		"44038": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"44039": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"44040": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.update"
		},
		"44041": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.update"
		},
		"44042": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"44043": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "body"
		},
		"44044": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"44045": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"44046": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.delete"
		},
		"44047": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.delete"
		},
		"44048": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"44049": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"44050": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.list"
		},
		"44051": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.list"
		},
		"44052": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"44053": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"44054": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.retrieve"
		},
		"44055": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "ShippingProfile.retrieve"
		},
		"44056": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "id"
		},
		"44057": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "query"
		},
		"44058": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/shipping-profile.ts",
			"qualifiedName": "headers"
		},
		"44059": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem"
		},
		"44060": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.__constructor"
		},
		"44061": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem"
		},
		"44062": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "client"
		},
		"44063": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.client"
		},
		"44064": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.create"
		},
		"44065": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.create"
		},
		"44066": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"44067": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"44068": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44069": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.update"
		},
		"44070": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.update"
		},
		"44071": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"44072": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"44073": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"44074": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44075": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.list"
		},
		"44076": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.list"
		},
		"44077": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"44078": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44079": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.retrieve"
		},
		"44080": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.retrieve"
		},
		"44081": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"44082": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"44083": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44084": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.delete"
		},
		"44085": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.delete"
		},
		"44086": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"44087": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44088": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.listLevels"
		},
		"44089": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.listLevels"
		},
		"44090": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"44091": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"44092": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44093": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.updateLevel"
		},
		"44094": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.updateLevel"
		},
		"44095": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"44096": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "locationId"
		},
		"44097": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"44098": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"44099": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44100": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.deleteLevel"
		},
		"44101": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.deleteLevel"
		},
		"44102": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"44103": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "locationId"
		},
		"44104": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44105": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchUpdateLevels"
		},
		"44106": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchUpdateLevels"
		},
		"44107": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"44108": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"44109": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "query"
		},
		"44110": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44111": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemLocationLevels"
		},
		"44112": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemLocationLevels"
		},
		"44113": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "id"
		},
		"44114": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"44115": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44116": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemsLocationLevels"
		},
		"44117": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "InventoryItem.batchInventoryItemsLocationLevels"
		},
		"44118": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "body"
		},
		"44119": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/inventory-item.ts",
			"qualifiedName": "headers"
		},
		"44120": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification"
		},
		"44121": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.__constructor"
		},
		"44122": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification"
		},
		"44123": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "client"
		},
		"44124": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.client"
		},
		"44125": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.retrieve"
		},
		"44126": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.retrieve"
		},
		"44127": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "id"
		},
		"44128": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "query"
		},
		"44129": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "headers"
		},
		"44130": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.list"
		},
		"44131": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "Notification.list"
		},
		"44132": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "query"
		},
		"44133": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/notification.ts",
			"qualifiedName": "headers"
		},
		"44134": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order"
		},
		"44135": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.__constructor"
		},
		"44136": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order"
		},
		"44137": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "client"
		},
		"44138": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.client"
		},
		"44139": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrieve"
		},
		"44140": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrieve"
		},
		"44141": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44142": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"44143": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44144": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.update"
		},
		"44145": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.update"
		},
		"44146": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44147": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"44148": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44149": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrievePreview"
		},
		"44150": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.retrievePreview"
		},
		"44151": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44152": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"44153": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44154": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.list"
		},
		"44155": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.list"
		},
		"44156": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"44157": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44158": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.archive"
		},
		"44159": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.archive"
		},
		"44160": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44161": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"44162": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44163": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancel"
		},
		"44164": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancel"
		},
		"44165": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44166": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44167": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.complete"
		},
		"44168": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.complete"
		},
		"44169": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44170": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"44171": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"44172": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44173": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.requestTransfer"
		},
		"44174": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.requestTransfer"
		},
		"44175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"44177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelTransfer"
		},
		"44179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelTransfer"
		},
		"44180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createFulfillment"
		},
		"44183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createFulfillment"
		},
		"44184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"44186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"44187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelFulfillment"
		},
		"44189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.cancelFulfillment"
		},
		"44190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"44192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"44193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createShipment"
		},
		"44195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createShipment"
		},
		"44196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"44198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"44199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"44200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.markAsDelivered"
		},
		"44202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.markAsDelivered"
		},
		"44203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "fulfillmentId"
		},
		"44205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"44206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listShippingOptions"
		},
		"44208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listShippingOptions"
		},
		"44209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44210": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"44211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "__type"
		},
		"44213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"44214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listChanges"
		},
		"44215": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listChanges"
		},
		"44216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"44218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listLineItems"
		},
		"44220": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.listLineItems"
		},
		"44221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "id"
		},
		"44222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "queryParams"
		},
		"44223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createCreditLine"
		},
		"44225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "Order.createCreditLine"
		},
		"44226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "orderId"
		},
		"44227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "body"
		},
		"44228": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "query"
		},
		"44229": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order.ts",
			"qualifiedName": "headers"
		},
		"44230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder"
		},
		"44231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.__constructor"
		},
		"44232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder"
		},
		"44233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "client"
		},
		"44234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.client"
		},
		"44235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.retrieve"
		},
		"44236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.retrieve"
		},
		"44237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"44239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.list"
		},
		"44241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.list"
		},
		"44242": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "queryParams"
		},
		"44243": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44244": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.create"
		},
		"44245": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.create"
		},
		"44246": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44247": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"44248": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44249": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.delete"
		},
		"44250": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.delete"
		},
		"44251": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44252": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44253": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.update"
		},
		"44254": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.update"
		},
		"44255": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44256": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44257": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"44258": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44259": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.convertToOrder"
		},
		"44260": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.convertToOrder"
		},
		"44261": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44262": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "query"
		},
		"44263": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44264": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addItems"
		},
		"44265": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addItems"
		},
		"44266": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44267": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44268": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44269": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateActionItem"
		},
		"44270": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateActionItem"
		},
		"44271": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44272": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "actionId"
		},
		"44273": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44274": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44275": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeActionItem"
		},
		"44276": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeActionItem"
		},
		"44277": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44278": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "actionId"
		},
		"44279": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44280": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateItem"
		},
		"44281": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateItem"
		},
		"44282": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44283": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "itemId"
		},
		"44284": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44285": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44286": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addPromotions"
		},
		"44287": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addPromotions"
		},
		"44288": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44289": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44290": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44291": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removePromotions"
		},
		"44292": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removePromotions"
		},
		"44293": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44294": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44295": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44296": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addShippingMethod"
		},
		"44297": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.addShippingMethod"
		},
		"44298": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44299": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44300": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44301": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateActionShippingMethod"
		},
		"44302": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateActionShippingMethod"
		},
		"44303": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44304": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "actionId"
		},
		"44305": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44306": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44307": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeActionShippingMethod"
		},
		"44308": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeActionShippingMethod"
		},
		"44309": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44310": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "actionId"
		},
		"44311": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44312": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeShippingMethod"
		},
		"44313": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.removeShippingMethod"
		},
		"44314": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44315": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "shippingMethodId"
		},
		"44316": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44317": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateShippingMethod"
		},
		"44318": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.updateShippingMethod"
		},
		"44319": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44320": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "methodId"
		},
		"44321": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "body"
		},
		"44322": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44323": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.beginEdit"
		},
		"44324": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.beginEdit"
		},
		"44325": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44326": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44327": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.cancelEdit"
		},
		"44328": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.cancelEdit"
		},
		"44329": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44330": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44331": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.requestEdit"
		},
		"44332": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.requestEdit"
		},
		"44333": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44334": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44335": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.confirmEdit"
		},
		"44336": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "DraftOrder.confirmEdit"
		},
		"44337": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "id"
		},
		"44338": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/draft-order.ts",
			"qualifiedName": "headers"
		},
		"44339": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit"
		},
		"44340": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.__constructor"
		},
		"44341": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit"
		},
		"44342": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "client"
		},
		"44343": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.client"
		},
		"44344": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.initiateRequest"
		},
		"44345": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.initiateRequest"
		},
		"44346": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"44347": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"44348": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"44349": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.request"
		},
		"44350": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.request"
		},
		"44351": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"44352": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"44353": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"44354": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.confirm"
		},
		"44355": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.confirm"
		},
		"44356": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"44357": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"44358": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"44359": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.cancelRequest"
		},
		"44360": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.cancelRequest"
		},
		"44361": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"44362": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"44363": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"44364": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.addItems"
		},
		"44365": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.addItems"
		},
		"44366": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"44367": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"44368": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"44369": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"44370": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateOriginalItem"
		},
		"44371": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateOriginalItem"
		},
		"44372": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"44373": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "itemId"
		},
		"44374": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"44375": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"44376": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"44377": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateAddedItem"
		},
		"44378": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.updateAddedItem"
		},
		"44379": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"44380": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "actionId"
		},
		"44381": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "body"
		},
		"44382": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"44383": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"44384": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.removeAddedItem"
		},
		"44385": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "OrderEdit.removeAddedItem"
		},
		"44386": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "id"
		},
		"44387": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "actionId"
		},
		"44388": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "query"
		},
		"44389": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/order-edit.ts",
			"qualifiedName": "headers"
		},
		"44390": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return"
		},
		"44391": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.__constructor"
		},
		"44392": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return"
		},
		"44393": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "client"
		},
		"44394": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.client"
		},
		"44395": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.list"
		},
		"44396": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.list"
		},
		"44397": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44398": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44399": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.retrieve"
		},
		"44400": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.retrieve"
		},
		"44401": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44402": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44403": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44404": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateRequest"
		},
		"44405": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateRequest"
		},
		"44406": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44407": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44408": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44409": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancel"
		},
		"44410": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancel"
		},
		"44411": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44412": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44413": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44414": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelRequest"
		},
		"44415": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelRequest"
		},
		"44416": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44417": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44418": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44419": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnItem"
		},
		"44420": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnItem"
		},
		"44421": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44422": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44423": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44424": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44425": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnItem"
		},
		"44426": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnItem"
		},
		"44427": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44428": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"44429": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44430": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44431": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44432": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReturnItem"
		},
		"44433": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReturnItem"
		},
		"44434": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44435": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"44436": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44437": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44438": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnShipping"
		},
		"44439": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.addReturnShipping"
		},
		"44440": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44441": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44442": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44443": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44444": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnShipping"
		},
		"44445": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReturnShipping"
		},
		"44446": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44447": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"44448": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44449": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44450": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44451": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.deleteReturnShipping"
		},
		"44452": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.deleteReturnShipping"
		},
		"44453": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44454": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"44455": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44456": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44457": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateRequest"
		},
		"44458": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateRequest"
		},
		"44459": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44460": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44461": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44462": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44463": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmRequest"
		},
		"44464": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmRequest"
		},
		"44465": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44466": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44467": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44468": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44469": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateReceive"
		},
		"44470": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.initiateReceive"
		},
		"44471": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44472": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44473": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44474": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44475": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.receiveItems"
		},
		"44476": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.receiveItems"
		},
		"44477": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44478": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44479": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44480": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44481": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReceiveItem"
		},
		"44482": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateReceiveItem"
		},
		"44483": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44484": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"44485": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44486": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44487": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44488": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReceiveItem"
		},
		"44489": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeReceiveItem"
		},
		"44490": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44491": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"44492": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44493": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44494": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.dismissItems"
		},
		"44495": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.dismissItems"
		},
		"44496": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44497": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44498": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44499": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44500": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateDismissItem"
		},
		"44501": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.updateDismissItem"
		},
		"44502": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44503": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"44504": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44505": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44506": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44507": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeDismissItem"
		},
		"44508": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.removeDismissItem"
		},
		"44509": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44510": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "actionId"
		},
		"44511": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44512": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44513": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmReceive"
		},
		"44514": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.confirmReceive"
		},
		"44515": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44516": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "body"
		},
		"44517": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44518": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44519": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelReceive"
		},
		"44520": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "Return.cancelReceive"
		},
		"44521": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "id"
		},
		"44522": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "query"
		},
		"44523": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/return.ts",
			"qualifiedName": "headers"
		},
		"44524": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim"
		},
		"44525": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.__constructor"
		},
		"44526": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim"
		},
		"44527": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "client"
		},
		"44528": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.client"
		},
		"44529": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.list"
		},
		"44530": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.list"
		},
		"44531": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44532": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44533": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.retrieve"
		},
		"44534": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.retrieve"
		},
		"44535": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44536": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44537": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44538": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.create"
		},
		"44539": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.create"
		},
		"44540": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44541": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44542": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44543": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancel"
		},
		"44544": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancel"
		},
		"44545": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44546": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44547": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44548": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addItems"
		},
		"44549": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addItems"
		},
		"44550": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44551": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44552": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44553": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44554": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateItem"
		},
		"44555": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateItem"
		},
		"44556": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44557": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44558": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44559": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44560": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44561": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeItem"
		},
		"44562": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeItem"
		},
		"44563": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44564": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44565": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44566": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44567": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundItems"
		},
		"44568": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundItems"
		},
		"44569": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44570": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44571": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44572": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44573": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundItem"
		},
		"44574": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundItem"
		},
		"44575": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44576": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44577": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44578": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44579": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44580": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeInboundItem"
		},
		"44581": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeInboundItem"
		},
		"44582": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44583": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44584": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44585": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44586": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundShipping"
		},
		"44587": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addInboundShipping"
		},
		"44588": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44589": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44590": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44591": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44592": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundShipping"
		},
		"44593": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateInboundShipping"
		},
		"44594": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44595": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44596": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44597": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44598": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44599": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteInboundShipping"
		},
		"44600": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteInboundShipping"
		},
		"44601": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44602": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44603": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44604": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44605": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundItems"
		},
		"44606": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundItems"
		},
		"44607": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44608": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44609": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44610": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44611": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundItem"
		},
		"44612": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundItem"
		},
		"44613": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44614": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44615": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44616": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44617": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44618": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeOutboundItem"
		},
		"44619": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.removeOutboundItem"
		},
		"44620": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44621": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44622": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44623": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44624": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundShipping"
		},
		"44625": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.addOutboundShipping"
		},
		"44626": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44627": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44628": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44629": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44630": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundShipping"
		},
		"44631": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.updateOutboundShipping"
		},
		"44632": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44633": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44634": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44635": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44636": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44637": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteOutboundShipping"
		},
		"44638": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.deleteOutboundShipping"
		},
		"44639": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44640": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "actionId"
		},
		"44641": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44642": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44643": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.request"
		},
		"44644": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.request"
		},
		"44645": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44646": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "body"
		},
		"44647": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44648": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44649": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancelRequest"
		},
		"44650": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "Claim.cancelRequest"
		},
		"44651": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "id"
		},
		"44652": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "query"
		},
		"44653": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/claim.ts",
			"qualifiedName": "headers"
		},
		"44654": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange"
		},
		"44655": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.__constructor"
		},
		"44656": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange"
		},
		"44657": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "client"
		},
		"44658": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.client"
		},
		"44659": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.list"
		},
		"44660": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.list"
		},
		"44661": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44662": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44663": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.retrieve"
		},
		"44664": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.retrieve"
		},
		"44665": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44666": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44667": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44668": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.create"
		},
		"44669": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.create"
		},
		"44670": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44671": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44672": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44673": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancel"
		},
		"44674": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancel"
		},
		"44675": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44676": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44677": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44678": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundItems"
		},
		"44679": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundItems"
		},
		"44680": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44681": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44682": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44683": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44684": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundItem"
		},
		"44685": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundItem"
		},
		"44686": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44687": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"44688": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44689": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44690": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44691": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeInboundItem"
		},
		"44692": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeInboundItem"
		},
		"44693": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44694": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"44695": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44696": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44697": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundShipping"
		},
		"44698": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addInboundShipping"
		},
		"44699": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44700": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44701": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44702": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44703": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundShipping"
		},
		"44704": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateInboundShipping"
		},
		"44705": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44706": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"44707": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44708": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44709": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44710": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteInboundShipping"
		},
		"44711": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteInboundShipping"
		},
		"44712": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44713": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"44714": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44715": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44716": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundItems"
		},
		"44717": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundItems"
		},
		"44718": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44719": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44720": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44721": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44722": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundItem"
		},
		"44723": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundItem"
		},
		"44724": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44725": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"44726": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44727": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44728": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44729": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeOutboundItem"
		},
		"44730": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.removeOutboundItem"
		},
		"44731": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44732": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"44733": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44734": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44735": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundShipping"
		},
		"44736": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.addOutboundShipping"
		},
		"44737": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44738": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44739": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44740": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44741": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundShipping"
		},
		"44742": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.updateOutboundShipping"
		},
		"44743": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44744": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"44745": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44746": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44747": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44748": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteOutboundShipping"
		},
		"44749": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.deleteOutboundShipping"
		},
		"44750": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44751": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "actionId"
		},
		"44752": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44753": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44754": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.request"
		},
		"44755": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.request"
		},
		"44756": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44757": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "body"
		},
		"44758": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44759": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44760": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancelRequest"
		},
		"44761": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "Exchange.cancelRequest"
		},
		"44762": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "id"
		},
		"44763": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "query"
		},
		"44764": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/exchange.ts",
			"qualifiedName": "headers"
		},
		"44765": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate"
		},
		"44766": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.__constructor"
		},
		"44767": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate"
		},
		"44768": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "client"
		},
		"44769": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.client"
		},
		"44770": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.create"
		},
		"44771": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.create"
		},
		"44772": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "body"
		},
		"44773": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"44774": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"44775": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.update"
		},
		"44776": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.update"
		},
		"44777": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"44778": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "body"
		},
		"44779": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"44780": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"44781": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.delete"
		},
		"44782": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.delete"
		},
		"44783": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"44784": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"44785": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.retrieve"
		},
		"44786": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.retrieve"
		},
		"44787": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "id"
		},
		"44788": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"44789": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"44790": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.list"
		},
		"44791": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "TaxRate.list"
		},
		"44792": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "query"
		},
		"44793": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-rate.ts",
			"qualifiedName": "headers"
		},
		"44794": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion"
		},
		"44795": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.__constructor"
		},
		"44796": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion"
		},
		"44797": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "client"
		},
		"44798": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.client"
		},
		"44799": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.create"
		},
		"44800": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.create"
		},
		"44801": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "body"
		},
		"44802": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"44803": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"44804": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.update"
		},
		"44805": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.update"
		},
		"44806": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "id"
		},
		"44807": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "body"
		},
		"44808": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"44809": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"44810": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.delete"
		},
		"44811": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.delete"
		},
		"44812": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "id"
		},
		"44813": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"44814": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.retrieve"
		},
		"44815": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.retrieve"
		},
		"44816": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "id"
		},
		"44817": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"44818": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"44819": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.list"
		},
		"44820": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "TaxRegion.list"
		},
		"44821": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "query"
		},
		"44822": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-region.ts",
			"qualifiedName": "headers"
		},
		"44823": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store"
		},
		"44824": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.__constructor"
		},
		"44825": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store"
		},
		"44826": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "client"
		},
		"44827": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.client"
		},
		"44828": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.retrieve"
		},
		"44829": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.retrieve"
		},
		"44830": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "id"
		},
		"44831": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"44832": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"44833": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.list"
		},
		"44834": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.list"
		},
		"44835": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"44836": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"44837": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.update"
		},
		"44838": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "Store.update"
		},
		"44839": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "id"
		},
		"44840": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "body"
		},
		"44841": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "query"
		},
		"44842": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/store.ts",
			"qualifiedName": "headers"
		},
		"44843": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag"
		},
		"44844": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.__constructor"
		},
		"44845": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag"
		},
		"44846": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "client"
		},
		"44847": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.client"
		},
		"44848": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.create"
		},
		"44849": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.create"
		},
		"44850": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "body"
		},
		"44851": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"44852": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"44853": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.update"
		},
		"44854": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.update"
		},
		"44855": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"44856": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "body"
		},
		"44857": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"44858": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"44859": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.list"
		},
		"44860": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.list"
		},
		"44861": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"44862": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"44863": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.retrieve"
		},
		"44864": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.retrieve"
		},
		"44865": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"44866": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "query"
		},
		"44867": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"44868": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.delete"
		},
		"44869": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "ProductTag.delete"
		},
		"44870": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "id"
		},
		"44871": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-tag.ts",
			"qualifiedName": "headers"
		},
		"44872": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User"
		},
		"44873": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.__constructor"
		},
		"44874": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User"
		},
		"44875": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "client"
		},
		"44876": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.client"
		},
		"44877": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.update"
		},
		"44878": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.update"
		},
		"44879": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"44880": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "body"
		},
		"44881": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"44882": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"44883": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.list"
		},
		"44884": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.list"
		},
		"44885": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "queryParams"
		},
		"44886": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"44887": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.retrieve"
		},
		"44888": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.retrieve"
		},
		"44889": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"44890": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"44891": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"44892": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.delete"
		},
		"44893": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.delete"
		},
		"44894": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "id"
		},
		"44895": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"44896": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.me"
		},
		"44897": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "User.me"
		},
		"44898": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "query"
		},
		"44899": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/user.ts",
			"qualifiedName": "headers"
		},
		"44900": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency"
		},
		"44901": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.__constructor"
		},
		"44902": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency"
		},
		"44903": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "client"
		},
		"44904": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.client"
		},
		"44905": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.list"
		},
		"44906": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.list"
		},
		"44907": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "query"
		},
		"44908": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "headers"
		},
		"44909": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.retrieve"
		},
		"44910": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "Currency.retrieve"
		},
		"44911": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "code"
		},
		"44912": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "query"
		},
		"44913": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/currency.ts",
			"qualifiedName": "headers"
		},
		"44914": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment"
		},
		"44915": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.__constructor"
		},
		"44916": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment"
		},
		"44917": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "client"
		},
		"44918": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.client"
		},
		"44919": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.list"
		},
		"44920": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.list"
		},
		"44921": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"44922": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"44923": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.listPaymentProviders"
		},
		"44924": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.listPaymentProviders"
		},
		"44925": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"44926": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"44927": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.retrieve"
		},
		"44928": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.retrieve"
		},
		"44929": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"44930": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"44931": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"44932": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.capture"
		},
		"44933": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.capture"
		},
		"44934": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"44935": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "body"
		},
		"44936": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"44937": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"44938": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.refund"
		},
		"44939": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "Payment.refund"
		},
		"44940": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "id"
		},
		"44941": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "body"
		},
		"44942": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "query"
		},
		"44943": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment.ts",
			"qualifiedName": "headers"
		},
		"44944": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant"
		},
		"44945": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.__constructor"
		},
		"44946": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant"
		},
		"44947": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "client"
		},
		"44948": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.client"
		},
		"44949": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.list"
		},
		"44950": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "ProductVariant.list"
		},
		"44951": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "query"
		},
		"44952": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/product-variant.ts",
			"qualifiedName": "headers"
		},
		"44953": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason"
		},
		"44954": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.__constructor"
		},
		"44955": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason"
		},
		"44956": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "client"
		},
		"44957": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.client"
		},
		"44958": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.list"
		},
		"44959": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "RefundReason.list"
		},
		"44960": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "query"
		},
		"44961": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/refund-reasons.ts",
			"qualifiedName": "headers"
		},
		"44962": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection"
		},
		"44963": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.__constructor"
		},
		"44964": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection"
		},
		"44965": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "client"
		},
		"44966": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.client"
		},
		"44967": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.create"
		},
		"44968": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.create"
		},
		"44969": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "body"
		},
		"44970": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "query"
		},
		"44971": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"44972": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.delete"
		},
		"44973": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.delete"
		},
		"44974": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "id"
		},
		"44975": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"44976": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.markAsPaid"
		},
		"44977": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "PaymentCollection.markAsPaid"
		},
		"44978": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "id"
		},
		"44979": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "body"
		},
		"44980": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "query"
		},
		"44981": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/payment-collection.ts",
			"qualifiedName": "headers"
		},
		"44982": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey"
		},
		"44983": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.__constructor"
		},
		"44984": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey"
		},
		"44985": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "client"
		},
		"44986": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.client"
		},
		"44987": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.list"
		},
		"44988": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.list"
		},
		"44989": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "queryParams"
		},
		"44990": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"44991": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.create"
		},
		"44992": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.create"
		},
		"44993": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"44994": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "query"
		},
		"44995": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"44996": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.revoke"
		},
		"44997": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.revoke"
		},
		"44998": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"44999": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"45000": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.retrieve"
		},
		"45001": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.retrieve"
		},
		"45002": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"45003": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"45004": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.update"
		},
		"45005": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.update"
		},
		"45006": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"45007": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"45008": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "query"
		},
		"45009": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"45010": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.delete"
		},
		"45011": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.delete"
		},
		"45012": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"45013": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"45014": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.batchSalesChannels"
		},
		"45015": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "ApiKey.batchSalesChannels"
		},
		"45016": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "id"
		},
		"45017": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "body"
		},
		"45018": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/api-key.ts",
			"qualifiedName": "headers"
		},
		"45019": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution"
		},
		"45020": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.__constructor"
		},
		"45021": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution"
		},
		"45022": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "client"
		},
		"45023": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.client"
		},
		"45024": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.list"
		},
		"45025": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.list"
		},
		"45026": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "queryParams"
		},
		"45027": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "headers"
		},
		"45028": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.retrieve"
		},
		"45029": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "WorkflowExecution.retrieve"
		},
		"45030": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "id"
		},
		"45031": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/workflow-execution.ts",
			"qualifiedName": "headers"
		},
		"45032": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation"
		},
		"45033": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.__constructor"
		},
		"45034": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation"
		},
		"45035": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "client"
		},
		"45036": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.client"
		},
		"45037": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.retrieve"
		},
		"45038": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.retrieve"
		},
		"45039": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"45040": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"45041": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"45042": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.list"
		},
		"45043": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.list"
		},
		"45044": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"45045": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"45046": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.create"
		},
		"45047": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.create"
		},
		"45048": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "body"
		},
		"45049": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"45050": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"45051": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.update"
		},
		"45052": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.update"
		},
		"45053": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"45054": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "body"
		},
		"45055": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "query"
		},
		"45056": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"45057": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.delete"
		},
		"45058": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "Reservation.delete"
		},
		"45059": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "id"
		},
		"45060": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/reservation.ts",
			"qualifiedName": "headers"
		},
		"45061": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup"
		},
		"45062": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.__constructor"
		},
		"45063": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup"
		},
		"45064": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "client"
		},
		"45065": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.client"
		},
		"45066": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.retrieve"
		},
		"45067": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.retrieve"
		},
		"45068": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"45069": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"45070": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"45071": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.list"
		},
		"45072": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.list"
		},
		"45073": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"45074": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"45075": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.create"
		},
		"45076": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.create"
		},
		"45077": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"45078": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"45079": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"45080": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.update"
		},
		"45081": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.update"
		},
		"45082": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"45083": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"45084": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "query"
		},
		"45085": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"45086": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.delete"
		},
		"45087": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.delete"
		},
		"45088": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"45089": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"45090": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.batchCustomers"
		},
		"45091": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "CustomerGroup.batchCustomers"
		},
		"45092": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "id"
		},
		"45093": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "body"
		},
		"45094": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/customer-group.ts",
			"qualifiedName": "headers"
		},
		"45095": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion"
		},
		"45096": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.__constructor"
		},
		"45097": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion"
		},
		"45098": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "client"
		},
		"45099": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.client"
		},
		"45100": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.retrieve"
		},
		"45101": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.retrieve"
		},
		"45102": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"45103": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"45104": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45105": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.list"
		},
		"45106": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.list"
		},
		"45107": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"45108": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45109": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.create"
		},
		"45110": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.create"
		},
		"45111": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"45112": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45113": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.update"
		},
		"45114": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.update"
		},
		"45115": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"45116": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"45117": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45118": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.delete"
		},
		"45119": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.delete"
		},
		"45120": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"45121": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45122": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.addRules"
		},
		"45123": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.addRules"
		},
		"45124": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"45125": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"45126": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"45127": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45128": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.updateRules"
		},
		"45129": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.updateRules"
		},
		"45130": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"45131": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"45132": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"45133": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45134": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.removeRules"
		},
		"45135": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.removeRules"
		},
		"45136": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"45137": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"45138": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "payload"
		},
		"45139": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45140": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRules"
		},
		"45141": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRules"
		},
		"45142": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "id"
		},
		"45143": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"45144": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"45145": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45146": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleAttributes"
		},
		"45147": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleAttributes"
		},
		"45148": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"45149": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "promotionType"
		},
		"45150": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "applicationMethodTargetType"
		},
		"45151": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45152": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleValues"
		},
		"45153": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "Promotion.listRuleValues"
		},
		"45154": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleType"
		},
		"45155": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "ruleValue"
		},
		"45156": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "query"
		},
		"45157": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/promotion.ts",
			"qualifiedName": "headers"
		},
		"45158": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "TaxProvider"
		},
		"45159": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "TaxProvider.__constructor"
		},
		"45160": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "TaxProvider"
		},
		"45161": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "client"
		},
		"45162": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "TaxProvider.client"
		},
		"45163": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "TaxProvider.list"
		},
		"45164": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "TaxProvider.list"
		},
		"45165": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "query"
		},
		"45166": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/tax-provider.ts",
			"qualifiedName": "headers"
		},
		"45167": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign"
		},
		"45168": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.__constructor"
		},
		"45169": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign"
		},
		"45170": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "client"
		},
		"45171": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.client"
		},
		"45172": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.retrieve"
		},
		"45173": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.retrieve"
		},
		"45174": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"45175": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "query"
		},
		"45176": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"45177": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.list"
		},
		"45178": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.list"
		},
		"45179": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "query"
		},
		"45180": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"45181": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.create"
		},
		"45182": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.create"
		},
		"45183": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"45184": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"45185": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.update"
		},
		"45186": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.update"
		},
		"45187": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"45188": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"45189": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"45190": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.delete"
		},
		"45191": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.delete"
		},
		"45192": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"45193": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"45194": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.batchPromotions"
		},
		"45195": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "Campaign.batchPromotions"
		},
		"45196": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "id"
		},
		"45197": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "payload"
		},
		"45198": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/campaign.ts",
			"qualifiedName": "headers"
		},
		"45199": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin"
		},
		"45200": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin.__constructor"
		},
		"45201": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin"
		},
		"45202": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "client"
		},
		"45203": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin.client"
		},
		"45204": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin.list"
		},
		"45205": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "Plugin.list"
		},
		"45206": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/plugin.ts",
			"qualifiedName": "headers"
		},
		"45207": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views"
		},
		"45208": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.__constructor"
		},
		"45209": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views"
		},
		"45210": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "client"
		},
		"45211": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.client"
		},
		"45212": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.columns"
		},
		"45213": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.columns"
		},
		"45214": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "entity"
		},
		"45215": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "query"
		},
		"45216": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "headers"
		},
		"45217": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.listConfigurations"
		},
		"45218": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.listConfigurations"
		},
		"45219": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "entity"
		},
		"45220": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "query"
		},
		"45221": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "headers"
		},
		"45222": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.createConfiguration"
		},
		"45223": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.createConfiguration"
		},
		"45224": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "entity"
		},
		"45225": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "body"
		},
		"45226": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "headers"
		},
		"45227": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.retrieveConfiguration"
		},
		"45228": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.retrieveConfiguration"
		},
		"45229": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "entity"
		},
		"45230": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "id"
		},
		"45231": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "query"
		},
		"45232": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "headers"
		},
		"45233": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.updateConfiguration"
		},
		"45234": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.updateConfiguration"
		},
		"45235": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "entity"
		},
		"45236": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "id"
		},
		"45237": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "body"
		},
		"45238": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "headers"
		},
		"45239": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.deleteConfiguration"
		},
		"45240": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.deleteConfiguration"
		},
		"45241": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "entity"
		},
		"45242": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "id"
		},
		"45243": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "headers"
		},
		"45244": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.retrieveActiveConfiguration"
		},
		"45245": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.retrieveActiveConfiguration"
		},
		"45246": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "entity"
		},
		"45247": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "headers"
		},
		"45248": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "__type"
		},
		"45249": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "__type.active_view_configuration_id"
		},
		"45250": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.setActiveConfiguration"
		},
		"45251": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "Views.setActiveConfiguration"
		},
		"45252": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "entity"
		},
		"45253": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "body"
		},
		"45254": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "__type"
		},
		"45255": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "__type.view_configuration_id"
		},
		"45256": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "headers"
		},
		"45257": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "__type"
		},
		"45258": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/admin/views.ts",
			"qualifiedName": "__type.success"
		},
		"45259": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client"
		},
		"45260": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.__constructor"
		},
		"45261": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client"
		},
		"45262": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "config"
		},
		"45263": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch_"
		},
		"45264": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.config"
		},
		"45265": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.logger"
		},
		"45266": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.DEFAULT_JWT_STORAGE_KEY"
		},
		"45267": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.token"
		},
		"45268": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch"
		},
		"45269": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetch"
		},
		"45270": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "T"
		},
		"45271": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "input"
		},
		"45272": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "init"
		},
		"45273": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetchStream"
		},
		"45274": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.fetchStream"
		},
		"45275": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "input"
		},
		"45276": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "init"
		},
		"45277": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken"
		},
		"45278": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken"
		},
		"45279": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "token"
		},
		"45280": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getToken"
		},
		"45281": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getToken"
		},
		"45282": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken"
		},
		"45283": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken"
		},
		"45284": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken_"
		},
		"45285": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.clearToken_"
		},
		"45286": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.initClient"
		},
		"45287": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.initClient"
		},
		"45288": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getApiKeyHeader_"
		},
		"45289": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getApiKeyHeader_"
		},
		"45290": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"45291": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"45292": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.Authorization"
		},
		"45293": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getPublishableKeyHeader_"
		},
		"45294": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getPublishableKeyHeader_"
		},
		"45295": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"45296": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"45297": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.x-publishable-api-key"
		},
		"45298": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getJwtHeader_"
		},
		"45299": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getJwtHeader_"
		},
		"45300": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"45301": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type"
		},
		"45302": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__type.Authorization"
		},
		"45303": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken_"
		},
		"45304": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.setToken_"
		},
		"45305": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "token"
		},
		"45306": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getToken_"
		},
		"45307": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getToken_"
		},
		"45308": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getTokenStorageInfo_"
		},
		"45309": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.getTokenStorageInfo_"
		},
		"45310": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object"
		},
		"45311": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object.storageMethod"
		},
		"45312": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "__object.storageKey"
		},
		"45313": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.throwError_"
		},
		"45314": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "Client.throwError_"
		},
		"45315": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/client.ts",
			"qualifiedName": "message"
		},
		"45316": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ClientHeaders"
		},
		"45317": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45318": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.tags"
		},
		"45319": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Config"
		},
		"45320": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45321": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.baseUrl"
		},
		"45322": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.globalHeaders"
		},
		"45323": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.publishableKey"
		},
		"45324": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.apiKey"
		},
		"45325": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.auth"
		},
		"45326": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45327": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.type"
		},
		"45328": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.jwtTokenStorageKey"
		},
		"45329": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.jwtTokenStorageMethod"
		},
		"45330": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.fetchCredentials"
		},
		"45331": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.storage"
		},
		"45332": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.logger"
		},
		"45333": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.debug"
		},
		"45334": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ClientFetch"
		},
		"45335": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45336": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45337": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "input"
		},
		"45338": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "init"
		},
		"45339": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Logger"
		},
		"45340": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45341": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.error"
		},
		"45342": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45343": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45344": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"45345": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.warn"
		},
		"45346": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45347": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45348": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"45349": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.info"
		},
		"45350": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45351": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45352": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"45353": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.debug"
		},
		"45354": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45355": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45356": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "messages"
		},
		"45357": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchArgs"
		},
		"45358": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45359": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"45360": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.headers"
		},
		"45361": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type.body"
		},
		"45362": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse"
		},
		"45363": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse.stream"
		},
		"45364": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchStreamResponse.abort"
		},
		"45365": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45366": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "__type"
		},
		"45367": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage"
		},
		"45368": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.getItem"
		},
		"45369": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.getItem"
		},
		"45370": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"45371": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.setItem"
		},
		"45372": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.setItem"
		},
		"45373": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"45374": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "value"
		},
		"45375": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.removeItem"
		},
		"45376": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "CustomStorage.removeItem"
		},
		"45377": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "key"
		},
		"45378": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchInput"
		},
		"45379": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage"
		},
		"45380": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.comment"
		},
		"45381": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.event"
		},
		"45382": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.data"
		},
		"45383": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.id"
		},
		"45384": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "ServerSentEventMessage.retry"
		},
		"45385": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "Awaitable"
		},
		"45386": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "T"
		},
		"45387": {
			"sourceFileName": "../../../../packages/core/js-sdk/src/types.ts",
			"qualifiedName": "FetchParams"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/js-sdk/src/admin/index.ts",
			"2": "../../../../packages/core/js-sdk/src/auth/index.ts",
			"3": "../../../../packages/core/js-sdk/src/store/index.ts"
		},
		"reflections": {
			"1": 43012,
			"2": 43063,
			"3": 43108
		}
	}
}
