{
	"id": 59291,
	"name": "workflows",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 60764,
			"name": "IDistributedTransactionStorage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60765,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60766,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60767,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60768,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 59695,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reference",
												"target": 60928,
												"name": "StepFeatures",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 60769,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 60770,
															"name": "isCancelling",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
																	"line": 13,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																60770
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
															"line": 12,
															"character": 52
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 60807,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60771,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60772,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60773,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60774,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60807,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60775,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 60776,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60893,
										"name": "TransactionOptions",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60777,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60778,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60779,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60780,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60781,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 60782,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60783,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60784,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60785,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60786,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60787,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60788,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60789,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60790,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 60791,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60792,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60793,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60794,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60795,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60796,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 60797,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60798,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60799,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60800,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60801,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60802,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60803,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60804,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60805,
					"name": "clearExpiredExecutions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60806,
							"name": "clearExpiredExecutions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						60765,
						60771,
						60777,
						60783,
						60787,
						60792,
						60798,
						60801,
						60805
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
					"line": 11,
					"character": 17
				}
			]
		},
		{
			"id": 59846,
			"name": "TransactionMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59847,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59848,
							"name": "model_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59849,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59850,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59851,
							"name": "action_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60142,
								"name": "TransactionHandlerType",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 59852,
							"name": "attempt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59853,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59848,
								59849,
								59850,
								59851,
								59852,
								59853
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 14,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 59870,
			"name": "TransactionContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59876,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing the initial payload."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 59877,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Invoke handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 59878,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Compensate handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 59871,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59872,
							"name": "TransactionContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59873,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 59874,
									"name": "invoke",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 59875,
									"name": "compensate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59870,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59871
					]
				},
				{
					"title": "Properties",
					"children": [
						59876,
						59877,
						59878
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 28,
					"character": 21
				}
			]
		},
		{
			"id": 60847,
			"name": "TransactionStepError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 60853,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60854,
					"name": "handlerType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60142,
						"name": "TransactionHandlerType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 60855,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60848,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60849,
							"name": "TransactionStepError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60850,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60851,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60142,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60852,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60847,
								"name": "TransactionStepError",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60848
					]
				},
				{
					"title": "Properties",
					"children": [
						60853,
						60854,
						60855
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 34,
					"character": 21
				}
			]
		},
		{
			"id": 60807,
			"name": "TransactionCheckpoint",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 60813,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60816,
						"name": "TransactionFlow",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60814,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59870,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60815,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 60847,
							"name": "TransactionStepError",
							"package": "@medusajs/orchestration"
						}
					}
				},
				{
					"id": 60808,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60809,
							"name": "TransactionCheckpoint",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 44,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60810,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60816,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60811,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59870,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60812,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60847,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60807,
								"name": "TransactionCheckpoint",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60808
					]
				},
				{
					"title": "Properties",
					"children": [
						60813,
						60814,
						60815
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 40,
					"character": 21
				}
			]
		},
		{
			"id": 60919,
			"name": "TransactionPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 60925,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59846,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60926,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 60927,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59870,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60920,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60921,
							"name": "TransactionPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60922,
									"name": "metadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The metadata of the transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59846,
										"name": "TransactionMetadata",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60923,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initial payload data to begin a transation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 60924,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object gathering responses of all steps flagged with saveResponse."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59870,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60919,
								"name": "TransactionPayload",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60920
					]
				},
				{
					"title": "Properties",
					"children": [
						60925,
						60926,
						60927
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 46,
					"character": 21
				}
			]
		},
		{
			"id": 60310,
			"name": "DistributedTransaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DistributedTransaction represents a distributed transaction, which is a transaction that is composed of multiple steps that are executed in a specific order."
					}
				]
			},
			"children": [
				{
					"id": 60330,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60331,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60332,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60755,
						"name": "TransactionStepHandler",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60333,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60334,
					"name": "modelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60335,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60336,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60337,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 68,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60338,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 69,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60311,
					"name": "keyValueStore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 70,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60312,
					"name": "setStorage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 71,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60313,
							"name": "setStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 71,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60314,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60764,
										"name": "IDistributedTransactionStorage",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60315,
					"name": "keyPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 72,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60323,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60324,
							"name": "DistributedTransaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60325,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60816,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60326,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60755,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60327,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 60328,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60847,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								},
								{
									"id": 60329,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59870,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60310,
								"name": "DistributedTransaction",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 60339,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 74,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60340,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60816,
								"name": "TransactionFlow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60341,
					"name": "getContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60342,
							"name": "getContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59870,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60343,
					"name": "getErrors",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60344,
							"name": "getErrors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 76,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60345,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60142,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60847,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 60346,
					"name": "addError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60347,
							"name": "addError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 77,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60348,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60349,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60142,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60350,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60351,
					"name": "addResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 78,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60352,
							"name": "addResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 78,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60353,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60354,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60142,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60355,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60356,
					"name": "hasFinished",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60357,
							"name": "hasFinished",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 79,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60358,
					"name": "getState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 80,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60359,
							"name": "getState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60856,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 60360,
					"name": "isPartiallyCompleted",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 81,
							"character": 8
						}
					],
					"getSignature": {
						"id": 60361,
						"name": "isPartiallyCompleted",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
								"line": 81,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 60362,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 82,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60363,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 82,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60364,
					"name": "canRevert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 83,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60365,
							"name": "canRevert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 83,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60366,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60367,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60368,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60369,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 60370,
					"name": "saveCheckpoint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60371,
							"name": "saveCheckpoint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 86,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60372,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 60807,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60316,
					"name": "loadTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 87,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60317,
							"name": "loadTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 87,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60318,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60319,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60320,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60321,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60322,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 88,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60322
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 87,
													"character": 77
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 60807,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60373,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 90,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60374,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 90,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60375,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60376,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60377,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60378,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 91,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60379,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60380,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60381,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 92,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60382,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60383,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 93,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60384,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 93,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60385,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 94,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60386,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60387,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60388,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60389,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 95,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60390,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60391,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60392,
					"name": "setTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 96,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60393,
							"name": "setTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60394,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60395,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60396,
													"name": "key",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 97,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60396
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 96,
													"character": 26
												}
											]
										}
									}
								},
								{
									"id": 60397,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60398,
					"name": "getTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 99,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60399,
							"name": "getTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 99,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60400,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60401,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60402,
													"name": "key",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 100,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60402
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 99,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 60403,
					"name": "hasTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 102,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60404,
							"name": "hasTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 102,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60405,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60406,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60407,
													"name": "key",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 103,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60407
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 102,
													"character": 26
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60323
					]
				},
				{
					"title": "Properties",
					"children": [
						60330,
						60331,
						60332,
						60333,
						60334,
						60335,
						60336,
						60337,
						60338,
						60311,
						60315
					]
				},
				{
					"title": "Accessors",
					"children": [
						60360
					]
				},
				{
					"title": "Methods",
					"children": [
						60312,
						60339,
						60341,
						60343,
						60346,
						60351,
						60356,
						60358,
						60362,
						60364,
						60366,
						60368,
						60370,
						60316,
						60373,
						60377,
						60380,
						60383,
						60385,
						60389,
						60392,
						60398,
						60403
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 60,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 60111,
			"name": "BaseStepErrror",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 60117,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60112,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60113,
							"name": "BaseStepErrror",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60114,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 60115,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60116,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60111,
								"name": "BaseStepErrror",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 60118,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60119,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60112
					]
				},
				{
					"title": "Properties",
					"children": [
						60117
					]
				},
				{
					"title": "Methods",
					"children": [
						60118
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 1,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 59703,
					"name": "SkipStepResponse"
				}
			]
		},
		{
			"id": 59703,
			"name": "SkipStepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59711,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 60117,
						"name": "BaseStepErrror.#private"
					}
				},
				{
					"id": 59712,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59713,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 60119,
								"name": "BaseStepErrror.getStepResponse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 60118,
						"name": "BaseStepErrror.getStepResponse"
					}
				},
				{
					"id": 59704,
					"name": "isSkipStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 11,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 59705,
							"name": "isSkipStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 11,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 59706,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 59703,
									"name": "SkipStepResponse",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 59707,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59708,
							"name": "SkipStepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59709,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59710,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59703,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": 60113,
								"name": "BaseStepErrror.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 60112,
						"name": "BaseStepErrror.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59707
					]
				},
				{
					"title": "Properties",
					"children": [
						59711
					]
				},
				{
					"title": "Methods",
					"children": [
						59712,
						59704
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 10,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 60111,
					"name": "BaseStepErrror",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 60120,
			"name": "InternalStep",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"children": [
				{
					"id": 60121,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 60120,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60120,
									"name": "InternalStep",
									"package": "@medusajs/orchestration"
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.next"
					}
				},
				{
					"id": 60122,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60123,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 60120,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						]
					}
				},
				{
					"id": 60124,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.uuid"
					}
				},
				{
					"id": 60125,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.action"
					}
				},
				{
					"id": 60126,
					"name": "continueOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.continueOnPermanentFailure"
					}
				},
				{
					"id": 60127,
					"name": "skipOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.skipOnPermanentFailure"
					}
				},
				{
					"id": 60128,
					"name": "noCompensation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, no compensation action will be triggered for this step in case of a failure."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noCompensation"
					}
				},
				{
					"id": 60129,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.maxRetries"
					}
				},
				{
					"id": 60130,
					"name": "autoRetry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the step will be retried automatically in case of a temporary failure.\nThe default is true."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.autoRetry"
					}
				},
				{
					"id": 60131,
					"name": "retryInterval",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryInterval"
					}
				},
				{
					"id": 60132,
					"name": "retryIntervalAwaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryIntervalAwaiting"
					}
				},
				{
					"id": 60133,
					"name": "maxAwaitingRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of times to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.maxAwaitingRetries"
					}
				},
				{
					"id": 60134,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.timeout"
					}
				},
				{
					"id": 60135,
					"name": "async",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.async"
					}
				},
				{
					"id": 60136,
					"name": "nested",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It flags where the step contains a sub transaction inside itself."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.nested"
					}
				},
				{
					"id": 60137,
					"name": "backgroundExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.backgroundExecution"
					}
				},
				{
					"id": 60138,
					"name": "compensateAsync",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 81,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.compensateAsync"
					}
				},
				{
					"id": 60139,
					"name": "noWait",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noWait"
					}
				},
				{
					"id": 60140,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the response of this step will be stored.\nDefault is true."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 90,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.saveResponse"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60121,
						60122,
						60123,
						60124,
						60125,
						60126,
						60127,
						60128,
						60129,
						60130,
						60131,
						60132,
						60133,
						60134,
						60135,
						60136,
						60137,
						60138,
						60139,
						60140
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 2,
					"character": 10
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 59675,
					"name": "TransactionStepsDefinition",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 59732,
			"name": "OrchestratorBuilder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59736,
					"name": "steps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 60120,
						"name": "InternalStep",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59737,
					"name": "hasChanges_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 9,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59738,
					"name": "hasChanges",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 10,
							"character": 8
						}
					],
					"getSignature": {
						"id": 59739,
						"name": "hasChanges",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
								"line": 10,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 59733,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59734,
							"name": "OrchestratorBuilder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59735,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59675,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59740,
					"name": "load",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59741,
							"name": "load",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59742,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59675,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59743,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59744,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59745,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59746,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59747,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59748,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59749,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59750,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59751,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59752,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59753,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59754,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59755,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59756,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59757,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59758,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59759,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59760,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59761,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59762,
					"name": "appendTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 17,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59763,
							"name": "appendTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 17,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59764,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 60120,
												"name": "InternalStep",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 59765,
									"name": "newStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59766,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59767,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59768,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59769,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59770,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59771,
					"name": "move",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 19,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59772,
							"name": "move",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59773,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59774,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59775,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59776,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59777,
													"name": "runInParallel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 59778,
													"name": "mergeNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 21,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59777,
														59778
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
													"line": 19,
													"character": 95
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59779,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59780,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59781,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59782,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59783,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59784,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59785,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59786,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59787,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59788,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59789,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59790,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59791,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59792,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59793,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59794,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59795,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59796,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59797,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59798,
					"name": "findStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 28,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59799,
							"name": "findStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 28,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59800,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59801,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 59802,
					"name": "findOrThrowStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 29,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59803,
							"name": "findOrThrowStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 29,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59804,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59805,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60120,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59806,
					"name": "findParentStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 30,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59807,
							"name": "findParentStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 30,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59808,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59809,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 59810,
					"name": "findLastStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 31,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59811,
							"name": "findLastStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 31,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59812,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60120,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59813,
					"name": "updateDepths",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 32,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59814,
							"name": "updateDepths",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 32,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 59815,
									"name": "startingStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60120,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59816,
									"name": "parent",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 59817,
									"name": "incr",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59818,
									"name": "beginFrom",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59819,
					"name": "build",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59820,
							"name": "build",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59675,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59733
					]
				},
				{
					"title": "Properties",
					"children": [
						59736,
						59737
					]
				},
				{
					"title": "Accessors",
					"children": [
						59738
					]
				},
				{
					"title": "Methods",
					"children": [
						59740,
						59743,
						59747,
						59752,
						59757,
						59762,
						59766,
						59771,
						59779,
						59783,
						59787,
						59791,
						59795,
						59798,
						59802,
						59806,
						59810,
						59813,
						59819
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 7,
					"character": 21
				}
			]
		},
		{
			"id": 60513,
			"name": "TransactionOrchestrator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionOrchestrator is responsible for managing and executing distributed transactions.\nIt is based on a single transaction definition, which is used to execute all the transaction steps"
					}
				]
			},
			"children": [
				{
					"id": 60583,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60514,
					"name": "ROOT_STEP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 12,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60515,
					"name": "DEFAULT_TTL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 13,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60584,
					"name": "invokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60585,
					"name": "compensateSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60586,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60587,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60516,
					"name": "DEFAULT_RETRIES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 18,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60517,
					"name": "workflowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 19,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60518,
					"name": "getWorkflowOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 20,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60519,
							"name": "getWorkflowOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 20,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60520,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60893,
								"name": "TransactionOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60521,
					"name": "traceTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow transaction for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60522,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 24,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 60523,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 24,
											"character": 30
										}
									],
									"parameters": [
										{
											"id": 60524,
											"name": "transactionResume",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60525,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 24,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 60526,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 24,
																	"character": 50
																}
															],
															"parameters": [
																{
																	"id": 60527,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 60528,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60529,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 60530,
															"name": "model_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 25,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60531,
															"name": "transaction_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 26,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60532,
															"name": "flow_metadata",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 27,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 60533,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 60534,
																					"name": "eventGroupId",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 232,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 60535,
																					"name": "parentIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 233,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 60536,
																					"name": "sourcePath",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 234,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 60537,
																					"name": "preventReleaseEvents",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 235,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 60538,
																					"name": "parentStepIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 236,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						60534,
																						60535,
																						60536,
																						60537,
																						60538
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																					"line": 231,
																					"character": 15
																				}
																			],
																			"indexSignatures": [
																				{
																					"id": 60539,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 237,
																							"character": 8
																						}
																					],
																					"parameters": [
																						{
																							"id": 60540,
																							"name": "key",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																60530,
																60531,
																60532
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 24,
															"character": 95
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 60541,
					"name": "traceStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow steps for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 32,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60542,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 32,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 60543,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 32,
											"character": 23
										}
									],
									"parameters": [
										{
											"id": 60544,
											"name": "handler",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60545,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 32,
															"character": 33
														}
													],
													"signatures": [
														{
															"id": 60546,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 32,
																	"character": 33
																}
															],
															"parameters": [
																{
																	"id": 60547,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 60548,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 60549,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 60550,
															"name": "action",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 33,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60551,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 34,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "invoke"
																	},
																	{
																		"type": "literal",
																		"value": "compensate"
																	}
																]
															}
														},
														{
															"id": 60552,
															"name": "step_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 35,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60553,
															"name": "step_uuid",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 36,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 60554,
															"name": "attempts",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 37,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 60555,
															"name": "failures",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 38,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 60556,
															"name": "async",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 39,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 60557,
															"name": "idempotency_key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 40,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																60550,
																60551,
																60552,
																60553,
																60554,
																60555,
																60556,
																60557
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 32,
															"character": 77
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 60575,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60576,
							"name": "TransactionOrchestrator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60577,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60578,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60579,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60580,
													"name": "definition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59675,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60581,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 45,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59695,
														"name": "TransactionModelOptions",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60582,
													"name": "isClone",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 46,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60579,
														60580,
														60581,
														60582
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 42,
													"character": 55
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60513,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 60558,
					"name": "isExpectedError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 48,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60559,
					"name": "clone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 49,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60560,
							"name": "clone",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 49,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60561,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60513,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 60513,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60562,
					"name": "SEPARATOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 50,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60563,
					"name": "getKeyName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 51,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 60564,
							"name": "getKeyName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 51,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 60565,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 60588,
					"name": "getPreviousStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 52,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60589,
					"name": "getOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60590,
							"name": "getOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59695,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60591,
					"name": "getInvokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 54,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60592,
					"name": "getCompensationSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60593,
					"name": "canMoveForward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60594,
					"name": "canMoveBackward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60595,
					"name": "canContinue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60596,
					"name": "hasExpired",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 59,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60597,
					"name": "checkTransactionTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 60,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60598,
					"name": "checkStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 61,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60599,
					"name": "checkAllSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60600,
					"name": "computeCurrentTransactionState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 63,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60601,
					"name": "flagStepsToRevert",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 64,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60566,
					"name": "setStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 65,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60567,
					"name": "retryStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 66,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60568,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 67,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60569,
					"name": "setStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 68,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60570,
					"name": "setStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 69,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60602,
					"name": "executeNext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 70,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60603,
					"name": "finalizeTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Finalize the transaction when all steps are complete"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 74,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60604,
					"name": "prepareStepForExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare a step for execution by setting state and incrementing attempts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 78,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60605,
					"name": "createStepPayload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the payload for a step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 82,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60606,
					"name": "prepareHandlerArgs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare handler arguments for step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 86,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60607,
					"name": "createStepExecutionPromise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the step execution promise with optional tracing"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 90,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60608,
					"name": "executeSyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute a synchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 94,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60609,
					"name": "executeAsyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute an asynchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 98,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60610,
					"name": "handleStepExpiration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if step or transaction has expired and handle timeouts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 102,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60611,
					"name": "handleStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle successful step completion"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 106,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60612,
					"name": "handleStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle step failure"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 110,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60613,
					"name": "resume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 115,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60614,
							"name": "resume",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Start a new transaction or resume a transaction that has been previously started"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60615,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to resume"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60616,
					"name": "cancelTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 120,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60617,
							"name": "cancelTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cancel and revert a transaction compensating all its executed steps. It can be an ongoing transaction or a completed one"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 120,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60618,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to be reverted"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60619,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60620,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60621,
													"name": "preventExecuteNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 121,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60621
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 120,
													"character": 73
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60622,
					"name": "parseFlowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 123,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60623,
					"name": "createTransactionFlow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 124,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60571,
					"name": "loadTransactionById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 125,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60572,
					"name": "buildSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 126,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60624,
					"name": "beginTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 133,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60625,
							"name": "beginTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 133,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60626,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60627,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60628,
													"name": "transactionId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 134,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60629,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 135,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60755,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60630,
													"name": "payload",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 136,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 60631,
													"name": "flowMetadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 137,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60632,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60633,
																	"name": "eventGroupId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 232,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 60634,
																	"name": "parentIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 233,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 60635,
																	"name": "sourcePath",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 234,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 60636,
																	"name": "preventReleaseEvents",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 235,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 60637,
																	"name": "parentStepIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 236,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60633,
																		60634,
																		60635,
																		60636,
																		60637
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 231,
																	"character": 15
																}
															],
															"indexSignatures": [
																{
																	"id": 60638,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 237,
																			"character": 8
																		}
																	],
																	"parameters": [
																		{
																			"id": 60639,
																			"name": "key",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 60640,
													"name": "context",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 138,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59854,
														"name": "Context",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 60641,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 139,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60642,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 139,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 60643,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 139,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 60644,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60310,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60628,
														60629,
														60630,
														60631,
														60640,
														60641
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 133,
													"character": 90
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60645,
					"name": "retrieveExistingTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 145,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60646,
							"name": "retrieveExistingTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an existing transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 145,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60647,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "unique identifier of the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60648,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function to handle action of the transaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 60755,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60649,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60650,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60651,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 146,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60651
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 145,
													"character": 98
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60573,
					"name": "getStepByAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 148,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60574,
					"name": "getTransactionAndStepFromIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 149,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60652,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 155,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60653,
							"name": "skipStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Skip the execution of a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 155,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60654,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60655,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60656,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 156,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60657,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 157,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60755,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60658,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 158,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60310,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60656,
														60657,
														60658
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 155,
													"character": 64
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60659,
					"name": "retryStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 166,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60660,
							"name": "retryStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Manually force a step to retry even if it is still in awaiting status"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 166,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60661,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60662,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60663,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 167,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60664,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 168,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60755,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60665,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 169,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60310,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60666,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 170,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60667,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 170,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 60668,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 170,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 60669,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60310,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60663,
														60664,
														60665,
														60666
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 166,
													"character": 73
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60670,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 178,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60671,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step success for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 178,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60672,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60673,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60674,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 179,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60675,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 180,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60755,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60676,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 181,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60310,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60677,
													"name": "response",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 182,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 60678,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 183,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60679,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 183,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 60680,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 183,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 60681,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60310,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60674,
														60675,
														60676,
														60677,
														60678
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 178,
													"character": 93
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60682,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 193,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60683,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step failure for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 193,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60684,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60685,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60686,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 194,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60687,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 195,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 60688,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 196,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60755,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60689,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 197,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60310,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 60690,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 198,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60691,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 198,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 60692,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 198,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 60693,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 60310,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"id": 60694,
													"name": "forcePermanentFailure",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 199,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60686,
														60687,
														60688,
														60689,
														60690,
														60694
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 193,
													"character": 113
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60575
					]
				},
				{
					"title": "Properties",
					"children": [
						60583,
						60514,
						60515,
						60584,
						60585,
						60586,
						60587,
						60516,
						60517,
						60521,
						60541,
						60558,
						60562,
						60588,
						60591,
						60592,
						60593,
						60594,
						60595,
						60596,
						60597,
						60598,
						60599,
						60600,
						60601,
						60566,
						60567,
						60568,
						60569,
						60570,
						60602,
						60603,
						60604,
						60605,
						60606,
						60607,
						60608,
						60609,
						60610,
						60611,
						60612,
						60622,
						60623,
						60571,
						60572,
						60573,
						60574
					]
				},
				{
					"title": "Methods",
					"children": [
						60518,
						60559,
						60563,
						60589,
						60613,
						60616,
						60624,
						60645,
						60652,
						60659,
						60670,
						60682
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
					"line": 10,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 60755,
			"name": "TransactionStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60756,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 5,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 60757,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 60758,
									"name": "actionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60759,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60142,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60760,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60919,
										"name": "TransactionPayload",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60761,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransactionType",
										"package": "@medusajs/orchestration",
										"qualifiedName": "DistributedTransaction"
									}
								},
								{
									"id": 60762,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60448,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60763,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60513,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 60448,
			"name": "TransactionStep",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionStep"
					}
				],
				"blockTags": [
					{
						"tag": "@classdesc",
						"content": [
							{
								"kind": "text",
								"text": "A class representing a single step in a transaction flow"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 60449,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 60450,
							"name": "TransactionStep",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 60448,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60451,
					"name": "stepFailed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "id - The id of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "depth - The depth of the step in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "definition - The definition of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "invoke - The current state and status of the invoke action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "compensate - The current state and status of the compensate action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "attempts - The number of attempts made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "failures - The number of failures encountered while executing the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "lastAttempt - The timestamp of the last attempt made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "hasScheduledRetry - A flag indicating if a retry has been scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "retryRescheduledAt - The timestamp of the last retry scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "next - The ids of the next steps in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "saveResponse - A flag indicating if the response of a step should be shared in the transaction context and available to subsequent steps - default is true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 25,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 60452,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60453,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60454,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60455,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59675,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60456,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60457,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60458,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 31,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 60876,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60459,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 32,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 60887,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60458,
										60459
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 30,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 60460,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60461,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60462,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 35,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 60876,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 60463,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 60887,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60462,
										60463
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 34,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 60464,
					"name": "attempts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60465,
					"name": "failures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60466,
					"name": "temporaryFailedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 60467,
					"name": "lastAttempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 60468,
					"name": "retryRescheduledAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 60469,
					"name": "hasScheduledRetry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 60470,
					"name": "timedOutAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 60471,
					"name": "startedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 60472,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 60473,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 60474,
					"name": "getStates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60475,
							"name": "getStates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60476,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60477,
											"name": "state",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 60876,
												"name": "TransactionStepState",
												"package": "@medusajs/utils"
											}
										},
										{
											"id": 60478,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 50,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 60887,
												"name": "TransactionStepStatus",
												"package": "@medusajs/utils"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60477,
												60478
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 48,
											"character": 17
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 60479,
					"name": "beginCompensation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60480,
							"name": "beginCompensation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60481,
					"name": "isCompensating",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60482,
							"name": "isCompensating",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60483,
					"name": "isInvoking",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 54,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60484,
							"name": "isInvoking",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 54,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60485,
					"name": "changeState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60486,
							"name": "changeState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60487,
									"name": "toState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60876,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60488,
					"name": "changeStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60489,
							"name": "changeStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 56,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60490,
									"name": "toStatus",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60887,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60491,
					"name": "hasRetryScheduled",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60492,
							"name": "hasRetryScheduled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60493,
					"name": "hasRetryInterval",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60494,
							"name": "hasRetryInterval",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60495,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60496,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60497,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60498,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 60499,
					"name": "canRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60500,
							"name": "canRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60501,
					"name": "hasAwaitingRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60502,
							"name": "hasAwaitingRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60503,
					"name": "canRetryAwaiting",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60504,
							"name": "canRetryAwaiting",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60505,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60506,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 64,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60507,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60856,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60508,
					"name": "canCompensate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60509,
							"name": "canCompensate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 65,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60510,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60856,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60511,
					"name": "canCancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 66,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60512,
							"name": "canCancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						60449
					]
				},
				{
					"title": "Properties",
					"children": [
						60451,
						60452,
						60453,
						60454,
						60455,
						60456,
						60460,
						60464,
						60465,
						60466,
						60467,
						60468,
						60469,
						60470,
						60471,
						60472,
						60473
					]
				},
				{
					"title": "Methods",
					"children": [
						60474,
						60479,
						60481,
						60483,
						60485,
						60488,
						60491,
						60493,
						60495,
						60497,
						60499,
						60501,
						60503,
						60505,
						60508,
						60511
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 10,
					"character": 21
				}
			]
		},
		{
			"id": 59675,
			"name": "TransactionStepsDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59676,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59677,
							"name": "uuid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59678,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59679,
							"name": "continueOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59680,
							"name": "skipOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 59681,
							"name": "noCompensation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, no compensation action will be triggered for this step in case of a failure."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59682,
							"name": "maxRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59683,
							"name": "autoRetry",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the step will be retried automatically in case of a temporary failure.\nThe default is true."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 43,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59684,
							"name": "retryInterval",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59685,
							"name": "retryIntervalAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59686,
							"name": "maxAwaitingRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of times to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59687,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59688,
							"name": "async",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59689,
							"name": "nested",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It flags where the step contains a sub transaction inside itself."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59690,
							"name": "backgroundExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 77,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59691,
							"name": "compensateAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 81,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59692,
							"name": "noWait",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59693,
							"name": "saveResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the response of this step will be stored.\nDefault is true."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 90,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59694,
							"name": "next",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 59675,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 59675,
											"name": "TransactionStepsDefinition",
											"package": "@medusajs/orchestration"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59677,
								59678,
								59679,
								59680,
								59681,
								59682,
								59683,
								59684,
								59685,
								59686,
								59687,
								59688,
								59689,
								59690,
								59691,
								59692,
								59693,
								59694
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 8,
							"character": 41
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 60120,
					"name": "InternalStep"
				}
			]
		},
		{
			"id": 59695,
			"name": "TransactionModelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the options for a transaction model, which are applicable to the entire workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 99,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59696,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59697,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The global timeout for the entire transaction workflow (in seconds)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 103,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59698,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the state of the transaction will be persisted.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 109,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59699,
							"name": "retentionTime",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of seconds that the workflow execution should be stored in the database.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59700,
							"name": "storeExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the execution details of each step will be stored."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "no longer needed."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 120,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59701,
							"name": "idempotent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will use the transaction ID as the key to ensure only-once execution"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 124,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59702,
							"name": "schedule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the workflow as a scheduled workflow that executes based on the cron configuration passed.\nThe value can either by a cron expression string, or an object that also allows to define the concurrency behavior."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 129,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 60103,
										"name": "SchedulerOptions",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59697,
								59698,
								59699,
								59700,
								59701,
								59702
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 99,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 60103,
			"name": "SchedulerOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 131,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 60104,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60105,
									"name": "concurrency",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Setting whether to allow concurrent executions (eg. if the previous execution is still running, should the new one be allowed to run or not)\nBy default concurrent executions are not allowed."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 136,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "allow"
											},
											{
												"type": "literal",
												"value": "forbid"
											}
										]
									}
								},
								{
									"id": 60106,
									"name": "numberOfExecutions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optionally limit the number of executions for the scheduled workflow. If not set, the workflow will run indefinitely."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 140,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60105,
										60106
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 131,
									"character": 31
								}
							]
						}
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 60107,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60108,
											"name": "cron",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cron expression to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 145,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60108
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 141,
											"character": 5
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 60109,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60110,
											"name": "interval",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The interval (in ms) to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 150,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60110
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 146,
											"character": 4
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 60227,
			"name": "DistributedTransactionEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 172,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60228,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60229,
							"name": "onBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 173,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60230,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 173,
											"character": 14
										}
									],
									"signatures": [
										{
											"id": 60231,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60232,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60233,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60234,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 174,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60234
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 173,
																	"character": 21
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60235,
							"name": "onResume",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 176,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60236,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 176,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 60237,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60238,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60239,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60240,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 177,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60240
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 176,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60241,
							"name": "onFinish",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 179,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60242,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 179,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 60243,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60244,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60245,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60246,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 180,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																},
																{
																	"id": 60247,
																	"name": "result",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 181,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																},
																{
																	"id": 60248,
																	"name": "errors",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 182,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60246,
																		60247,
																		60248
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 179,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60249,
							"name": "onTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 184,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60250,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 184,
											"character": 16
										}
									],
									"signatures": [
										{
											"id": 60251,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60252,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60253,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60254,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 185,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60254
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 184,
																	"character": 23
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60255,
							"name": "onStepBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 187,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60256,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 187,
											"character": 18
										}
									],
									"signatures": [
										{
											"id": 60257,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60258,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60259,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60260,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60448,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60261,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 189,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60260,
																		60261
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 187,
																	"character": 25
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60262,
							"name": "onStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 191,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60263,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 191,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 60264,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60265,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60266,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60267,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60448,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60268,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 193,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60267,
																		60268
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 191,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60269,
							"name": "onStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 195,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60270,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 195,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 60271,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60272,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60273,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60274,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 196,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60448,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60275,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 197,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60274,
																		60275
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 195,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60276,
							"name": "onStepAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 199,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60277,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 199,
											"character": 21
										}
									],
									"signatures": [
										{
											"id": 60278,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60279,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60280,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60281,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 200,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60448,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60282,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 201,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60281,
																		60282
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 199,
																	"character": 28
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60283,
							"name": "onCompensateBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 203,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60284,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 203,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 60285,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60286,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60287,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60288,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 204,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60288
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 203,
																	"character": 31
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60289,
							"name": "onCompensateStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 206,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60290,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 206,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 60291,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60292,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60293,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60294,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 207,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60448,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60295,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 208,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60294,
																		60295
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 206,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60296,
							"name": "onCompensateStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 210,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60297,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 210,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 60298,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60299,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60300,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60301,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 211,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60448,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60302,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 212,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60301,
																		60302
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 210,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 60303,
							"name": "onStepSkipped",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 214,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60304,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 214,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 60305,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60306,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 60307,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 60308,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 215,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60448,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 60309,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 216,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 60310,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		60308,
																		60309
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 214,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60229,
								60235,
								60241,
								60249,
								60255,
								60262,
								60269,
								60276,
								60283,
								60289,
								60296,
								60303
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 172,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 60928,
			"name": "StepFeatures",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 219,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60929,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60930,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 220,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60931,
							"name": "hasStepTimeouts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 221,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60932,
							"name": "hasRetriesTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 222,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60930,
								60931,
								60932
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 219,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 60893,
			"name": "TransactionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 224,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59695,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					},
					{
						"type": "reference",
						"target": 60928,
						"name": "StepFeatures",
						"package": "@medusajs/orchestration"
					}
				]
			}
		},
		{
			"id": 60816,
			"name": "TransactionFlow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 225,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60817,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60818,
							"name": "modelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 226,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60819,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 227,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59695,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60820,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 228,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59675,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60821,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 229,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60822,
							"name": "runId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 230,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60823,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60824,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60825,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 232,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60826,
											"name": "parentIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 233,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60827,
											"name": "sourcePath",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 234,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60828,
											"name": "preventReleaseEvents",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 235,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 60829,
											"name": "parentStepIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 236,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60825,
												60826,
												60827,
												60828,
												60829
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 231,
											"character": 15
										}
									],
									"indexSignatures": [
										{
											"id": 60830,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 237,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 60831,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 60832,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 239,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60833,
							"name": "hasFailedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 240,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60834,
							"name": "hasSkippedOnFailureSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 241,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60835,
							"name": "hasWaitingSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 242,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60836,
							"name": "hasSkippedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 243,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60837,
							"name": "hasRevertedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 244,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60838,
							"name": "timedOutAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 245,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 60839,
							"name": "startedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 246,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 60840,
							"name": "cancelledAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 247,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 60841,
							"name": "temporaryFailedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 248,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 60842,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 249,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60856,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 60843,
							"name": "steps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 250,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60844,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 250,
											"character": 11
										}
									],
									"indexSignatures": [
										{
											"id": 60845,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 251,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 60846,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 60448,
												"name": "TransactionStep",
												"package": "@medusajs/orchestration"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60818,
								60819,
								60820,
								60821,
								60822,
								60823,
								60832,
								60833,
								60834,
								60835,
								60836,
								60837,
								60838,
								60839,
								60840,
								60841,
								60842,
								60843
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 225,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 60223,
			"name": "StepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 5,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60224,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60225,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59671,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60226,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59671,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60225,
								60226
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 5,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 59915,
			"name": "LocalWorkflow",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59923,
					"name": "container_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 10,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 59825,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 59924,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 11,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59925,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 12,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 59732,
						"name": "OrchestratorBuilder",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59926,
					"name": "customOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 59695,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 59927,
					"name": "workflow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 14,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 60207,
						"name": "WorkflowDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59928,
					"name": "handlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 15,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 60223,
								"name": "StepHandler",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 59929,
					"name": "medusaContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 59854,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 59930,
					"name": "container",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 17,
							"character": 8
						},
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 18,
							"character": 8
						}
					],
					"getSignature": {
						"id": 59931,
						"name": "container",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 17,
								"character": 8
							}
						],
						"type": {
							"type": "reference",
							"target": 59825,
							"name": "MedusaContainer",
							"package": "@medusajs/types"
						}
					},
					"setSignature": {
						"id": 59932,
						"name": "container",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 18,
								"character": 8
							}
						],
						"parameters": [
							{
								"id": 59933,
								"name": "modulesLoaded",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 59825,
											"name": "MedusaContainer",
											"package": "@medusajs/types"
										},
										{
											"type": "array",
											"elementType": {
												"type": "reflection",
												"declaration": {
													"id": 59934,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 59935,
															"name": "__joinerConfig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 90,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 59879,
																"name": "ModuleJoinerConfig",
																"package": "@medusajs/types"
															}
														},
														{
															"id": 59936,
															"name": "__definition",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 91,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 59904,
																"name": "ModuleDefinition",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																59935,
																59936
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 89,
															"character": 37
														}
													]
												}
											}
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 59916,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59917,
							"name": "LocalWorkflow",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59918,
									"name": "workflowId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59919,
									"name": "modulesLoaded",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 59825,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 59920,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 59921,
																"name": "__joinerConfig",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 90,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 59879,
																	"name": "ModuleJoinerConfig",
																	"package": "@medusajs/types"
																}
															},
															{
																"id": 59922,
																"name": "__definition",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 91,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 59904,
																	"name": "ModuleDefinition",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	59921,
																	59922
																]
															}
														],
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 89,
																"character": 37
															}
														]
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59915,
								"name": "LocalWorkflow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59937,
					"name": "resolveContainer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 20,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59938,
					"name": "contextualizedMedusaModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59939,
					"name": "commit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 22,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 59940,
							"name": "commit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59941,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59942,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59675,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59943,
					"name": "registerEventCallbacks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59944,
					"name": "run",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59945,
							"name": "run",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59946,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59947,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 59948,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59854,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 59949,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60227,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59950,
									"name": "flowMetadata",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59951,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59952,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 232,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59953,
													"name": "parentIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 233,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59954,
													"name": "sourcePath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 234,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59955,
													"name": "preventReleaseEvents",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 235,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 59956,
													"name": "parentStepIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 236,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59952,
														59953,
														59954,
														59955,
														59956
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 231,
													"character": 15
												}
											],
											"indexSignatures": [
												{
													"id": 59957,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 237,
															"character": 8
														}
													],
													"parameters": [
														{
															"id": 59958,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59959,
					"name": "getRunningTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59960,
							"name": "getRunningTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59961,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59962,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59854,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59963,
					"name": "cancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59964,
							"name": "cancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59965,
									"name": "transactionOrTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 60310,
												"name": "DistributedTransaction",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 59966,
									"name": "_",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 59967,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59854,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 59968,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60227,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59969,
					"name": "retryStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59970,
							"name": "retryStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59971,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59972,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59854,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 59973,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60227,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59974,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59975,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59976,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59977,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 59978,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59854,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 59979,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60227,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59980,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59981,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59982,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59983,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 59984,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59854,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 59985,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60227,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59986,
									"name": "forcePermanentFailure",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 60310,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59987,
					"name": "setOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59988,
							"name": "setOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59989,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59695,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 59990,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59991,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59992,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59993,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60223,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59994,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59995,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59996,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 34,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59997,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59998,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59999,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60223,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60000,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60001,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60002,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 35,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60003,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60004,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60005,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60223,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60006,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60007,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60008,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60009,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60010,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60011,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60223,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60012,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60013,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60014,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60015,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60016,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60017,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60223,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60018,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59675,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60019,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60020,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60021,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60022,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60023,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60024,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 39,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60025,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60026,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60027,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60028,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60029,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60030,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60031,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60032,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60033,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60034,
									"name": "parentSteps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60035,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60036,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60037,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 60038,
					"name": "assertHandler",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 43,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 60039,
							"name": "assertHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 43,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 60040,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60223,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 60041,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60042,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 44,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59916
					]
				},
				{
					"title": "Properties",
					"children": [
						59923,
						59924,
						59925,
						59926,
						59927,
						59928,
						59929,
						59937,
						59938,
						59943,
						60042
					]
				},
				{
					"title": "Accessors",
					"children": [
						59930
					]
				},
				{
					"title": "Methods",
					"children": [
						59939,
						59941,
						59944,
						59959,
						59963,
						59969,
						59974,
						59980,
						59987,
						59990,
						59995,
						60001,
						60007,
						60013,
						60019,
						60023,
						60027,
						60031,
						60035,
						60038
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 9,
					"character": 21
				}
			]
		},
		{
			"id": 60207,
			"name": "WorkflowDefinition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60208,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60209,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60210,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 60211,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 5,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 60212,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 59825,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 60213,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 59854,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 60755,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							]
						}
					}
				},
				{
					"id": 60214,
					"name": "orchestrator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60513,
						"name": "TransactionOrchestrator",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60215,
					"name": "flow_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59675,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60216,
					"name": "handlers_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 60217,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60218,
											"name": "invoke",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 59671,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										},
										{
											"id": 60219,
											"name": "compensate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 10,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 59671,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60218,
												60219
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 8,
											"character": 27
										}
									]
								}
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 60220,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59695,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 60221,
					"name": "requiredModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 60222,
					"name": "optionalModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60208,
						60209,
						60214,
						60215,
						60216,
						60220,
						60221,
						60222
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 59821,
			"name": "WorkflowHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
					"qualifiedName": "Map"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59822,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59823,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 17,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59671,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59824,
									"name": "compensate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59671,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59823,
										59824
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 16,
									"character": 42
								}
							]
						}
					}
				],
				"name": "Map",
				"package": "typescript"
			}
		},
		{
			"id": 60086,
			"name": "WorkflowStepHandlerArguments",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 20,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60087,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60088,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59825,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60089,
							"name": "payload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 60090,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60091,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 23,
											"character": 12
										}
									],
									"indexSignatures": [
										{
											"id": 60092,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 60093,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 60094,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60095,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 26,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 60096,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 60097,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 60098,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59846,
								"name": "TransactionMetadata",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60099,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60310,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 60100,
							"name": "step",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60448,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60101,
							"name": "orchestrator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60513,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60102,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59854,
								"name": "Context",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60088,
								60089,
								60090,
								60094,
								60098,
								60099,
								60100,
								60101,
								60102
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 20,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 59671,
			"name": "WorkflowStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59672,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 35,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 59673,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59674,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60086,
										"name": "WorkflowStepHandlerArguments",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 60141,
			"name": "ModuleImplementations",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 59825,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 12,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59845,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": 60141,
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59826,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59827,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 13,
											"character": 4
										},
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 14,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 59828,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 59829,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 59830,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59829,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 59831,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 59829,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 59845,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 59832,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 14,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 59833,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 59834,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59835,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59833,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 59836,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59837,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 18,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 59838,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 59841,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 59839,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 59840,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 59841,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 59825,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 59842,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 22,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59843,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 22,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 59844,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59825,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59836,
										59842
									]
								},
								{
									"title": "Methods",
									"children": [
										59827
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
									"line": 12,
									"character": 112
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60933,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60934,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60935,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event's group. Grouped events are useful when you have distributed transactions\nwhere you need to explicitly group, release and clear events upon lifecycle events of a transaction.\n\nWhen set, you must release the grouped events using the Event Module's "
											},
											{
												"kind": "code",
												"text": "`releaseGroupedEvents`"
											},
											{
												"kind": "text",
												"text": " method to emit the events."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60935
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 13,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60894,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60899,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60895,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60896,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event's name."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nuser.created\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60897,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional meadata to pass with the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60933,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60898,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data payload that subscribers receive. For example, the ID or IDs of the created user. (e.g. { id: \"123\" } or { ids: [\"123\", \"456\"] })"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60899,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60896,
								60897,
								60898
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 22,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 60695,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an event to emit."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 42,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60698,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60894,
						"typeArguments": [
							{
								"type": "reference",
								"target": 60698,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60696,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60697,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 43,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60697
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 42,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60706,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 45,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60715,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60707,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60708,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60709,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60715,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 60710,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60711,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60712,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60713,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 59854,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 60714,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60708,
								60709,
								60710,
								60711,
								60712,
								60713,
								60714
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 45,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 60721,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60722,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60723,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 2,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60724,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60725,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60726,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60727,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60728,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60729,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60730,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60723,
								60724,
								60725,
								60726,
								60727,
								60728,
								60729,
								60730
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 60716,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60717,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 60718,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60719,
					"name": "filterable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 60720,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60717,
						60718,
						60719,
						60720
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 24,
					"character": 17
				}
			]
		},
		{
			"id": 60159,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60160,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 60161,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 60716,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60716,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 60162,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 60163,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 60164,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60165,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														60164,
														60165
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
													"line": 42,
													"character": 41
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 60166,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 60167,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 60721,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 60168,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 60169,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 60170,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 49,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 60171,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 50,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 60172,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 51,
												"character": 8
											}
										],
										"type": {
											"type": "reference",
											"target": 60721,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											60170,
											60171,
											60172
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
										"line": 48,
										"character": 14
									}
								]
							}
						}
					}
				},
				{
					"id": 60173,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60160,
						60161,
						60162,
						60166,
						60167,
						60168,
						60173
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 33,
					"character": 17
				}
			]
		},
		{
			"id": 60936,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60937,
					"name": "panic",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60938,
							"name": "panic",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 2,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60939,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60940,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60941,
							"name": "shouldLog",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60942,
									"name": "level",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 60943,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60944,
							"name": "setLogLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60945,
									"name": "level",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60946,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60947,
							"name": "unsetLogLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60948,
					"name": "activity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60949,
							"name": "activity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60950,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60951,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 60952,
					"name": "progress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60953,
							"name": "progress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60954,
									"name": "activityId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60955,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60956,
					"name": "error",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60957,
							"name": "error",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 8,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60958,
									"name": "messageOrError",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 60959,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60960,
					"name": "failure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60961,
							"name": "failure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 9,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60962,
									"name": "activityId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60963,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 60964,
					"name": "success",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60965,
							"name": "success",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60966,
									"name": "activityId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60967,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60968,
					"name": "silly",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60969,
							"name": "silly",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60970,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60971,
					"name": "debug",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60972,
							"name": "debug",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60973,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60974,
					"name": "verbose",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60975,
							"name": "verbose",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60976,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60977,
					"name": "http",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60978,
							"name": "http",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60979,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60980,
					"name": "info",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60981,
							"name": "info",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60982,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60983,
					"name": "warn",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60984,
							"name": "warn",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60985,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60986,
					"name": "log",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60987,
							"name": "log",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60988,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						60937,
						60940,
						60943,
						60946,
						60948,
						60952,
						60956,
						60960,
						60964,
						60968,
						60971,
						60974,
						60977,
						60980,
						60983,
						60986
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 60912,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60918,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60913,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 8,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 60914,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 60917,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 60918,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 60915,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 8,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 60916,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 60918,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 60731,
			"name": "CustomModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60732,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60733,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60734,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60735,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60736,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60733,
								60734,
								60735,
								60736
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 17,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 60185,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 23,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60186,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60187,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "internal"
							}
						},
						{
							"id": 60188,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 60189,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60731,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60190,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 60737,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 60191,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 60192,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60193,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60194,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60187,
								60188,
								60189,
								60190,
								60191,
								60192,
								60193,
								60194
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 23,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 60195,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 39,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60196,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60197,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "external"
							}
						},
						{
							"id": 60198,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60731,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60199,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60200,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 60201,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 60202,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 60203,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												60201,
												60202,
												60203
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 42,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 60204,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 60205,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60206,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60197,
								60198,
								60199,
								60204,
								60205,
								60206
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 39,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 59904,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 65,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59905,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59906,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59907,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 59908,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59909,
							"name": "resolvePath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59910,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59911,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59912,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 59913,
							"name": "__passSharedContainer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "only used in exceptional cases - relying on the shared contrainer breaks encapsulation"
									}
								],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59914,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 60185,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 60195,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59906,
								59907,
								59908,
								59909,
								59910,
								59911,
								59912,
								59913,
								59914
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 65,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 60872,
			"name": "LoadedModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 89,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "intrinsic",
						"name": "unknown"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60873,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60874,
									"name": "__joinerConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 90,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59879,
										"name": "ModuleJoinerConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60875,
									"name": "__definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 91,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59904,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60874,
										60875
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 89,
									"character": 37
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60905,
			"name": "LoaderOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 93,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60911,
					"name": "TOptions",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60906,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60907,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59825,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60908,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60911,
								"name": "TOptions",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 60909,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60936,
								"name": "Logger",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60910,
							"name": "dataLoaderOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 97,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60907,
								60908,
								60909,
								60910
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 93,
							"character": 64
						}
					]
				}
			}
		},
		{
			"id": 60900,
			"name": "ModuleLoaderFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 99,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60901,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 99,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 60902,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 60903,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60905,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 60904,
									"name": "moduleDeclaration",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60185,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 60179,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 104,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60180,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60181,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 105,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 60182,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 106,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60183,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 107,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 60184,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 111,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60181,
										60182,
										60183,
										60184
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 104,
									"character": 52
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 59879,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 125,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 60159,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59880,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59881,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 129,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59882,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 130,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60174,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 59883,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 59884,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 59885,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 132,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 59886,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 133,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 59887,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 134,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 59888,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 59889,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 135,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 59890,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 136,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 59891,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 137,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							59889,
																							59890,
																							59891
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																						"line": 134,
																						"character": 45
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 59892,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 139,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Omit"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 60174,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																},
																{
																	"type": "literal",
																	"value": "hasMany"
																}
															],
															"name": "Omit",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															59885,
															59886,
															59887,
															59892
														]
													}
												],
												"sources": [
													{
														"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
														"line": 131,
														"character": 14
													}
												]
											}
										}
									}
								},
								{
									"id": 59893,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 141,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59894,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 142,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 59895,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 59896,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 150,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 59897,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 154,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 59898,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 159,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 59899,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 160,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59900,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59901,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 164,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59902,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 168,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59903,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 169,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 60179,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59901,
														59902,
														59903
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 160,
													"character": 21
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59881,
										59882,
										59883,
										59893,
										59894,
										59895,
										59896,
										59897,
										59898,
										59899
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 125,
									"character": 122
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60174,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 172,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60721,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60175,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60176,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 176,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 60177,
									"name": "filterable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields to be filterable by the Index module using query.index"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 180,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 60178,
									"name": "hasMany",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allow multiple relationships to exist for this\nentity"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 185,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60176,
										60177,
										60178
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 172,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60737,
			"name": "ModuleExports",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 187,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60754,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": 60912,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60738,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60739,
							"name": "service",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 188,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 60754,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 60740,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 189,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60900,
									"name": "ModuleLoaderFunction",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 60741,
							"name": "runMigrations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 60742,
									"name": "runMigrations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 190,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 60743,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 60905,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 60744,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 60185,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 60745,
							"name": "revertMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 191,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 60746,
									"name": "revertMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 191,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 60747,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 60905,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 60748,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 60185,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 60749,
							"name": "generateMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 192,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 60750,
									"name": "generateMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 192,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 60751,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 60905,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 60752,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 60185,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 60753,
							"name": "discoveryPath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Explicitly set the the true location of the module resources.\nCan be used to re-export the module from a different location and specify its original location."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 197,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60739,
								60740,
								60753
							]
						},
						{
							"title": "Methods",
							"children": [
								60741,
								60745,
								60749
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 187,
							"character": 50
						}
					]
				}
			}
		},
		{
			"id": 60699,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60700,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 60701,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60702,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"indexSignatures": [
								{
									"id": 60703,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
											"line": 6,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 60704,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 60705,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						60700,
						60701,
						60705
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 60145,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 60146,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60147,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60148,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 60695,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 60695,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60149,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60150,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 60151,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 60699,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60695,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60152,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60153,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 60154,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 60155,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"typeParameters": [
								{
									"id": 60156,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 60157,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 60706,
												"typeArguments": [
													{
														"type": "reference",
														"target": 60156,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 60706,
													"typeArguments": [
														{
															"type": "reference",
															"target": 60156,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 60158,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						60146,
						60149,
						60152,
						60154
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 59854,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 59855,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 59856,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59869,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 59857,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59869,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 59858,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59859,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59860,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59861,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59862,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current run."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59863,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 60145,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 59864,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59865,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59866,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 69,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59867,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preventReleaseEvents"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59868,
					"name": "isCancelling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether the current workflow execution is being cancelled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59855,
						59856,
						59857,
						59858,
						59859,
						59860,
						59861,
						59862,
						59863,
						59864,
						59865,
						59866,
						59867,
						59868
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59869,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 59714,
			"name": "SymbolWorkflowHook",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/symbol.d.ts",
					"line": 5,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 60142,
			"name": "TransactionHandlerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 60143,
					"name": "INVOKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoke"
					}
				},
				{
					"id": 60144,
					"name": "COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						60143,
						60144
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 1,
					"character": 20
				}
			]
		},
		{
			"id": 60856,
			"name": "TransactionState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 60857,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 60858,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 60859,
					"name": "WAITING_TO_COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_to_compensate"
					}
				},
				{
					"id": 60860,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 60861,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 60862,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 60863,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						60857,
						60858,
						60859,
						60860,
						60861,
						60862,
						60863
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 5,
					"character": 20
				}
			]
		},
		{
			"id": 60876,
			"name": "TransactionStepState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 60877,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 60878,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 60879,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 60880,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 60881,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 60882,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				},
				{
					"id": 60883,
					"name": "DORMANT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "dormant"
					}
				},
				{
					"id": 60884,
					"name": "SKIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped"
					}
				},
				{
					"id": 60885,
					"name": "SKIPPED_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped_failure"
					}
				},
				{
					"id": 60886,
					"name": "TIMEOUT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "timeout"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						60877,
						60878,
						60879,
						60880,
						60881,
						60882,
						60883,
						60884,
						60885,
						60886
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 14,
					"character": 20
				}
			]
		},
		{
			"id": 60887,
			"name": "TransactionStepStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 60888,
					"name": "IDLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "idle"
					}
				},
				{
					"id": 60889,
					"name": "OK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ok"
					}
				},
				{
					"id": 60890,
					"name": "WAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_response"
					}
				},
				{
					"id": 60891,
					"name": "TEMPORARY_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "temp_failure"
					}
				},
				{
					"id": 60892,
					"name": "PERMANENT_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "permanent_failure"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						60888,
						60889,
						60890,
						60891,
						60892
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 26,
					"character": 20
				}
			]
		},
		{
			"id": 60864,
			"name": "BaseFlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 9,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60865,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60866,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 59854,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60867,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 60868,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60869,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60870,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60227,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60871,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60872,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 59825,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60866,
								60867,
								60868,
								60869,
								60870,
								60871
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 9,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 60414,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60417,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60864,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60415,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60416,
									"name": "input",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 19,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 60417,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60416
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 18,
									"character": 67
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60418,
			"name": "FlowRegisterStepSuccessOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60422,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60864,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60419,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60420,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 24,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60421,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 25,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 60422,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60420,
										60421
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 23,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60429,
			"name": "FlowRetryStepOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 28,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 60864,
								"name": "BaseFlowRunOptions",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "literal",
								"value": "resultFrom"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60430,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60431,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 29,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60431
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 28,
									"character": 76
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60423,
			"name": "FlowRegisterStepFailureOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 32,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60428,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 60864,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 60424,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 60425,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 34,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 60426,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 35,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 60428,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 60427,
									"name": "forcePermanentFailure",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 36,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										60425,
										60426,
										60427
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 33,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 60432,
			"name": "FlowCancelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 39,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60433,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60434,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60310,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 60435,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 60436,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 42,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 59854,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 60437,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 43,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60438,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 44,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 60439,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60227,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 60440,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 46,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 60872,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 59825,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60434,
								60435,
								60436,
								60437,
								60438,
								60439,
								60440
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 39,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 60408,
			"name": "WorkflowResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a workflow's execution."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 52,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60413,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60409,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60410,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Any errors that occured in the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 60847,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						},
						{
							"id": 60411,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transaction details of the workflow's execution."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60310,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 60412,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The result returned by the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 60413,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60410,
								60411,
								60412
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 52,
							"character": 48
						}
					]
				}
			}
		},
		{
			"id": 60043,
			"name": "ExportedWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 67,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 60065,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 60066,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 60067,
					"name": "TDataOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 60068,
					"name": "TResultOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60044,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60045,
							"name": "run",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60046,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 73,
											"character": 7
										}
									],
									"signatures": [
										{
											"id": 60047,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60048,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60414,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60067,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60065,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60067,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRunOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60408,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60068,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60066,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60068,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 60049,
							"name": "registerStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 82,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60050,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 82,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 60051,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60052,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60418,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60067,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60065,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60067,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepSuccessOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60408,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60068,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60066,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60068,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 60053,
							"name": "registerStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 91,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60054,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 91,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 60055,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60056,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60423,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60067,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60065,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60067,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepFailureOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60408,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 60068,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 60066,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 60068,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 60057,
							"name": "retryStep",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 100,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60058,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 100,
											"character": 13
										}
									],
									"signatures": [
										{
											"id": 60059,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60060,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60429,
														"name": "FlowRetryStepOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60408,
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 60061,
							"name": "cancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 60062,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 101,
											"character": 10
										}
									],
									"signatures": [
										{
											"id": 60063,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 60064,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 60432,
														"name": "FlowCancelOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 60408,
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								60045,
								60049,
								60053,
								60057,
								60061
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 72,
							"character": 4
						}
					]
				}
			}
		},
		{
			"id": 59419,
			"name": "Hook",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Representation of a hook definition."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 59427,
					"name": "Name",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59428,
					"name": "Input",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59429,
					"name": "Output",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59420,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59421,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L19"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 59714,
									"name": "OrchestrationUtils.SymbolWorkflowHook",
									"package": "@medusajs/utils",
									"qualifiedName": "SymbolWorkflowHook"
								}
							}
						},
						{
							"id": 59422,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
								}
							],
							"type": {
								"type": "reference",
								"target": 59427,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59423,
							"name": "getResult",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L25"
								}
							],
							"signatures": [
								{
									"id": 59424,
									"name": "getResult",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the result of the hook"
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L25"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 59429,
												"name": "Output",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										]
									}
								}
							]
						},
						{
							"id": 59425,
							"name": " output",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By prefixing a key with a space, we remove it from the\nintellisense of TypeScript. This is needed because\ninput is not set at runtime. It is a type-only\nproperty to infer input data type of a hook"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"target": 59429,
								"name": "Output",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59426,
							"name": " input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"target": 59428,
								"name": "Input",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59421,
								59422,
								59425,
								59426
							]
						},
						{
							"title": "Methods",
							"children": [
								59423
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 18,
							"character": 55,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 59409,
			"name": "createHook",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 72,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L72"
				}
			],
			"signatures": [
				{
					"id": 59410,
					"name": "createHook",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expose a hook in your workflow where you can inject custom functionality as a step function.\n\nA handler hook can later be registered to consume the hook and perform custom functionality.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks)."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A workflow hook."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  createHook,\n  createWorkflow,\n  WorkflowResponse,\n} from \"@medusajs/framework/workflows-sdk\"\nimport { createProductStep } from \"./steps/create-product\"\n\nexport const myWorkflow = createWorkflow(\n  \"my-workflow\",\n  function (input) {\n    const product = createProductStep(input)\n    const productCreatedHook = createHook(\n      \"productCreated\",\n      { productId: product.id }\n    )\n\n    return new WorkflowResponse(product, {\n      hooks: [productCreatedHook],\n    })\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 72,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L72"
						}
					],
					"typeParameters": [
						{
							"id": 59411,
							"name": "Name",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59412,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 59413,
							"name": "TInvokeOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 59414,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hook's name. This is used when the hook handler is registered to consume the workflow."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59411,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59415,
							"name": "hookInput",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input to pass to the hook handler."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59412,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59416,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59417,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 59418,
											"name": "resultValidator",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L76"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/zod/v3/types.d.cts",
													"qualifiedName": "ZodType"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59413,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/zod/v3/types.d.cts",
															"qualifiedName": "ZodTypeDef"
														},
														"name": "ZodTypeDef",
														"package": "zod"
													},
													{
														"type": "reference",
														"target": 59413,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ZodType",
												"package": "zod"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												59418
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 75,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L75"
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 59419,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59411,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59412,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59413,
								"name": "TInvokeOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "Hook",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59320,
			"name": "InvokeFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of invocation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 59325,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the function expects."
							}
						]
					}
				},
				{
					"id": 59326,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output that the function returns."
							}
						]
					}
				},
				{
					"id": 59327,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the compensation function expects."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59321,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 29,
							"character": 58,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 59322,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The expected output based on the type parameter "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 59323,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59325,
										"name": "TInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 59324,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59593,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": 59363,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59326,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 59327,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "undefined"
												},
												"trueType": {
													"type": "reference",
													"target": 59326,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"falseType": {
													"type": "reference",
													"target": 59327,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "StepResponse",
										"package": "@medusajs/workflows-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 59363,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59326,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 59327,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 59326,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 59327,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "StepResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59328,
			"name": "CompensateFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of compensation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
				}
			],
			"typeParameters": [
				{
					"id": 59333,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the argument passed to the compensation function. If not specified, then it will be the same type as the invocation function's output."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59329,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 57,
							"character": 30,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 59330,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There's no expected type to be returned by the compensation function."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 59331,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 59333,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 59332,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59593,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59334,
			"name": "LocalStepConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 68,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 59335,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59336,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
											"line": 68,
											"character": 32,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59336
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
									"line": 68,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 59675,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "next"
									},
									{
										"type": "literal",
										"value": "uuid"
									},
									{
										"type": "literal",
										"value": "action"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 59337,
			"name": "ApplyStepOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 59338,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59339,
					"name": "stepConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": 59675,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59340,
					"name": "input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": 59343,
						"name": "TStepInputs",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "ApplyStepOptions.TStepInputs",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 59341,
					"name": "invokeFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": 59320,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59344,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59345,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultOutput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59346,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "InvokeFn",
						"package": "@medusajs/workflows-sdk"
					}
				},
				{
					"id": 59342,
					"name": "compensateFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": 59328,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59346,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "CompensateFn",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59338,
						59339,
						59340,
						59341,
						59342
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 73,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L73"
				}
			],
			"typeParameters": [
				{
					"id": 59343,
					"name": "TStepInputs",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 59344,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "reference",
							"target": 59545,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 59344,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "ApplyStepOptions.TInvokeInput",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "WorkflowData",
							"package": "@medusajs/workflows-sdk"
						}
					}
				},
				{
					"id": 59344,
					"name": "TInvokeInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59345,
					"name": "TInvokeResultOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59346,
					"name": "TInvokeResultCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 59292,
			"name": "applyStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 136,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L136"
				}
			],
			"signatures": [
				{
					"id": 59293,
					"name": "applyStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 136,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L136"
						}
					],
					"typeParameters": [
						{
							"id": 59294,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 59295,
							"name": "TStepInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "reference",
									"target": 59545,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 59294,
												"name": "TInvokeInput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "WorkflowData",
									"package": "@medusajs/workflows-sdk"
								}
							}
						},
						{
							"id": 59296,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 59297,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 59298,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 59337,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59295,
										"name": "TStepInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59294,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59296,
										"name": "TInvokeResultOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59297,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "ApplyStepOptions",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59491,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59296,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunctionResult",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59310,
			"name": "createStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 422,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L422"
				}
			],
			"signatures": [
				{
					"id": 59311,
					"name": "createStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StepFunction",
								"target": 59511
							},
							{
								"kind": "text",
								"text": " that can be used as a step in a workflow constructed by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 59347
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A step function to be used in a workflow."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  StepResponse\n} from \"@medusajs/framework/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    { container }\n  ) {\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    const product = await productModuleService.createProducts(input)\n    return new StepResponse({\n      product\n    }, {\n      product_id: product.id\n    })\n  },\n  async function (\n    input,\n    { container }\n  ) {\n    if (!input) {\n      return\n    }\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    await productModuleService.deleteProducts([input.product_id])\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 422,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L422"
						}
					],
					"typeParameters": [
						{
							"id": 59312,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the invocation function."
									}
								]
							}
						},
						{
							"id": 59313,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected output parameter of the invocation function."
									}
								]
							}
						},
						{
							"id": 59314,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the compensation function."
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 59315,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the step or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 59316,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 59317,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
																	"line": 432,
																	"character": 9,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L432"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																59317
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
															"line": 432,
															"character": 7,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L432"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59675,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "next"
															},
															{
																"type": "literal",
																"value": "uuid"
															},
															{
																"type": "literal",
																"value": "action"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										]
									}
								]
							}
						},
						{
							"id": 59318,
							"name": "invokeFn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An invocation function that will be executed when the workflow is executed. The function must return an instance of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 59363
									},
									{
										"kind": "text",
										"text": ". The constructor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 59363
									},
									{
										"kind": "text",
										"text": "\naccepts the output of the step as a first argument, and optionally as a second argument the data to be passed to the compensation function as a parameter."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59320,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59312,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59313,
										"name": "TInvokeResultOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59314,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "InvokeFn",
								"package": "@medusajs/workflows-sdk"
							}
						},
						{
							"id": 59319,
							"name": "compensateFn",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A compensation function that's executed if an error occurs in the workflow. It's used to roll-back actions when errors occur.\nIt accepts as a parameter the second argument passed to the constructor of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 59363
									},
									{
										"kind": "text",
										"text": " instance returned by the invocation function. If the\ninvocation function doesn't pass the second argument to "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor, the compensation function receives the first argument\npassed to the "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor instead."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59328,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59314,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "CompensateFn",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59511,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59312,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59313,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunction",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59347,
			"name": "createWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
					"line": 88,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
				}
			],
			"signatures": [
				{
					"id": 59348,
					"name": "createWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a workflow with the provided name and a constructor function.\nThe constructor function builds the workflow from steps created by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createStep",
								"target": 59310
							},
							{
								"kind": "text",
								"text": " function.\nThe returned workflow is an exported workflow of type "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ReturnWorkflow",
								"target": 59620
							},
							{
								"kind": "text",
								"text": ", meaning it's not executed right away. To execute it,\ninvoke the exported workflow, then run its "
							},
							{
								"kind": "code",
								"text": "`run`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The created workflow. You can later execute the workflow by invoking it, then using its "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { MedusaRequest, MedusaResponse } from \"@medusajs/framework/http\"\nimport {\n  createProductStep,\n  getProductStep,\n} from \"./steps\"\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n    return new WorkflowResponse(getProductStep(product.id))\n  }\n)\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result: product } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        title: \"Shirt\"\n      }\n    })\n\n  res.json({\n    product\n  })\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
							"line": 88,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
						}
					],
					"typeParameters": [
						{
							"id": 59349,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the input passed to the composer function."
									}
								]
							}
						},
						{
							"id": 59350,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the output returned by the composer function."
									}
								]
							}
						},
						{
							"id": 59351,
							"name": "THooks",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of hooks defined in the workflow."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 59352,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the workflow or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 59353,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 59354,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
																	"line": 92,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																59354
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
															"line": 92,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": 59695,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										]
									}
								]
							}
						},
						{
							"id": 59355,
							"name": "composer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor function that is executed when the "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ReturnWorkflow",
										"target": 59620
									},
									{
										"kind": "text",
										"text": " is used.\nThe function can't be an arrow function or an asynchronus function. It also can't directly manipulate data.\nYou'll have to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "transform",
										"target": 59434
									},
									{
										"kind": "text",
										"text": " function if you need to directly manipulate data."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59356,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 98,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
										}
									],
									"signatures": [
										{
											"id": 59357,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
													"line": 98,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
												}
											],
											"parameters": [
												{
													"id": 59358,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59545,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59349,
																"name": "TData",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 59393,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59350,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 59351,
																"name": "THooks",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59620,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59349,
								"name": "TData",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59350,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 59351,
								"name": "THooks",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59359,
			"name": "resolveValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
					"line": 185,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts#L185"
				}
			],
			"signatures": [
				{
					"id": 59360,
					"name": "resolveValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
							"line": 185,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts#L185"
						}
					],
					"parameters": [
						{
							"id": 59361,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 59362,
							"name": "transactionContext",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						]
					}
				}
			]
		},
		{
			"id": 59363,
			"name": "StepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This class is used to create the response returned by a step. A step return its data by returning an instance of "
					},
					{
						"kind": "code",
						"text": "`StepResponse`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 59370,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 59371,
							"name": "StepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the StepResponse"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 59372,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the output of the step."
											}
										]
									}
								},
								{
									"id": 59373,
									"name": "TCompensateInput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
											},
											{
												"kind": "code",
												"text": "`TCompensateInput`"
											},
											{
												"kind": "text",
												"text": " is the same\nas that of "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"default": {
										"type": "reference",
										"target": 59372,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 59374,
									"name": "output",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The output of the step."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59372,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 59375,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The input to be passed as a parameter to the step's compensation function. If not provided, the "
											},
											{
												"kind": "code",
												"text": "`output`"
											},
											{
												"kind": "text",
												"text": " will be provided instead."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59373,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59363,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59372,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59373,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "StepResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 59364,
					"name": "permanentFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 120,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L120"
						}
					],
					"signatures": [
						{
							"id": 59365,
							"name": "permanentFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a StepResponse that indicates that the step has failed and the retry mechanism should not kick in anymore."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { Product } from \"@medusajs/medusa\"\nimport {\n  createStep,\n  StepResponse,\n  createWorkflow\n} from \"@medusajs/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    context\n  ) {\n    const productService = context.container.resolve(\n      \"productService\"\n    )\n\n    try {\n      const product = await productService.createProducts(input)\n      return new StepResponse({\n        product\n      }, {\n        product_id: product.id\n      })\n    } catch (e) {\n      return StepResponse.permanentFailure(`Couldn't create the product: ${e}`)\n    }\n  }\n)\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow<\n    WorkflowInput,\n    Product\n  >(\"my-workflow\", (input) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n  }\n)\n\nmyWorkflow()\n  .run({\n    input: {\n      title: \"Shirt\"\n    }\n  })\n  .then(({ errors, result }) => {\n    if (errors.length) {\n      errors.forEach((err) => {\n        if (typeof err.error === \"object\" && \"message\" in err.error) {\n          console.error(err.error.message)\n        } else {\n          console.error(err.error)\n        }\n      })\n    }\n    console.log(result)\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 120,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L120"
								}
							],
							"parameters": [
								{
									"id": 59366,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional message to be logged."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Permanent failure\""
								},
								{
									"id": 59367,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 59368,
					"name": "skip",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 130,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 59369,
							"name": "skip",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 130,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L130"
								}
							],
							"type": {
								"type": "reference",
								"target": 59703,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59370
					]
				},
				{
					"title": "Methods",
					"children": [
						59364,
						59368
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
					"line": 15,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 59391,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					}
				},
				{
					"id": 59392,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
							},
							{
								"kind": "code",
								"text": "`TCompensateInput`"
							},
							{
								"kind": "text",
								"text": " is the same\nas that of "
							},
							{
								"kind": "code",
								"text": "`TOutput`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"default": {
						"type": "reference",
						"target": 59372,
						"name": "TOutput",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "StepResponse.TOutput",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 59393,
			"name": "WorkflowResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Workflow response class encapsulates the return value of a workflow"
					}
				]
			},
			"children": [
				{
					"id": 59402,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "OrchestrationUtils.SymbolMedusaWorkflowResponse"
				},
				{
					"id": 59394,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 59395,
							"name": "WorkflowResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
								}
							],
							"typeParameters": [
								{
									"id": 59396,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 59397,
									"name": "THooks",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									},
									"default": {
										"type": "tuple"
									}
								}
							],
							"parameters": [
								{
									"id": 59398,
									"name": "$result",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 59545,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59396,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 59396,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"qualifiedName": "WorkflowResponse.TResult",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 59540,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 59396,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowDataProperties",
															"package": "@medusajs/workflows-sdk"
														},
														{
															"type": "reference",
															"target": 59545,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 59396,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 59399,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59400,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59401,
													"name": "hooks",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"line": 23,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
														}
													],
													"type": {
														"type": "reference",
														"target": 59397,
														"name": "THooks",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.THooks",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59401
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"line": 23,
													"character": 21,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59393,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59396,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59397,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 59403,
					"name": "$result",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 15,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 59545,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59396,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 59396,
												"name": "TResult",
												"package": "@medusajs/workflows-sdk",
												"qualifiedName": "WorkflowResponse.TResult",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 59540,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 59396,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowDataProperties",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "reference",
											"target": 59545,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 59396,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 59404,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 23,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59405,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59406,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
											"line": 23,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 59397,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59406
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 23,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59394
					]
				},
				{
					"title": "Properties",
					"children": [
						59402,
						59403,
						59404
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 59407,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59408,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			]
		},
		{
			"id": 59430,
			"name": "parallelize",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 59431,
					"name": "parallelize",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function is used to run multiple steps in parallel. The result of each step will be returned as part of the result array."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The step results. The results are ordered in the array by the order they're passed in the function's parameter."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  parallelize,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  createProductStep,\n  createPricesStep,\n  attachProductToSalesChannelStep\n} from \"./steps\"\n\ninterface WorkflowInput {\n  title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   const product = createProductStep(input)\n\n   const [prices, productSalesChannel] = parallelize(\n     createPricesStep(product),\n     attachProductToSalesChannelStep(product)\n   )\n\n   return new WorkflowResponse({\n    prices,\n    productSalesChannel\n   })\n }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
						}
					],
					"typeParameters": [
						{
							"id": 59432,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": 59545,
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 59433,
							"name": "steps",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"target": 59432,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59432,
						"name": "TResult",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 59715,
			"name": "Func1",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 10,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 59721,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 59545,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				},
				{
					"id": 59722,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59716,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 10,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 59717,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59718,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 59721,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 59545,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 59721,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 59721,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 59721,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 59545,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 59721,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 59719,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"line": 15,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 59720,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59593,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 59722,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59722,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59723,
			"name": "Func",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 19,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 59728,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59729,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59724,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 19,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 59725,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59726,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59728,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 59727,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59593,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 59729,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 59729,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59434,
			"name": "transform",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 62,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/transform.ts#L62"
				}
			],
			"signatures": [
				{
					"id": 59435,
					"name": "transform",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function transforms the output of other utility functions.\n\nFor example, if you're using the value(s) of some step(s) as an input to a later step. As you can't directly manipulate data in the  workflow constructor function passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 59347
							},
							{
								"kind": "text",
								"text": ",\nthe "
							},
							{
								"kind": "code",
								"text": "`transform`"
							},
							{
								"kind": "text",
								"text": " function provides access to the runtime value of the step(s) output so that you can manipulate them.\n\nAnother example is if you're using the runtime value of some step(s) as the output of a workflow.\n\nIf you're also retrieving the output of a hook and want to check if its value is set, you must use a workflow to get the runtime value of that hook."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "There's no expected value to be returned by the "
									},
									{
										"kind": "code",
										"text": "`transform`"
									},
									{
										"kind": "text",
										"text": " function."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  transform,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { step1, step2 } from \"./steps\"\n\ntype WorkflowInput = {\n  name: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"hello-world\",\n  (input: WorkflowInput) => {\n    const str1 = step1(input)\n    const str2 = step2(input)\n\n    const message = transform({\n      str1,\n      str2\n    }, (input) => `${input.str1}${input.str2}`)\n\n    return new WorkflowResponse(message)\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 62,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/transform.ts#L62"
						}
					],
					"typeParameters": [
						{
							"id": 59436,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "reference",
										"target": 59545,
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						{
							"id": 59437,
							"name": "RFinal",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 59438,
							"name": "values",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The output(s) of other step functions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 59436,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59439,
							"name": "func",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transform function used to perform action on the runtime values of the provided "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 59715,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59436,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 59437,
												"name": "RFinal",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Func1",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 59545,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59437,
								"name": "RFinal",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowData",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 59491,
			"name": "StepFunctionResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 59495,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59492,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 59493,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59494,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59553,
										"name": "CreateWorkflowComposerContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59545,
								"typeArguments": [
									{
										"type": "reference",
										"target": 59495,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				}
			}
		},
		{
			"id": 59496,
			"name": "StepFunctionReturnConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 59503,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59497,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59498,
							"name": "config",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 59499,
									"name": "config",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
										}
									],
									"parameters": [
										{
											"id": 59500,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 59501,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59502,
																	"name": "name",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 20,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		59502
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 20,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 59675,
																"name": "TransactionStepsDefinition",
																"package": "@medusajs/orchestration"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "next"
																	},
																	{
																		"type": "literal",
																		"value": "uuid"
																	},
																	{
																		"type": "literal",
																		"value": "action"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 59545,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59503,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								59498
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 18,
							"character": 48,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 59730,
			"name": "KeysOfUnion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 27,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 59731,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 59731,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 59731,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"trueType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 59731,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 59504,
			"name": "HookHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59505,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 28,
							"character": 26,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 59506,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59507,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 60441,
			"name": "ConvertHookToObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 30,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 60447,
					"name": "THook",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 60447,
					"name": "THook",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 59419,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "Name"
						},
						{
							"type": "inferred",
							"name": "Input"
						},
						{
							"type": "inferred",
							"name": "Output"
						}
					],
					"name": "Hook",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
							"qualifiedName": "Name"
						},
						"name": "Name",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					"templateType": {
						"type": "reflection",
						"declaration": {
							"id": 60442,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
									"line": 36,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 60443,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 60446,
											"name": "TCompensateInput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 60444,
											"name": "invoke",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 59320,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Input"
														},
														"name": "Input",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Output"
														},
														"name": "Output",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 60446,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "InvokeFn",
												"package": "@medusajs/workflows-sdk"
											}
										},
										{
											"id": 60445,
											"name": "compensate",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 59328,
												"typeArguments": [
													{
														"type": "reference",
														"target": 60446,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "CompensateFn",
												"package": "@medusajs/workflows-sdk"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 60069,
			"name": "ConvertHooksToFunctions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Helper to convert an array of hooks to functions"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 46,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 60071,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 60071,
					"name": "THooks",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "A"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "R"
							}
						}
					]
				},
				"trueType": {
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 60441,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "A"
									},
									"name": "A",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHookToObject",
							"package": "@medusajs/workflows-sdk"
						},
						{
							"type": "reference",
							"target": 60069,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHooksToFunctions",
							"package": "@medusajs/workflows-sdk"
						}
					]
				},
				"falseType": {
					"type": "reflection",
					"declaration": {
						"id": 60070,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
								"line": 51,
								"character": 4
							}
						]
					}
				}
			}
		},
		{
			"id": 59508,
			"name": "Void",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 53,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59509,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59510,
							"name": " $$type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 53,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
								}
							],
							"type": {
								"type": "literal",
								"value": "void"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59510
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 53,
							"character": 19,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
						}
					]
				}
			}
		},
		{
			"id": 59511,
			"name": "StepFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A step function to be used in a workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 61,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L61"
				}
			],
			"typeParameters": [
				{
					"id": 59538,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input of the step."
							}
						]
					}
				},
				{
					"id": 59539,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 59730,
							"typeArguments": [
								{
									"type": "reference",
									"target": 59538,
									"name": "TInput",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "KeysOfUnion",
							"package": "@medusajs/workflows-sdk"
						},
						"extendsType": {
							"type": "tuple"
						},
						"trueType": {
							"type": "reflection",
							"declaration": {
								"id": 59512,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 66,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L66"
									}
								],
								"signatures": [
									{
										"id": 59513,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 67,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L67"
											}
										],
										"type": {
											"type": "conditional",
											"checkType": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 59539,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 59514,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "never"
											},
											"trueType": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 59515,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59516,
																	"name": " $$type",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 53,
																			"character": 21,
																			"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "void"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		59516
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 91,
																	"character": 4,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L91"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 59508,
														"name": "Void",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reference",
														"target": 59540,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59508,
																"name": "Void",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 59517,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59518,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 59519,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 59520,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 59521,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 59522,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												59522
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 59675,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 59545,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 59508,
																						"name": "Void",
																						"package": "@medusajs/workflows-sdk"
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		59518
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 59496,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59539,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"falseType": {
												"type": "intersection",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 59539,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																	"qualifiedName": "Item"
																},
																"name": "Item",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "Item"
																		},
																		"name": "Item",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 59545,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																					"qualifiedName": "Item"
																				},
																				"name": "Item",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 59539,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "intrinsic",
																"name": "object"
															},
															"trueType": {
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "unknown",
																				"name": "..."
																			},
																			"objectType": {
																				"type": "unknown",
																				"name": "..."
																			}
																		},
																		{
																			"type": "reference",
																			"target": 59545,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	]
																}
															},
															"falseType": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 59539,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 59540,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 59539,
																				"name": "TOutput",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowDataProperties",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													},
													{
														"type": "reference",
														"target": 59539,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59540,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59539,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 59523,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59524,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 59525,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 59526,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 59527,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 59528,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												59528
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 59675,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 59545,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 59539,
																						"name": "TOutput",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		59524
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 59496,
														"typeArguments": [
															{
																"type": "reference",
																"target": 59539,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									}
								]
							}
						},
						"falseType": {
							"type": "reflection",
							"declaration": {
								"id": 59529,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 72,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L72"
									}
								],
								"signatures": [
									{
										"id": 59530,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 73,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L73"
											}
										],
										"parameters": [
											{
												"id": 59531,
												"name": "input",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 59538,
															"name": "TInput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 59545,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 59538,
																	"name": "TInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										],
										"type": {
											"type": "intersection",
											"types": [
												{
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 59539,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "Item"
															},
															"name": "Item",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"trueType": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																		"qualifiedName": "Item"
																	},
																	"name": "Item",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 59545,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Item"
																			},
																			"name": "Item",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 59539,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 59539,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	},
																	{
																		"type": "reference",
																		"target": 59545,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "unknown",
																					"name": "..."
																				},
																				"objectType": {
																					"type": "unknown",
																					"name": "..."
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 59539,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 59540,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 59539,
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowDataProperties",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													}
												},
												{
													"type": "reference",
													"target": 59539,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 59540,
													"typeArguments": [
														{
															"type": "reference",
															"target": 59539,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "WorkflowDataProperties",
													"package": "@medusajs/workflows-sdk"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 59532,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 59533,
																"name": "config",
																"variant": "declaration",
																"kind": 2048,
																"flags": {},
																"sources": [
																	{
																		"fileName": "workflows-sdk/src/utils/composer/type.ts",
																		"line": 97,
																		"character": 4,
																		"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																	}
																],
																"signatures": [
																	{
																		"id": 59534,
																		"name": "config",
																		"variant": "signature",
																		"kind": 4096,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "workflows-sdk/src/utils/composer/type.ts",
																				"line": 97,
																				"character": 4,
																				"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																			}
																		],
																		"parameters": [
																			{
																				"id": 59535,
																				"name": "config",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intersection",
																					"types": [
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 59536,
																								"name": "__type",
																								"variant": "declaration",
																								"kind": 65536,
																								"flags": {},
																								"children": [
																									{
																										"id": 59537,
																										"name": "name",
																										"variant": "declaration",
																										"kind": 1024,
																										"flags": {
																											"isOptional": true
																										},
																										"sources": [
																											{
																												"fileName": "workflows-sdk/src/utils/composer/type.ts",
																												"line": 98,
																												"character": 16,
																												"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																											}
																										],
																										"type": {
																											"type": "intrinsic",
																											"name": "string"
																										}
																									}
																								],
																								"groups": [
																									{
																										"title": "Properties",
																										"children": [
																											59537
																										]
																									}
																								],
																								"sources": [
																									{
																										"fileName": "workflows-sdk/src/utils/composer/type.ts",
																										"line": 98,
																										"character": 14,
																										"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																									}
																								]
																							}
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Omit"
																							},
																							"typeArguments": [
																								{
																									"type": "reference",
																									"target": 59675,
																									"name": "TransactionStepsDefinition",
																									"package": "@medusajs/orchestration"
																								},
																								{
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": "next"
																										},
																										{
																											"type": "literal",
																											"value": "uuid"
																										},
																										{
																											"type": "literal",
																											"value": "action"
																										}
																									]
																								}
																							],
																							"name": "Omit",
																							"package": "typescript"
																						}
																					]
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 59545,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 59539,
																					"name": "TOutput",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																]
															}
														],
														"groups": [
															{
																"title": "Methods",
																"children": [
																	59533
																]
															}
														],
														"sources": [
															{
																"fileName": "workflows-sdk/src/utils/composer/type.ts",
																"line": 96,
																"character": 30,
																"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
															}
														]
													}
												},
												{
													"type": "reference",
													"target": 59496,
													"typeArguments": [
														{
															"type": "reference",
															"target": 59539,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "StepFunctionReturnConfig",
													"package": "@medusajs/workflows-sdk"
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 59540,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59539,
								"name": "TOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					}
				]
			}
		},
		{
			"id": 59540,
			"name": "WorkflowDataProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 78,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
				}
			],
			"typeParameters": [
				{
					"id": 59544,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59541,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59542,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59543,
							"name": "__step__",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59542,
								59543
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 78,
							"character": 50,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
						}
					]
				}
			}
		},
		{
			"id": 59545,
			"name": "WorkflowData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This type is used to encapsulate the input or output type of all utils."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L88"
				}
			],
			"typeParameters": [
				{
					"id": 59552,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of a step's input or result."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 59552,
							"name": "T",
							"package": "@medusajs/workflows-sdk",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "array",
							"elementType": {
								"type": "inferred",
								"name": "Item"
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "Item"
										},
										"name": "Item",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59545,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Item"
												},
												"name": "Item",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 59552,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "mapped",
								"parameter": "Key",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 59552,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 59552,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 59545,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 59552,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							"falseType": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 59552,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 59540,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59552,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowDataProperties",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 59552,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 59540,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59552,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59546,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59547,
									"name": "config",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 97,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
										}
									],
									"signatures": [
										{
											"id": 59548,
											"name": "config",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
												}
											],
											"parameters": [
												{
													"id": 59549,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 59550,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 59551,
																			"name": "name",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 98,
																					"character": 16,
																					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				59551
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 98,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 59675,
																		"name": "TransactionStepsDefinition",
																		"package": "@medusajs/orchestration"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "next"
																			},
																			{
																				"type": "literal",
																				"value": "uuid"
																			},
																			{
																				"type": "literal",
																				"value": "action"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59545,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59552,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										59547
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 96,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59553,
			"name": "CreateWorkflowComposerContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 105,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59554,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59555,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59556,
							"name": "hooks_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59557,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 59558,
											"name": "declared",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 108,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L108"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 59559,
											"name": "registered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L109"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												59558,
												59559
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 107,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
										}
									]
								}
							}
						},
						{
							"id": 59560,
							"name": "hooksCallback_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L111"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 59504,
										"name": "HookHandler",
										"package": "@medusajs/workflows-sdk"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 59561,
							"name": "workflowId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L112"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59562,
							"name": "flow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"target": 59732,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59563,
							"name": "isAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59564,
							"name": "handlers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": 59821,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59565,
							"name": "overriddenHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
								}
							],
							"type": {
								"type": "reference",
								"target": 59821,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59566,
							"name": "stepBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L117"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59567,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 117,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L117"
										}
									],
									"signatures": [
										{
											"id": 59568,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 59570,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 59569,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59491,
														"name": "StepFunctionResult",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59545,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59570,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 59571,
							"name": "hookBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59572,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 120,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
										}
									],
									"signatures": [
										{
											"id": 59573,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 59574,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59575,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59576,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 120,
																	"character": 33,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
																}
															],
															"signatures": [
																{
																	"id": 59577,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 59504,
																		"name": "HookHandler",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 59578,
							"name": "stepConditions_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L121"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 59579,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59580,
													"name": "condition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 124,
															"character": 6,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L124"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59581,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 124,
																	"character": 17,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L124"
																}
															],
															"signatures": [
																{
																	"id": 59582,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 59583,
																			"name": "args",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "reference",
																				"target": 59545,
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"id": 59584,
													"name": "input",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 125,
															"character": 6,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L125"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59580,
														59584
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 123,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L123"
												}
											]
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 59585,
							"name": "parallelizeBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L128"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59586,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 128,
											"character": 21,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L128"
										}
									],
									"signatures": [
										{
											"id": 59587,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 59592,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": 59545,
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																},
																{
																	"type": "intrinsic",
																	"name": "undefined"
																}
															]
														}
													},
													"default": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 59545,
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													}
												}
											],
											"parameters": [
												{
													"id": 59588,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59589,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 131,
																	"character": 8,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L131"
																}
															],
															"signatures": [
																{
																	"id": 59590,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 59591,
																			"name": "this",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 59553,
																				"name": "CreateWorkflowComposerContext",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59592,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59592,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59555,
								59556,
								59560,
								59561,
								59562,
								59563,
								59564,
								59565,
								59566,
								59571,
								59578,
								59585
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 105,
							"character": 44,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
						}
					]
				}
			}
		},
		{
			"id": 59593,
			"name": "StepExecutionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The step's context."
					}
				]
			},
			"children": [
				{
					"id": 59594,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the workflow."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 142,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L142"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59595,
					"name": "attempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attempt number of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 147,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L147"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 59596,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 152,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L152"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59597,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the parent step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 157,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L157"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59598,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to prevent release events."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 162,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L162"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59599,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 167,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L167"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59600,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The action of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 172,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L172"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "invoke"
							},
							{
								"type": "literal",
								"value": "compensate"
							}
						]
					}
				},
				{
					"id": 59601,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The container used to access resources, such as services, in the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 177,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L177"
						}
					],
					"type": {
						"type": "reference",
						"target": 59825,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 59602,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata passed in the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 181,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L181"
						}
					],
					"type": {
						"type": "reference",
						"target": 59846,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59603,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "inline-tag",
								"tag": "@inheritDoc",
								"text": "types!Context"
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 185,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L185"
						}
					],
					"type": {
						"type": "reference",
						"target": 59854,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 59604,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 189,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L189"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59605,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59606,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current run."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 198,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59607,
					"name": " getStepResult",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 206,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L206"
						}
					],
					"signatures": [
						{
							"id": 59608,
							"name": " getStepResult",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get access to the result returned by a named step. Returns undefined\nwhen step is not found or when nothing was returned.\n\nAdding a space hides the method from the autocomplete"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 206,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L206"
								}
							],
							"parameters": [
								{
									"id": 59609,
									"name": "stepId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59610,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 59611,
					"name": " stepDefinition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get access to the definition of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 211,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L211"
						}
					],
					"type": {
						"type": "reference",
						"target": 59675,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59594,
						59595,
						59596,
						59597,
						59598,
						59599,
						59600,
						59601,
						59602,
						59603,
						59604,
						59605,
						59606,
						59611
					]
				},
				{
					"title": "Methods",
					"children": [
						59607
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 138,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L138"
				}
			]
		},
		{
			"id": 59612,
			"name": "WorkflowTransactionContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 214,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L214"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59593,
						"name": "StepExecutionContext",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reference",
						"target": 59870,
						"name": "OriginalWorkflowTransactionContext",
						"package": "@medusajs/orchestration",
						"qualifiedName": "TransactionContext"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59613,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59614,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 216,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59615,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 216,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
												}
											],
											"indexSignatures": [
												{
													"id": 59616,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 216,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
														}
													],
													"parameters": [
														{
															"id": 59617,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59618,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59619,
																	"name": "output",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 216,
																			"character": 31,
																			"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		59619
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 216,
																	"character": 29,
																	"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L216"
																}
															]
														}
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59614
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 215,
									"character": 39,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L215"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59620,
			"name": "ReturnWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An exported workflow, which is the type of a workflow constructed by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "createWorkflow",
						"target": 59347
					},
					{
						"kind": "text",
						"text": " function. The exported workflow can be invoked to create\nan executable workflow, optionally within a specified container. So, to execute the workflow, you must invoke the exported workflow, then run the\n"
					},
					{
						"kind": "code",
						"text": "`run`"
					},
					{
						"kind": "text",
						"text": " method of the exported workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To execute a workflow:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nmyWorkflow()\n  .run({\n    input: {\n      name: \"John\"\n    }\n  })\n  .then(({ result }) => {\n    console.log(result)\n  })\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo specify the container of the workflow, you can pass it as an argument to the call of the exported workflow. This is necessary when executing the workflow\nwithin a Medusa resource such as an API Route or a Subscriber.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport type {\n  MedusaRequest,\n  MedusaResponse\n} from \"@medusajs/medusa\";\nimport myWorkflow from \"../../../workflows/hello-world\";\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        name: req.query.name as string\n      }\n    })\n\n  res.send(result)\n}\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 266,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L266"
				}
			],
			"typeParameters": [
				{
					"id": 59650,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59651,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 59652,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 59621,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 266,
									"character": 67,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L266"
								}
							],
							"signatures": [
								{
									"id": 59622,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 267,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L267"
										}
									],
									"typeParameters": [
										{
											"id": 59623,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 59624,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 59625,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 59825,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 59626,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 59627,
																		"name": "__joinerConfig",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 90,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 59879,
																			"name": "ModuleJoinerConfig",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"id": 59628,
																		"name": "__definition",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 91,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 59904,
																			"name": "ModuleDefinition",
																			"package": "@medusajs/types"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			59627,
																			59628
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 89,
																		"character": 37
																	}
																]
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59915,
														"name": "LocalWorkflow",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "run"
															},
															{
																"type": "literal",
																"value": "registerStepSuccess"
															},
															{
																"type": "literal",
																"value": "registerStepFailure"
															},
															{
																"type": "literal",
																"value": "cancel"
															},
															{
																"type": "literal",
																"value": "retryStep"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 60043,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59650,
														"name": "TData",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59651,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59623,
														"name": "TDataOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59624,
														"name": "TResultOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ExportedWorkflow",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59629,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59630,
									"name": "runAsStep",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/execute-another-workflow)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 287,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L287"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59631,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 287,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L287"
												}
											],
											"signatures": [
												{
													"id": 59632,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The workflow's result"
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 59633,
															"name": "{\n    input,\n  }",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 59634,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 59635,
																			"name": "input",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The workflow's input."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 293,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L293"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"target": 59650,
																						"name": "TData",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					},
																					{
																						"type": "reference",
																						"target": 59545,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 59650,
																								"name": "TData",
																								"package": "@medusajs/workflows-sdk",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "WorkflowData",
																						"package": "@medusajs/workflows-sdk"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				59635
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 289,
																			"character": 5,
																			"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L289"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 59511,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 59650,
																		"name": "TData",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 59651,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "StepFunction",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 59636,
									"name": "run",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes a workflow."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 301,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L301"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59637,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 301,
													"character": 7,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L301"
												}
											],
											"signatures": [
												{
													"id": 59638,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "Details of the workflow's execution, including its result."
																	}
																]
															}
														]
													},
													"typeParameters": [
														{
															"id": 59640,
															"name": "TDataOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 59641,
															"name": "TResultOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														}
													],
													"parameters": [
														{
															"id": 59639,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The options to execute the workflow."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Parameters"
																},
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "run"
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 60043,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 59650,
																					"name": "TData",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 59651,
																					"name": "TResult",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 59640,
																					"name": "TDataOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 59641,
																					"name": "TResultOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "ExportedWorkflow",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																],
																"name": "Parameters",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "run"
																},
																"objectType": {
																	"type": "reference",
																	"target": 60043,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 59650,
																			"name": "TData",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 59651,
																			"name": "TResult",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 59640,
																			"name": "TDataOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 59641,
																			"name": "TResultOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "ExportedWorkflow",
																	"package": "@medusajs/workflows-sdk"
																}
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 59642,
									"name": "getName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the workflow's name."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 311,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L311"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59643,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 311,
													"character": 11,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L311"
												}
											],
											"signatures": [
												{
													"id": 59644,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 59645,
									"name": "config",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method sets the workflow's configurations."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 315,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L315"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59646,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 315,
													"character": 10,
													"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L315"
												}
											],
											"signatures": [
												{
													"id": 59647,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 59648,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 59695,
																"name": "TransactionModelOptions",
																"package": "@medusajs/orchestration"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 59649,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks#how-to-consume-a-hook)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 321,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L321"
										}
									],
									"type": {
										"type": "reference",
										"target": 60069,
										"typeArguments": [
											{
												"type": "reference",
												"target": 59652,
												"name": "THooks",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "ConvertHooksToFunctions",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59630,
										59636,
										59642,
										59645,
										59649
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 278,
									"character": 4,
									"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L278"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59653,
			"name": "UnwrapWorkflowInputDataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Extract the raw type of the expected input data of a workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\ntype WorkflowInputData = UnwrapWorkflowInputDataType<typeof myWorkflow>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 330,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/ed0dafb24c10a68d27745d9f4268e622f4d9912c/packages/core/workflows-sdk/src/utils/composer/type.ts#L330"
				}
			],
			"typeParameters": [
				{
					"id": 59654,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 59620,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 59654,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 59620,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "TData"
						},
						{
							"type": "inferred",
							"name": "R"
						},
						{
							"type": "inferred",
							"name": "THooks"
						}
					],
					"name": "ReturnWorkflow",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
						"qualifiedName": "TData"
					},
					"name": "TData",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 60072,
			"name": "ConditionFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 7,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 60078,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 59545,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60073,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 7,
							"character": 58
						}
					],
					"signatures": [
						{
							"id": 60074,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 60075,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 60078,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 59545,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 60078,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 60078,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 60078,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 59545,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 60078,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 60076,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
															"line": 12,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 60077,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59593,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 60079,
			"name": "ThenFunc",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 16,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60080,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 16,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 60081,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 60083,
									"name": "ThenResolver",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 60084,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
													"line": 16,
													"character": 38
												}
											],
											"signatures": [
												{
													"id": 60085,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"parameters": [
								{
									"id": 60082,
									"name": "resolver",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 60083,
										"name": "ThenResolver",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 60083,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								},
								"extendsType": {
									"type": "reference",
									"target": 59545,
									"typeArguments": [
										{
											"type": "inferred",
											"name": "ReturnedWorkflowData"
										}
									],
									"name": "WorkflowData",
									"package": "@medusajs/workflows-sdk"
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 59545,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
														"qualifiedName": "ReturnedWorkflowData"
													},
													"name": "ReturnedWorkflowData",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "intrinsic",
											"name": "undefined"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 60083,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								}
							}
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				60142,
				60856,
				60876,
				60887
			]
		},
		{
			"title": "Classes",
			"children": [
				59870,
				60847,
				60807,
				60919,
				60310,
				60111,
				59703,
				59732,
				60513,
				60448,
				59915,
				59363,
				59393
			]
		},
		{
			"title": "Interfaces",
			"children": [
				60764,
				60120,
				60207,
				60141,
				60716,
				60159,
				60936,
				60699,
				60145,
				59854,
				59337,
				59593
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				59846,
				60755,
				59675,
				59695,
				60103,
				60227,
				60928,
				60893,
				60816,
				60223,
				59821,
				60086,
				59671,
				59825,
				60933,
				60894,
				60695,
				60706,
				60721,
				60912,
				60731,
				60185,
				60195,
				59904,
				60872,
				60905,
				60900,
				60179,
				59879,
				60174,
				60737,
				60864,
				60414,
				60418,
				60429,
				60423,
				60432,
				60408,
				60043,
				59419,
				59320,
				59328,
				59334,
				59715,
				59723,
				59491,
				59496,
				59730,
				59504,
				60441,
				60069,
				59508,
				59511,
				59540,
				59545,
				59553,
				59612,
				59620,
				59653,
				60072,
				60079
			]
		},
		{
			"title": "Variables",
			"children": [
				59714
			]
		},
		{
			"title": "Functions",
			"children": [
				59409,
				59292,
				59310,
				59347,
				59359,
				59430,
				59434
			]
		}
	],
	"packageName": "@medusajs/workflows-sdk",
	"symbolIdMap": {
		"59291": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts",
			"qualifiedName": ""
		},
		"59292": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "applyStep"
		},
		"59293": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "applyStep"
		},
		"59294": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"59295": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TStepInput"
		},
		"59296": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"59297": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"59298": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__0"
		},
		"59310": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"59311": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"59312": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"59313": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"59314": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"59315": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "nameOrConfig"
		},
		"59316": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59317": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"59318": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "invokeFn"
		},
		"59319": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "compensateFn"
		},
		"59320": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "InvokeFn"
		},
		"59321": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59322": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59323": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"59324": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"59325": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInput"
		},
		"59326": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TOutput"
		},
		"59327": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TCompensateInput"
		},
		"59328": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "CompensateFn"
		},
		"59329": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59330": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59331": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"59332": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"59333": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "T"
		},
		"59334": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "LocalStepConfig"
		},
		"59335": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"59336": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"59337": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions"
		},
		"59338": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepName"
		},
		"59339": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepConfig"
		},
		"59340": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.input"
		},
		"59341": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.invokeFn"
		},
		"59342": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.compensateFn"
		},
		"59343": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TStepInputs"
		},
		"59344": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeInput"
		},
		"59345": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultOutput"
		},
		"59346": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput"
		},
		"59347": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"59348": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"59349": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TData"
		},
		"59350": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResult"
		},
		"59351": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "THooks"
		},
		"59352": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "nameOrConfig"
		},
		"59353": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"59354": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type.name"
		},
		"59355": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "composer"
		},
		"59356": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"59357": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"59358": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "input"
		},
		"59359": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
			"qualifiedName": "resolveValue"
		},
		"59360": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
			"qualifiedName": "resolveValue"
		},
		"59361": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
			"qualifiedName": "input"
		},
		"59362": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/resolve-value.ts",
			"qualifiedName": "transactionContext"
		},
		"59363": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"59364": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"59365": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"59366": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "message"
		},
		"59367": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"59368": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"59369": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"59370": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.__constructor"
		},
		"59371": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"59372": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"59373": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"59374": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "output"
		},
		"59375": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"59391": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"59392": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"59393": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"59394": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__constructor"
		},
		"59395": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"59396": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"59397": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"59398": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "$result"
		},
		"59399": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "options"
		},
		"59400": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"59401": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"59402": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__type"
		},
		"59403": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.$result"
		},
		"59404": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.options"
		},
		"59405": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"59406": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"59407": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"59408": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"59409": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"59410": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"59411": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"59412": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeInput"
		},
		"59413": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeOutput"
		},
		"59414": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "name"
		},
		"59415": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "hookInput"
		},
		"59416": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "options"
		},
		"59417": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"59418": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.resultValidator"
		},
		"59419": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Hook"
		},
		"59420": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"59421": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.__type"
		},
		"59422": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.name"
		},
		"59423": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"59424": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"59425": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. output"
		},
		"59426": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. input"
		},
		"59427": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"59428": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Input"
		},
		"59429": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Output"
		},
		"59430": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"59431": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"59432": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "TResult"
		},
		"59433": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "steps"
		},
		"59434": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"59435": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"59436": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"59437": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "RFinal"
		},
		"59438": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "values"
		},
		"59439": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "func"
		},
		"59491": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionResult"
		},
		"59492": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59493": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59494": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"59495": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59496": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionReturnConfig"
		},
		"59497": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59498": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59499": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59500": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59501": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59502": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59503": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59504": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "HookHandler"
		},
		"59505": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59506": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59507": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"59508": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "Void"
		},
		"59509": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59510": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type. $$type"
		},
		"59511": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunction"
		},
		"59512": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59513": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59514": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"59515": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59516": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": " $$type"
		},
		"59517": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59518": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59519": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59520": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59521": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59522": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59523": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59524": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59525": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59526": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59527": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59528": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59529": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59530": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59531": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"59532": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59533": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59534": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59535": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59536": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59537": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59538": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TInput"
		},
		"59539": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59540": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowDataProperties"
		},
		"59541": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59542": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"59543": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"59544": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"59545": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowData"
		},
		"59546": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59547": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59548": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59549": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59550": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59551": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"59552": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"59553": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "CreateWorkflowComposerContext"
		},
		"59554": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59555": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"59556": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks_"
		},
		"59557": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59558": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.declared"
		},
		"59559": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.registered"
		},
		"59560": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooksCallback_"
		},
		"59561": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.workflowId"
		},
		"59562": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.flow"
		},
		"59563": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.isAsync"
		},
		"59564": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.handlers"
		},
		"59565": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.overriddenHandler"
		},
		"59566": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepBinder"
		},
		"59567": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59568": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59569": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"59570": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59571": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hookBinder"
		},
		"59572": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59573": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59574": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "name"
		},
		"59575": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"59576": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59577": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59578": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepConditions_"
		},
		"59579": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59580": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.condition"
		},
		"59581": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59582": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59583": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"59584": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"59585": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.parallelizeBinder"
		},
		"59586": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59587": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59588": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"59589": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59590": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59591": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"59592": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"59593": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext"
		},
		"59594": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.workflowId"
		},
		"59595": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.attempt"
		},
		"59596": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.idempotencyKey"
		},
		"59597": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.parentStepIdempotencyKey"
		},
		"59598": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.preventReleaseEvents"
		},
		"59599": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.stepName"
		},
		"59600": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.action"
		},
		"59601": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.container"
		},
		"59602": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.metadata"
		},
		"59603": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.context"
		},
		"59604": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.eventGroupId"
		},
		"59605": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.transactionId"
		},
		"59606": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.runId"
		},
		"59607": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"59608": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"59609": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "stepId"
		},
		"59610": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "action"
		},
		"59611": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. stepDefinition"
		},
		"59612": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowTransactionContext"
		},
		"59613": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59614": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.invoke"
		},
		"59615": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59616": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__index"
		},
		"59618": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59619": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.output"
		},
		"59620": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ReturnWorkflow"
		},
		"59621": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59622": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59623": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"59624": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"59625": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"59626": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59627": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"59628": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"59629": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59630": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"59631": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59632": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59634": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59635": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"59636": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"59637": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59638": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59639": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"59640": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"59641": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"59642": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"59643": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59644": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59645": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"59646": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59647": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59648": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"59649": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"59650": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TData"
		},
		"59651": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResult"
		},
		"59652": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"59653": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "UnwrapWorkflowInputDataType"
		},
		"59654": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"59671": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandler"
		},
		"59672": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"59673": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"59674": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "args"
		},
		"59675": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionStepsDefinition"
		},
		"59676": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59677": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"59678": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"59679": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"59680": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"59681": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"59682": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"59683": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.autoRetry"
		},
		"59684": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"59685": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"59686": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxAwaitingRetries"
		},
		"59687": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"59688": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"59689": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"59690": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"59691": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"59692": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"59693": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"59694": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.next"
		},
		"59695": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionModelOptions"
		},
		"59696": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59697": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"59698": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.store"
		},
		"59699": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retentionTime"
		},
		"59700": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.storeExecution"
		},
		"59701": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.idempotent"
		},
		"59702": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.schedule"
		},
		"59703": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"59704": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"59705": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"59706": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "error"
		},
		"59707": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.__constructor"
		},
		"59708": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"59709": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"59710": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"59711": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"59712": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"59713": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"59714": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/symbol.ts",
			"qualifiedName": "SymbolWorkflowHook"
		},
		"59715": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func1"
		},
		"59716": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59717": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59718": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"59719": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59720": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"59721": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"59722": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"59723": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func"
		},
		"59724": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59725": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"59726": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"59727": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"59728": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"59729": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"59730": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "KeysOfUnion"
		},
		"59731": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"59732": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"59733": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.__constructor"
		},
		"59734": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"59735": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59736": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.steps"
		},
		"59737": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges_"
		},
		"59738": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"59739": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"59740": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"59741": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"59742": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59743": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"59744": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"59745": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59746": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59747": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"59748": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"59749": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"59750": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59751": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59752": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"59753": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"59754": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"59755": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59756": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59757": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"59758": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"59759": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"59760": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59761": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59762": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"59763": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"59764": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"59765": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "newStep"
		},
		"59766": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"59767": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"59768": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59769": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "to"
		},
		"59770": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"59771": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"59772": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"59773": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"59774": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"59775": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__2"
		},
		"59776": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type"
		},
		"59777": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.runInParallel"
		},
		"59778": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.mergeNext"
		},
		"59779": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"59780": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"59781": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"59782": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"59783": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"59784": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"59785": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"59786": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"59787": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"59788": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"59789": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "where"
		},
		"59790": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actions"
		},
		"59791": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"59792": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"59793": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59794": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59795": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"59796": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"59797": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59798": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"59799": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"59800": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59801": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"59802": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"59803": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"59804": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59805": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59806": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"59807": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"59808": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"59809": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"59810": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"59811": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"59812": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"59813": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"59814": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"59815": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "startingStep"
		},
		"59816": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "parent"
		},
		"59817": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "incr"
		},
		"59818": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "beginFrom"
		},
		"59819": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"59820": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"59821": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowHandler"
		},
		"59822": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"59823": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"59824": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"59825": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"59826": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59827": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"59828": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"59829": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"59830": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"59831": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"59832": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"59833": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"59834": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"59835": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"59836": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"59837": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59838": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59839": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "name"
		},
		"59840": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "registration"
		},
		"59841": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"59842": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.createScope"
		},
		"59843": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59844": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"59845": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"59846": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionMetadata"
		},
		"59847": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"59848": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.model_id"
		},
		"59849": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"59850": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action"
		},
		"59851": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action_type"
		},
		"59852": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.attempt"
		},
		"59853": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.timestamp"
		},
		"59854": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"59855": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"59856": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"59857": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"59858": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"59859": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"59860": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"59861": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"59862": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.runId"
		},
		"59863": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"59864": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"59865": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"59866": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"59867": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"59868": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"59869": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"59870": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"59871": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.__constructor"
		},
		"59872": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"59873": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"59874": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "invoke"
		},
		"59875": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "compensate"
		},
		"59876": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.payload"
		},
		"59877": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.invoke"
		},
		"59878": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.compensate"
		},
		"59879": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"59880": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59881": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"59882": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"59883": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"59884": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59885": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"59886": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"59887": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"59888": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59889": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"59890": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"59891": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"59892": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"59893": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"59894": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"59895": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"59896": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"59897": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"59898": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"59899": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"59900": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59901": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"59902": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"59903": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"59904": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"59905": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59906": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"59907": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"59908": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"59909": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolvePath"
		},
		"59910": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"59911": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"59912": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"59913": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__passSharedContainer"
		},
		"59914": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"59915": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"59916": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.__constructor"
		},
		"59917": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"59918": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "workflowId"
		},
		"59919": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"59920": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59921": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"59922": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"59923": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container_"
		},
		"59924": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflowId"
		},
		"59925": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.flow"
		},
		"59926": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.customOptions"
		},
		"59927": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflow"
		},
		"59928": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.handlers"
		},
		"59929": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.medusaContext"
		},
		"59930": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"59931": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"59932": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"59933": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"59934": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59935": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"59936": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"59937": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.resolveContainer"
		},
		"59938": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.contextualizedMedusaModules"
		},
		"59939": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"59940": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"59941": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"59942": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"59943": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerEventCallbacks"
		},
		"59944": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"59945": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"59946": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"59947": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "input"
		},
		"59948": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"59949": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"59950": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "flowMetadata"
		},
		"59951": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59952": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"59953": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"59954": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"59955": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"59956": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"59957": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"59959": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"59960": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"59961": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"59962": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"59963": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"59964": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"59965": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "transactionOrTransactionId"
		},
		"59966": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "_"
		},
		"59967": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"59968": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"59969": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.retryStep"
		},
		"59970": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.retryStep"
		},
		"59971": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"59972": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"59973": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"59974": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"59975": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"59976": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"59977": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "response"
		},
		"59978": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"59979": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"59980": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"59981": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"59982": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"59983": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "error"
		},
		"59984": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"59985": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"59986": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "forcePermanentFailure"
		},
		"59987": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"59988": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"59989": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"59990": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"59991": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"59992": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"59993": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"59994": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"59995": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"59996": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"59997": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"59998": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"59999": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60000": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60001": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"60002": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"60003": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"60004": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60005": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60006": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60007": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"60008": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"60009": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"60010": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60011": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60012": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60013": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"60014": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"60015": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60016": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "to"
		},
		"60017": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60018": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"60019": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"60020": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"60021": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"60022": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"60023": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"60024": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"60025": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"60026": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"60027": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"60028": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"60029": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "where"
		},
		"60030": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actions"
		},
		"60031": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"60032": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"60033": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60034": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "parentSteps"
		},
		"60035": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"60036": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"60037": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60038": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"60039": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"60040": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"60041": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"60042": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.onLoad"
		},
		"60043": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "ExportedWorkflow"
		},
		"60044": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60045": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.run"
		},
		"60046": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60047": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60048": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60049": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepSuccess"
		},
		"60050": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60051": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60052": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60053": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepFailure"
		},
		"60054": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60055": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60056": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60057": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.retryStep"
		},
		"60058": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60059": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60060": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60061": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.cancel"
		},
		"60062": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60063": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60064": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"60065": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"60066": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"60067": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"60068": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"60069": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHooksToFunctions"
		},
		"60070": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"60071": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"60072": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ConditionFunction"
		},
		"60073": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60074": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60075": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "input"
		},
		"60076": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60077": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "context"
		},
		"60078": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "T"
		},
		"60079": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenFunc"
		},
		"60080": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60081": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60082": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "resolver"
		},
		"60083": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenResolver"
		},
		"60084": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60085": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"60086": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandlerArguments"
		},
		"60087": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60088": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.container"
		},
		"60089": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.payload"
		},
		"60090": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"60091": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60092": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"60094": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"60095": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60096": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"60098": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.metadata"
		},
		"60099": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.transaction"
		},
		"60100": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.step"
		},
		"60101": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.orchestrator"
		},
		"60102": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.context"
		},
		"60103": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "SchedulerOptions"
		},
		"60104": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60105": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.concurrency"
		},
		"60106": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.numberOfExecutions"
		},
		"60107": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60108": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cron"
		},
		"60109": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60110": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.interval"
		},
		"60111": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"60112": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.__constructor"
		},
		"60113": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"60114": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "name"
		},
		"60115": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"60116": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"60117": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"60118": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"60119": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"60120": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep"
		},
		"60121": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.next"
		},
		"60122": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.depth"
		},
		"60123": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.parent"
		},
		"60124": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"60125": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"60126": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"60127": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"60128": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"60129": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"60130": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.autoRetry"
		},
		"60131": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"60132": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"60133": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxAwaitingRetries"
		},
		"60134": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"60135": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"60136": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"60137": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"60138": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"60139": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"60140": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"60141": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"60142": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType"
		},
		"60143": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.INVOKE"
		},
		"60144": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.COMPENSATE"
		},
		"60145": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"60146": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"60147": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"60148": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"60149": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"60150": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"60151": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"60152": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"60153": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"60154": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"60155": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"60156": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"60157": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"60158": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"60159": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"60160": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"60161": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"60162": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"60163": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"60164": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"60165": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"60166": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"60167": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"60168": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"60169": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"60170": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"60171": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"60172": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"60173": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"60174": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"60175": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60176": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"60177": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.filterable"
		},
		"60178": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.hasMany"
		},
		"60179": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"60180": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60181": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"60182": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"60183": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"60184": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"60185": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"60186": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60187": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"60188": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"60189": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"60190": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"60191": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"60192": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"60193": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"60194": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"60195": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"60196": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60197": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"60198": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"60199": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"60200": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60201": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"60202": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"60203": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"60204": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"60205": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"60206": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"60207": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition"
		},
		"60208": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.id"
		},
		"60209": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handler"
		},
		"60210": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60211": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60212": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "container"
		},
		"60213": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "context"
		},
		"60214": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.orchestrator"
		},
		"60215": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.flow_"
		},
		"60216": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handlers_"
		},
		"60217": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"60218": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"60219": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"60220": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.options"
		},
		"60221": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.requiredModules"
		},
		"60222": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.optionalModules"
		},
		"60223": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "StepHandler"
		},
		"60224": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type"
		},
		"60225": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.invoke"
		},
		"60226": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.compensate"
		},
		"60227": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "DistributedTransactionEvents"
		},
		"60228": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60229": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onBegin"
		},
		"60230": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60231": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60232": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60233": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60234": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60235": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onResume"
		},
		"60236": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60237": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60238": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60239": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60240": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60241": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onFinish"
		},
		"60242": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60243": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60244": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60245": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60246": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60247": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.result"
		},
		"60248": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.errors"
		},
		"60249": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onTimeout"
		},
		"60250": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60251": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60252": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60253": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60254": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60255": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepBegin"
		},
		"60256": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60257": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60258": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60259": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60260": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60261": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60262": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSuccess"
		},
		"60263": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60264": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60265": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60266": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60267": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60268": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60269": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepFailure"
		},
		"60270": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60271": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60272": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60273": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60274": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60275": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60276": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepAwaiting"
		},
		"60277": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60278": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60279": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60280": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60281": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60282": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60283": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateBegin"
		},
		"60284": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60285": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60286": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60287": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60288": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60289": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepSuccess"
		},
		"60290": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60291": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60292": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60293": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60294": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60295": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60296": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepFailure"
		},
		"60297": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60298": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60299": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60300": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60301": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60302": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60303": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSkipped"
		},
		"60304": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60305": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60306": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"60307": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60308": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"60309": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"60310": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"60311": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyValueStore"
		},
		"60312": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"60313": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"60314": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "storage"
		},
		"60315": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyPrefix"
		},
		"60316": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"60317": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"60318": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "modelId"
		},
		"60319": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "transactionId"
		},
		"60320": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "options"
		},
		"60321": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"60322": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"60323": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.__constructor"
		},
		"60324": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"60325": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"60326": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handler"
		},
		"60327": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"60328": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"60329": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"60330": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.#private"
		},
		"60331": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.flow"
		},
		"60332": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.handler"
		},
		"60333": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.payload"
		},
		"60334": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.modelId"
		},
		"60335": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.transactionId"
		},
		"60336": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.runId"
		},
		"60337": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.errors"
		},
		"60338": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.context"
		},
		"60339": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"60340": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"60341": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"60342": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"60343": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"60344": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"60345": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"60346": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"60347": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"60348": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"60349": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"60350": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"60351": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"60352": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"60353": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"60354": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"60355": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "response"
		},
		"60356": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"60357": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"60358": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"60359": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"60360": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"60361": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"60362": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"60363": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"60364": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"60365": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"60366": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"60367": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"60368": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"60369": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"60370": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"60371": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"60372": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "ttl"
		},
		"60373": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"60374": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"60375": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"60376": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"60377": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"60378": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"60379": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"60380": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"60381": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"60382": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"60383": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"60384": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"60385": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"60386": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"60387": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"60388": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"60389": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"60390": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"60391": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"60392": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"60393": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"60394": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"60395": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"60396": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.key"
		},
		"60397": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "value"
		},
		"60398": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"60399": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"60400": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"60401": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"60402": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.key"
		},
		"60403": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"60404": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"60405": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"60406": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"60407": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.key"
		},
		"60408": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "WorkflowResult"
		},
		"60409": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60410": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.errors"
		},
		"60411": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"60412": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.result"
		},
		"60413": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"60414": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"60415": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60416": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.input"
		},
		"60417": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"60418": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepSuccessOptions"
		},
		"60419": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60420": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"60421": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"60422": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"60423": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepFailureOptions"
		},
		"60424": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60425": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"60426": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"60427": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.forcePermanentFailure"
		},
		"60428": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"60429": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRetryStepOptions"
		},
		"60430": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60431": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"60432": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowCancelOptions"
		},
		"60433": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60434": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"60435": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transactionId"
		},
		"60436": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"60437": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"60438": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"60439": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"60440": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"60441": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHookToObject"
		},
		"60442": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"60443": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"60444": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "invoke"
		},
		"60445": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "compensate"
		},
		"60446": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TCompensateInput"
		},
		"60447": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THook"
		},
		"60448": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep"
		},
		"60451": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.stepFailed"
		},
		"60452": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.id"
		},
		"60453": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.uuid"
		},
		"60454": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.depth"
		},
		"60455": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.definition"
		},
		"60456": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.invoke"
		},
		"60457": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60458": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"60459": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"60460": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.compensate"
		},
		"60461": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60462": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"60463": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"60464": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.attempts"
		},
		"60465": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.failures"
		},
		"60466": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.temporaryFailedAt"
		},
		"60467": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.lastAttempt"
		},
		"60468": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.retryRescheduledAt"
		},
		"60469": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasScheduledRetry"
		},
		"60470": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.timedOutAt"
		},
		"60471": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.startedAt"
		},
		"60472": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.next"
		},
		"60473": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.saveResponse"
		},
		"60474": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"60475": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"60476": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60477": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"60478": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"60479": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"60480": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"60481": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"60482": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"60483": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"60484": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"60485": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"60486": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"60487": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toState"
		},
		"60488": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"60489": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"60490": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toStatus"
		},
		"60491": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"60492": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"60493": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"60494": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"60495": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"60496": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"60497": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"60498": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"60499": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"60500": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"60501": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"60502": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"60503": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"60504": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"60505": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"60506": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"60507": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"60508": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"60509": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"60510": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"60511": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"60512": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"60513": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"60514": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.ROOT_STEP"
		},
		"60515": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_TTL"
		},
		"60516": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_RETRIES"
		},
		"60517": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.workflowOptions"
		},
		"60518": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"60519": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"60520": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "modelId"
		},
		"60521": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceTransaction"
		},
		"60522": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60523": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60524": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionResume"
		},
		"60525": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60526": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60527": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"60528": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"60529": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60530": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.model_id"
		},
		"60531": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"60532": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flow_metadata"
		},
		"60533": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60534": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"60535": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"60536": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"60537": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"60538": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"60539": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60541": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceStep"
		},
		"60542": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60543": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60544": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"60545": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60546": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60547": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"60548": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"60549": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60550": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.action"
		},
		"60551": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.type"
		},
		"60552": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_id"
		},
		"60553": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_uuid"
		},
		"60554": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.attempts"
		},
		"60555": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.failures"
		},
		"60556": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.async"
		},
		"60557": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"60558": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.isExpectedError"
		},
		"60559": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"60560": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"60561": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "orchestrator"
		},
		"60562": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.SEPARATOR"
		},
		"60563": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"60564": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"60565": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "params"
		},
		"60566": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepSuccess"
		},
		"60567": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retryStep"
		},
		"60568": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"60569": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepTimeout"
		},
		"60570": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepFailure"
		},
		"60571": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.loadTransactionById"
		},
		"60572": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.buildSteps"
		},
		"60573": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getStepByAction"
		},
		"60574": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getTransactionAndStepFromIdempotencyKey"
		},
		"60575": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.__constructor"
		},
		"60576": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"60577": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60578": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60579": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.id"
		},
		"60580": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.definition"
		},
		"60581": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.options"
		},
		"60582": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isClone"
		},
		"60583": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.id"
		},
		"60584": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.invokeSteps"
		},
		"60585": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.compensateSteps"
		},
		"60586": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.definition"
		},
		"60587": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.options"
		},
		"60588": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getPreviousStep"
		},
		"60589": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"60590": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"60591": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getInvokeSteps"
		},
		"60592": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getCompensationSteps"
		},
		"60593": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveForward"
		},
		"60594": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveBackward"
		},
		"60595": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canContinue"
		},
		"60596": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.hasExpired"
		},
		"60597": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkTransactionTimeout"
		},
		"60598": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkStepTimeout"
		},
		"60599": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkAllSteps"
		},
		"60600": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.computeCurrentTransactionState"
		},
		"60601": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.flagStepsToRevert"
		},
		"60602": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeNext"
		},
		"60603": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.finalizeTransaction"
		},
		"60604": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareStepForExecution"
		},
		"60605": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepPayload"
		},
		"60606": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareHandlerArgs"
		},
		"60607": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepExecutionPromise"
		},
		"60608": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeSyncStep"
		},
		"60609": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeAsyncStep"
		},
		"60610": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepExpiration"
		},
		"60611": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepSuccess"
		},
		"60612": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepFailure"
		},
		"60613": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"60614": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"60615": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60616": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"60617": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"60618": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60619": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "options"
		},
		"60620": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60621": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.preventExecuteNext"
		},
		"60622": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.parseFlowOptions"
		},
		"60623": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createTransactionFlow"
		},
		"60624": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"60625": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"60626": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60627": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60628": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transactionId"
		},
		"60629": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60630": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.payload"
		},
		"60631": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flowMetadata"
		},
		"60632": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60633": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"60634": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"60635": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"60636": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"60637": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"60638": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60640": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.context"
		},
		"60641": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"60642": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60643": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60644": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60645": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"60646": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"60647": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionId"
		},
		"60648": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"60649": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "options"
		},
		"60650": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60651": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"60652": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"60653": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"60654": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60655": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60656": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"60657": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60658": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"60659": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retryStep"
		},
		"60660": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retryStep"
		},
		"60661": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60662": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60663": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"60664": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60665": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"60666": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"60667": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60668": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60669": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60670": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"60671": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"60672": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60673": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60674": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"60675": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60676": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"60677": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.response"
		},
		"60678": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"60679": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60680": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60681": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60682": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"60683": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"60684": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"60685": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60686": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"60687": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.error"
		},
		"60688": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"60689": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"60690": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"60691": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60692": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"60693": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"60694": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.forcePermanentFailure"
		},
		"60695": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"60696": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"60697": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"60698": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"60699": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"60700": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"60701": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"60702": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"60703": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"60705": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"60706": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"60707": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"60708": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"60709": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"60710": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"60711": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"60712": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"60713": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"60714": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"60715": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"60716": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"60717": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"60718": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"60719": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.filterable"
		},
		"60720": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"60721": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"60722": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"60723": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"60724": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"60725": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"60726": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"60727": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"60728": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"60729": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"60730": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"60731": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"60732": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60733": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"60734": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"60735": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"60736": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"60737": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"60738": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60739": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"60740": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"60741": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"60742": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"60743": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"60744": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"60745": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"60746": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"60747": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"60748": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"60749": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"60750": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"60751": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"60752": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"60753": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.discoveryPath"
		},
		"60754": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"60755": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStepHandler"
		},
		"60756": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60757": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"60758": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "actionId"
		},
		"60759": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "handlerType"
		},
		"60760": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "payload"
		},
		"60761": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "transaction"
		},
		"60762": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "step"
		},
		"60763": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "orchestrator"
		},
		"60764": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage"
		},
		"60765": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"60766": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"60767": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"60768": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"60769": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type"
		},
		"60770": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"60771": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"60772": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"60773": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"60774": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "data"
		},
		"60775": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "ttl"
		},
		"60776": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"60777": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"60778": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"60779": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60780": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"60781": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"60782": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"60783": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"60784": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"60785": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60786": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"60787": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"60788": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"60789": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60790": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"60791": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"60792": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"60793": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"60794": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60795": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"60796": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"60797": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"60798": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"60799": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"60800": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60801": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"60802": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"60803": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"60804": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"60805": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearExpiredExecutions"
		},
		"60806": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearExpiredExecutions"
		},
		"60807": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"60808": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.__constructor"
		},
		"60809": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"60810": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"60811": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"60812": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"60813": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.flow"
		},
		"60814": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.context"
		},
		"60815": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.errors"
		},
		"60816": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionFlow"
		},
		"60817": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60818": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.modelId"
		},
		"60819": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.options"
		},
		"60820": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.definition"
		},
		"60821": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transactionId"
		},
		"60822": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.runId"
		},
		"60823": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.metadata"
		},
		"60824": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60825": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"60826": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"60827": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"60828": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"60829": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"60830": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60832": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"60833": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasFailedSteps"
		},
		"60834": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedOnFailureSteps"
		},
		"60835": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasWaitingSteps"
		},
		"60836": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedSteps"
		},
		"60837": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRevertedSteps"
		},
		"60838": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timedOutAt"
		},
		"60839": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.startedAt"
		},
		"60840": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelledAt"
		},
		"60841": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.temporaryFailedAt"
		},
		"60842": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.state"
		},
		"60843": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.steps"
		},
		"60844": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60845": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"60847": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"60848": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.__constructor"
		},
		"60849": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"60850": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"60851": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"60852": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"60853": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.action"
		},
		"60854": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.handlerType"
		},
		"60855": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.error"
		},
		"60856": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState"
		},
		"60857": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.NOT_STARTED"
		},
		"60858": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.INVOKING"
		},
		"60859": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.WAITING_TO_COMPENSATE"
		},
		"60860": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.COMPENSATING"
		},
		"60861": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.DONE"
		},
		"60862": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.REVERTED"
		},
		"60863": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.FAILED"
		},
		"60864": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "BaseFlowRunOptions"
		},
		"60865": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"60866": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"60867": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"60868": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"60869": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"60870": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"60871": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"60872": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"60873": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60874": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"60875": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"60876": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState"
		},
		"60877": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.NOT_STARTED"
		},
		"60878": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.INVOKING"
		},
		"60879": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.COMPENSATING"
		},
		"60880": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DONE"
		},
		"60881": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.REVERTED"
		},
		"60882": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.FAILED"
		},
		"60883": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DORMANT"
		},
		"60884": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED"
		},
		"60885": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED_FAILURE"
		},
		"60886": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.TIMEOUT"
		},
		"60887": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus"
		},
		"60888": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.IDLE"
		},
		"60889": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.OK"
		},
		"60890": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.WAITING"
		},
		"60891": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.TEMPORARY_FAILURE"
		},
		"60892": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.PERMANENT_FAILURE"
		},
		"60893": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionOptions"
		},
		"60894": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"60895": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"60896": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"60897": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"60898": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"60899": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"60900": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"60901": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60902": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60903": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"60904": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"60905": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"60906": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60907": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"60908": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"60909": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"60910": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"60911": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"60912": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"60913": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60914": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60915": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60916": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"60917": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"60918": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"60919": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"60920": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.__constructor"
		},
		"60921": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"60922": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "metadata"
		},
		"60923": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "data"
		},
		"60924": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"60925": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.metadata"
		},
		"60926": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.data"
		},
		"60927": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.context"
		},
		"60928": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "StepFeatures"
		},
		"60929": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"60930": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"60931": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasStepTimeouts"
		},
		"60932": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRetriesTimeout"
		},
		"60933": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"60934": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"60935": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"60936": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"60937": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"60938": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"60939": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"60940": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"60941": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"60942": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"60943": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"60944": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"60945": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"60946": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"60947": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"60948": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"60949": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"60950": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60951": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"60952": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"60953": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"60954": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"60955": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60956": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"60957": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"60958": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"60959": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"60960": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"60961": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"60962": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"60963": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60964": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"60965": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"60966": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"60967": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60968": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.silly"
		},
		"60969": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.silly"
		},
		"60970": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60971": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"60972": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"60973": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60974": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.verbose"
		},
		"60975": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.verbose"
		},
		"60976": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60977": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.http"
		},
		"60978": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.http"
		},
		"60979": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60980": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"60981": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"60982": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60983": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"60984": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"60985": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"60986": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"60987": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"60988": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts"
		},
		"reflections": {
			"1": 59291
		}
	}
}
