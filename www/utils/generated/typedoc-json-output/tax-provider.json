{
	"id": 46030,
	"name": "tax-provider",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 46031,
			"name": "ShippingTaxCalculationLine",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A shipping method and the tax rates configured to apply to the\nshipping method."
					}
				]
			},
			"sources": [
				{
					"fileName": "provider.ts",
					"line": 14,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L14"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46032,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 46033,
							"name": "shipping_line",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping method to calculate taxes for."
									}
								]
							},
							"sources": [
								{
									"fileName": "provider.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L18"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
									"qualifiedName": "TaxableShippingDTO"
								},
								"name": "TaxableShippingDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 46034,
							"name": "rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rates applicable on the shipping method."
									}
								]
							},
							"sources": [
								{
									"fileName": "provider.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L22"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
										"qualifiedName": "TaxRateDTO"
									},
									"name": "TaxRateDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								46033,
								46034
							]
						}
					],
					"sources": [
						{
							"fileName": "provider.ts",
							"line": 14,
							"character": 41,
							"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L14"
						}
					]
				}
			}
		},
		{
			"id": 46035,
			"name": "ItemTaxCalculationLine",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A line item and the tax rates configured to apply to the\nproduct contained in the line item."
					}
				]
			},
			"sources": [
				{
					"fileName": "provider.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L29"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46036,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 46037,
							"name": "line_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The line item to calculate taxes for."
									}
								]
							},
							"sources": [
								{
									"fileName": "provider.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
									"qualifiedName": "TaxableItemDTO"
								},
								"name": "TaxableItemDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 46038,
							"name": "rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rates applicable on the item."
									}
								]
							},
							"sources": [
								{
									"fileName": "provider.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L37"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
										"qualifiedName": "TaxRateDTO"
									},
									"name": "TaxRateDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								46037,
								46038
							]
						}
					],
					"sources": [
						{
							"fileName": "provider.ts",
							"line": 29,
							"character": 37,
							"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L29"
						}
					]
				}
			}
		},
		{
			"id": 46039,
			"name": "ITaxProvider",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "### Identifier Property\n\nEach tax provider has a unique identifier defined in its class. The provider's ID\nwill be stored as "
					},
					{
						"kind": "code",
						"text": "`tp_{identifier}_{id}`"
					},
					{
						"kind": "text",
						"text": ", where "
					},
					{
						"kind": "code",
						"text": "`{id}`"
					},
					{
						"kind": "text",
						"text": " is the provider's "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": "\nproperty in the "
					},
					{
						"kind": "code",
						"text": "`medusa-config.ts`"
					},
					{
						"kind": "text",
						"text": ".\n\nFor example:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts title=\"src/modules/my-tax/service.ts\"\nexport default class MyTaxProvider implements ITaxProvider {\n  static identifier = \"my-tax\"\n  // ...\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n### constructor\n\nYou can use the "
					},
					{
						"kind": "code",
						"text": "`constructor`"
					},
					{
						"kind": "text",
						"text": " of your tax provider to access the resources registered in the [Module Container](https://docs.medusajs.com/resources/medusa-container-resources#module-container-resources).\n\nYou can also use the constructor to initialize your integration with the third-party provider. For example, if you use a client to connect to the third-party provider’s APIs, you can initialize it in the constructor and use it in other methods in the service.\n\nAdditionally, if you’re creating your tax provider as a plugin or a module provider to be installed in any Medusa application and you want to access its options, you can access them in the second parameter of the constructor.\n\nFor example:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nexport default class MyTaxProvider implements ITaxProvider {\n  // ...\n  constructor(container, options) {\n    // you can access options here\n\n    // you can also initialize a client that\n    // communicates with a third-party service.\n    this.client = new Client(options)\n  }\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 46042,
					"name": "getTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "provider.ts",
							"line": 145,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L145"
						}
					],
					"signatures": [
						{
							"id": 46043,
							"name": "getTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve the tax lines of items and shipping methods. It's used during checkout \nwhen the "
									},
									{
										"kind": "code",
										"text": "`getTaxLines`"
									},
									{
										"kind": "text",
										"text": " method of the Tax Module's main service is called for a tax\nregion that uses this tax provider."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of calculated line item and shipping tax lines.\nIf an item in the array has the "
											},
											{
												"kind": "code",
												"text": "`shipping_line_id`"
											},
											{
												"kind": "text",
												"text": " property, then it's a shipping tax line. Otherwise, if it has\nthe "
											},
											{
												"kind": "code",
												"text": "`line_item_id`"
											},
											{
												"kind": "text",
												"text": " property, then it's a line item tax line."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of how this method is implemented in the "
											},
											{
												"kind": "code",
												"text": "`system`"
											},
											{
												"kind": "text",
												"text": " provider:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n// ...\n\nexport default class SystemTaxService implements ITaxProvider {\n  // ...\n\n  async getTaxLines(\n    itemLines: TaxTypes.ItemTaxCalculationLine[],\n    shippingLines: TaxTypes.ShippingTaxCalculationLine[],\n    _: TaxTypes.TaxCalculationContext\n  ): Promise<(TaxTypes.ItemTaxLineDTO | TaxTypes.ShippingTaxLineDTO)[]> {\n    let taxLines: (TaxTypes.ItemTaxLineDTO | TaxTypes.ShippingTaxLineDTO)[] =\n      itemLines.flatMap((l) => {\n        return l.rates.map((r) => ({\n          rate_id: r.id,\n          rate: r.rate || 0,\n          name: r.name,\n          code: r.code,\n          line_item_id: l.line_item.id,\n          provider_id: this.getIdentifier(),\n        }))\n      })\n\n    taxLines = taxLines.concat(\n      shippingLines.flatMap((l) => {\n        return l.rates.map((r) => ({\n          rate_id: r.id,\n          rate: r.rate || 0,\n          name: r.name,\n          code: r.code,\n          shipping_line_id: l.shipping_line.id,\n          provider_id: this.getIdentifier(),\n        }))\n      })\n    )\n\n    return taxLines\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "provider.ts",
									"line": 145,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L145"
								}
							],
							"parameters": [
								{
									"id": 46044,
									"name": "itemLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item lines to calculate taxes for."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 46035,
											"name": "ItemTaxCalculationLine",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 46045,
									"name": "shippingLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method lines to calculate taxes for."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 46031,
											"name": "ShippingTaxCalculationLine",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 46046,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context relevant and useful for the taxes calculation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
											"qualifiedName": "TaxCalculationContext"
										},
										"name": "TaxCalculationContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
														"qualifiedName": "ItemTaxLineDTO"
													},
													"name": "ItemTaxLineDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/tax/common.ts",
														"qualifiedName": "ShippingTaxLineDTO"
													},
													"name": "ShippingTaxLineDTO",
													"package": "@medusajs/types"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						46042
					]
				}
			],
			"sources": [
				{
					"fileName": "provider.ts",
					"line": 83,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/9069e9279ee230384cf09c553f60ab6caa0e7012/packages/core/types/src/tax/provider.ts#L83"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				46039
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				46031,
				46035
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"46030": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": ""
		},
		"46031": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "ShippingTaxCalculationLine"
		},
		"46032": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "__type"
		},
		"46033": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "__type.shipping_line"
		},
		"46034": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "__type.rates"
		},
		"46035": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "ItemTaxCalculationLine"
		},
		"46036": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "__type"
		},
		"46037": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "__type.line_item"
		},
		"46038": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "__type.rates"
		},
		"46039": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "ITaxProvider"
		},
		"46042": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "ITaxProvider.getTaxLines"
		},
		"46043": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "ITaxProvider.getTaxLines"
		},
		"46044": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "itemLines"
		},
		"46045": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "shippingLines"
		},
		"46046": {
			"sourceFileName": "../../../../packages/core/types/src/tax/provider.ts",
			"qualifiedName": "context"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/tax/provider.ts"
		},
		"reflections": {
			"1": 46030
		}
	}
}
